/* A Bison parser, made by GNU Bison 1.875c.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Written by Richard Stallman by simplifying the original so called
   ``semantic'' parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0



/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     END_OF_INPUT = 258,
     ABORT_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     ATAN = 277,
     AUTO_INC = 278,
     AVG_ROW_LENGTH = 279,
     AVG_SYM = 280,
     BACKUP_SYM = 281,
     BEFORE_SYM = 282,
     BEGIN_SYM = 283,
     BENCHMARK_SYM = 284,
     BERKELEY_DB_SYM = 285,
     BIGINT = 286,
     BINARY = 287,
     BINLOG_SYM = 288,
     BIN_NUM = 289,
     BIT_AND = 290,
     BIT_OR = 291,
     BIT_SYM = 292,
     BIT_XOR = 293,
     BLOB_SYM = 294,
     BOOLEAN_SYM = 295,
     BOOL_SYM = 296,
     BOTH = 297,
     BTREE_SYM = 298,
     BY = 299,
     BYTE_SYM = 300,
     CACHE_SYM = 301,
     CALL_SYM = 302,
     CASCADE = 303,
     CASCADED = 304,
     CAST_SYM = 305,
     CHAIN_SYM = 306,
     CHANGE = 307,
     CHANGED = 308,
     CHARSET = 309,
     CHAR_SYM = 310,
     CHECKSUM_SYM = 311,
     CHECK_SYM = 312,
     CIPHER_SYM = 313,
     CLIENT_SYM = 314,
     CLOSE_SYM = 315,
     COALESCE = 316,
     CODE_SYM = 317,
     COLLATE_SYM = 318,
     COLLATION_SYM = 319,
     COLUMNS = 320,
     COLUMN_SYM = 321,
     COMMENT_SYM = 322,
     COMMITTED_SYM = 323,
     COMMIT_SYM = 324,
     COMPACT_SYM = 325,
     COMPRESSED_SYM = 326,
     CONCAT = 327,
     CONCAT_WS = 328,
     CONCURRENT = 329,
     CONDITION_SYM = 330,
     CONNECTION_SYM = 331,
     CONSISTENT_SYM = 332,
     CONSTRAINT = 333,
     CONTAINS_SYM = 334,
     CONTINUE_SYM = 335,
     CONVERT_SYM = 336,
     CONVERT_TZ_SYM = 337,
     COUNT_SYM = 338,
     CREATE = 339,
     CROSS = 340,
     CUBE_SYM = 341,
     CURDATE = 342,
     CURRENT_USER = 343,
     CURSOR_SYM = 344,
     CURTIME = 345,
     DATABASE = 346,
     DATABASES = 347,
     DATA_SYM = 348,
     DATETIME = 349,
     DATE_ADD_INTERVAL = 350,
     DATE_SUB_INTERVAL = 351,
     DATE_SYM = 352,
     DAY_HOUR_SYM = 353,
     DAY_MICROSECOND_SYM = 354,
     DAY_MINUTE_SYM = 355,
     DAY_SECOND_SYM = 356,
     DAY_SYM = 357,
     DEALLOCATE_SYM = 358,
     DECIMAL_NUM = 359,
     DECIMAL_SYM = 360,
     DECLARE_SYM = 361,
     DECODE_SYM = 362,
     DEFAULT = 363,
     DEFINER_SYM = 364,
     DELAYED_SYM = 365,
     DELAY_KEY_WRITE_SYM = 366,
     DELETE_SYM = 367,
     DESC = 368,
     DESCRIBE = 369,
     DES_DECRYPT_SYM = 370,
     DES_ENCRYPT_SYM = 371,
     DES_KEY_FILE = 372,
     DETERMINISTIC_SYM = 373,
     DIRECTORY_SYM = 374,
     DISABLE_SYM = 375,
     DISCARD = 376,
     DISTINCT = 377,
     DIV_SYM = 378,
     DOUBLE_SYM = 379,
     DO_SYM = 380,
     DROP = 381,
     DUAL_SYM = 382,
     DUMPFILE = 383,
     DUPLICATE_SYM = 384,
     DYNAMIC_SYM = 385,
     EACH_SYM = 386,
     ELSEIF_SYM = 387,
     ELT_FUNC = 388,
     ENABLE_SYM = 389,
     ENCLOSED = 390,
     ENCODE_SYM = 391,
     ENCRYPT = 392,
     END = 393,
     ENGINES_SYM = 394,
     ENGINE_SYM = 395,
     ENUM = 396,
     EQ = 397,
     EQUAL_SYM = 398,
     ERRORS = 399,
     ESCAPED = 400,
     ESCAPE_SYM = 401,
     EVENTS_SYM = 402,
     EXECUTE_SYM = 403,
     EXISTS = 404,
     EXIT_SYM = 405,
     EXPANSION_SYM = 406,
     EXPORT_SET = 407,
     EXTENDED_SYM = 408,
     EXTRACT_SYM = 409,
     FALSE_SYM = 410,
     FAST_SYM = 411,
     FETCH_SYM = 412,
     FIELD_FUNC = 413,
     FILE_SYM = 414,
     FIRST_SYM = 415,
     FIXED_SYM = 416,
     FLOAT_NUM = 417,
     FLOAT_SYM = 418,
     FLUSH_SYM = 419,
     FORCE_SYM = 420,
     FOREIGN = 421,
     FORMAT_SYM = 422,
     FOR_SYM = 423,
     FOUND_SYM = 424,
     FRAC_SECOND_SYM = 425,
     FROM = 426,
     FROM_UNIXTIME = 427,
     FULL = 428,
     FULLTEXT_SYM = 429,
     FUNCTION_SYM = 430,
     FUNC_ARG0 = 431,
     FUNC_ARG1 = 432,
     FUNC_ARG2 = 433,
     FUNC_ARG3 = 434,
     GE = 435,
     GEOMCOLLFROMTEXT = 436,
     GEOMETRYCOLLECTION = 437,
     GEOMETRY_SYM = 438,
     GEOMFROMTEXT = 439,
     GEOMFROMWKB = 440,
     GET_FORMAT = 441,
     GLOBAL_SYM = 442,
     GOTO_SYM = 443,
     GRANT = 444,
     GRANTS = 445,
     GREATEST_SYM = 446,
     GROUP = 447,
     GROUP_CONCAT_SYM = 448,
     GROUP_UNIQUE_USERS = 449,
     GT_SYM = 450,
     HANDLER_SYM = 451,
     HASH_SYM = 452,
     HAVING = 453,
     HELP_SYM = 454,
     HEX_NUM = 455,
     HIGH_PRIORITY = 456,
     HOSTS_SYM = 457,
     HOUR_MICROSECOND_SYM = 458,
     HOUR_MINUTE_SYM = 459,
     HOUR_SECOND_SYM = 460,
     HOUR_SYM = 461,
     IDENT = 462,
     IDENTIFIED_SYM = 463,
     IDENT_QUOTED = 464,
     IF = 465,
     IGNORE_SYM = 466,
     IMPORT = 467,
     INDEXES = 468,
     INDEX_SYM = 469,
     INFILE = 470,
     INNER_SYM = 471,
     INNOBASE_SYM = 472,
     INOUT_SYM = 473,
     INSENSITIVE_SYM = 474,
     INSERT = 475,
     INSERT_METHOD = 476,
     INTERVAL_SYM = 477,
     INTO = 478,
     INT_SYM = 479,
     INVOKER_SYM = 480,
     IN_SYM = 481,
     IS = 482,
     ISOLATION = 483,
     ISSUER_SYM = 484,
     ITERATE_SYM = 485,
     JOIN_SYM = 486,
     KEYS = 487,
     KEY_SYM = 488,
     KILL_SYM = 489,
     LABEL_SYM = 490,
     LANGUAGE_SYM = 491,
     LAST_INSERT_ID = 492,
     LAST_SYM = 493,
     LE = 494,
     LEADING = 495,
     LEAST_SYM = 496,
     LEAVES = 497,
     LEAVE_SYM = 498,
     LEFT = 499,
     LEVEL_SYM = 500,
     LEX_HOSTNAME = 501,
     LIKE = 502,
     LIMIT = 503,
     LINEFROMTEXT = 504,
     LINES = 505,
     LINESTRING = 506,
     LOAD = 507,
     LOCAL_SYM = 508,
     LOCATE = 509,
     LOCATOR_SYM = 510,
     LOCKS_SYM = 511,
     LOCK_SYM = 512,
     LOGS_SYM = 513,
     LOG_SYM = 514,
     LONGBLOB = 515,
     LONGTEXT = 516,
     LONG_NUM = 517,
     LONG_SYM = 518,
     LOOP_SYM = 519,
     LOW_PRIORITY = 520,
     LT = 521,
     MAKE_SET_SYM = 522,
     MASTER_CONNECT_RETRY_SYM = 523,
     MASTER_HOST_SYM = 524,
     MASTER_LOG_FILE_SYM = 525,
     MASTER_LOG_POS_SYM = 526,
     MASTER_PASSWORD_SYM = 527,
     MASTER_PORT_SYM = 528,
     MASTER_POS_WAIT = 529,
     MASTER_SERVER_ID_SYM = 530,
     MASTER_SSL_CAPATH_SYM = 531,
     MASTER_SSL_CA_SYM = 532,
     MASTER_SSL_CERT_SYM = 533,
     MASTER_SSL_CIPHER_SYM = 534,
     MASTER_SSL_KEY_SYM = 535,
     MASTER_SSL_SYM = 536,
     MASTER_SYM = 537,
     MASTER_USER_SYM = 538,
     MATCH = 539,
     MAX_CONNECTIONS_PER_HOUR = 540,
     MAX_QUERIES_PER_HOUR = 541,
     MAX_ROWS = 542,
     MAX_SYM = 543,
     MAX_UPDATES_PER_HOUR = 544,
     MAX_USER_CONNECTIONS_SYM = 545,
     MEDIUMBLOB = 546,
     MEDIUMINT = 547,
     MEDIUMTEXT = 548,
     MEDIUM_SYM = 549,
     MERGE_SYM = 550,
     MICROSECOND_SYM = 551,
     MIGRATE_SYM = 552,
     MINUTE_MICROSECOND_SYM = 553,
     MINUTE_SECOND_SYM = 554,
     MINUTE_SYM = 555,
     MIN_ROWS = 556,
     MIN_SYM = 557,
     MLINEFROMTEXT = 558,
     MODE_SYM = 559,
     MODIFIES_SYM = 560,
     MODIFY_SYM = 561,
     MOD_SYM = 562,
     MONTH_SYM = 563,
     MPOINTFROMTEXT = 564,
     MPOLYFROMTEXT = 565,
     MULTILINESTRING = 566,
     MULTIPOINT = 567,
     MULTIPOLYGON = 568,
     MUTEX_SYM = 569,
     NAMES_SYM = 570,
     NAME_SYM = 571,
     NATIONAL_SYM = 572,
     NATURAL = 573,
     NCHAR_STRING = 574,
     NCHAR_SYM = 575,
     NDBCLUSTER_SYM = 576,
     NE = 577,
     NEW_SYM = 578,
     NEXT_SYM = 579,
     NONE_SYM = 580,
     NOT2_SYM = 581,
     NOT_SYM = 582,
     NOW_SYM = 583,
     NO_SYM = 584,
     NO_WRITE_TO_BINLOG = 585,
     NULL_SYM = 586,
     NUM = 587,
     NUMERIC_SYM = 588,
     NVARCHAR_SYM = 589,
     OFFSET_SYM = 590,
     OLD_PASSWORD = 591,
     ON = 592,
     ONE_SHOT_SYM = 593,
     ONE_SYM = 594,
     OPEN_SYM = 595,
     OPTIMIZE = 596,
     OPTION = 597,
     OPTIONALLY = 598,
     OR2_SYM = 599,
     ORDER_SYM = 600,
     OR_OR_SYM = 601,
     OR_SYM = 602,
     OUTER = 603,
     OUTFILE = 604,
     OUT_SYM = 605,
     PACK_KEYS_SYM = 606,
     PARTIAL = 607,
     PASSWORD = 608,
     PARAM_MARKER = 609,
     PHASE_SYM = 610,
     POINTFROMTEXT = 611,
     POINT_SYM = 612,
     POLYFROMTEXT = 613,
     POLYGON = 614,
     POSITION_SYM = 615,
     PRECISION = 616,
     PREPARE_SYM = 617,
     PREV_SYM = 618,
     PRIMARY_SYM = 619,
     PRIVILEGES = 620,
     PROCEDURE = 621,
     PROCESS = 622,
     PROCESSLIST_SYM = 623,
     PURGE = 624,
     QUARTER_SYM = 625,
     QUERY_SYM = 626,
     QUICK = 627,
     RAID_0_SYM = 628,
     RAID_CHUNKS = 629,
     RAID_CHUNKSIZE = 630,
     RAID_STRIPED_SYM = 631,
     RAID_TYPE = 632,
     RAND = 633,
     READS_SYM = 634,
     READ_SYM = 635,
     REAL = 636,
     RECOVER_SYM = 637,
     REDUNDANT_SYM = 638,
     REFERENCES = 639,
     REGEXP = 640,
     RELAY_LOG_FILE_SYM = 641,
     RELAY_LOG_POS_SYM = 642,
     RELAY_THREAD = 643,
     RELEASE_SYM = 644,
     RELOAD = 645,
     RENAME = 646,
     REPAIR = 647,
     REPEATABLE_SYM = 648,
     REPEAT_SYM = 649,
     REPLACE = 650,
     REPLICATION = 651,
     REQUIRE_SYM = 652,
     RESET_SYM = 653,
     RESOURCES = 654,
     RESTORE_SYM = 655,
     RESTRICT = 656,
     RESUME_SYM = 657,
     RETURNS_SYM = 658,
     RETURN_SYM = 659,
     REVOKE = 660,
     RIGHT = 661,
     ROLLBACK_SYM = 662,
     ROLLUP_SYM = 663,
     ROUND = 664,
     ROUTINE_SYM = 665,
     ROWS_SYM = 666,
     ROW_COUNT_SYM = 667,
     ROW_FORMAT_SYM = 668,
     ROW_SYM = 669,
     RTREE_SYM = 670,
     SAVEPOINT_SYM = 671,
     SECOND_MICROSECOND_SYM = 672,
     SECOND_SYM = 673,
     SECURITY_SYM = 674,
     SELECT_SYM = 675,
     SENSITIVE_SYM = 676,
     SEPARATOR_SYM = 677,
     SERIALIZABLE_SYM = 678,
     SERIAL_SYM = 679,
     SESSION_SYM = 680,
     SET = 681,
     SET_VAR = 682,
     SHARE_SYM = 683,
     SHIFT_LEFT = 684,
     SHIFT_RIGHT = 685,
     SHOW = 686,
     SHUTDOWN = 687,
     SIGNED_SYM = 688,
     SIMPLE_SYM = 689,
     SLAVE = 690,
     SMALLINT = 691,
     SNAPSHOT_SYM = 692,
     SOUNDS_SYM = 693,
     SPATIAL_SYM = 694,
     SPECIFIC_SYM = 695,
     SQLEXCEPTION_SYM = 696,
     SQLSTATE_SYM = 697,
     SQLWARNING_SYM = 698,
     SQL_BIG_RESULT = 699,
     SQL_BUFFER_RESULT = 700,
     SQL_CACHE_SYM = 701,
     SQL_CALC_FOUND_ROWS = 702,
     SQL_NO_CACHE_SYM = 703,
     SQL_SMALL_RESULT = 704,
     SQL_SYM = 705,
     SQL_THREAD = 706,
     SSL_SYM = 707,
     STARTING = 708,
     START_SYM = 709,
     STATUS_SYM = 710,
     STD_SYM = 711,
     STDDEV_SAMP_SYM = 712,
     STOP_SYM = 713,
     STORAGE_SYM = 714,
     STRAIGHT_JOIN = 715,
     STRING_SYM = 716,
     SUBDATE_SYM = 717,
     SUBJECT_SYM = 718,
     SUBSTRING = 719,
     SUBSTRING_INDEX = 720,
     SUM_SYM = 721,
     SUPER_SYM = 722,
     SUSPEND_SYM = 723,
     SYSDATE = 724,
     TABLES = 725,
     TABLESPACE = 726,
     TABLE_SYM = 727,
     TEMPORARY = 728,
     TEMPTABLE_SYM = 729,
     TERMINATED = 730,
     TEXT_STRING = 731,
     TEXT_SYM = 732,
     TIMESTAMP = 733,
     TIMESTAMP_ADD = 734,
     TIMESTAMP_DIFF = 735,
     TIME_SYM = 736,
     TINYBLOB = 737,
     TINYINT = 738,
     TINYTEXT = 739,
     TO_SYM = 740,
     TRAILING = 741,
     TRANSACTION_SYM = 742,
     TRIGGER_SYM = 743,
     TRIGGERS_SYM = 744,
     TRIM = 745,
     TRUE_SYM = 746,
     TRUNCATE_SYM = 747,
     TYPES_SYM = 748,
     TYPE_SYM = 749,
     UDF_RETURNS_SYM = 750,
     UDF_SONAME_SYM = 751,
     ULONGLONG_NUM = 752,
     UNCOMMITTED_SYM = 753,
     UNDEFINED_SYM = 754,
     UNDERSCORE_CHARSET = 755,
     UNDO_SYM = 756,
     UNICODE_SYM = 757,
     UNION_SYM = 758,
     UNIQUE_SYM = 759,
     UNIQUE_USERS = 760,
     UNIX_TIMESTAMP = 761,
     UNKNOWN_SYM = 762,
     UNLOCK_SYM = 763,
     UNSIGNED = 764,
     UNTIL_SYM = 765,
     UPDATE_SYM = 766,
     USAGE = 767,
     USER = 768,
     USE_FRM = 769,
     USE_SYM = 770,
     USING = 771,
     UTC_DATE_SYM = 772,
     UTC_TIMESTAMP_SYM = 773,
     UTC_TIME_SYM = 774,
     VAR_SAMP_SYM = 775,
     VALUES = 776,
     VALUE_SYM = 777,
     VARBINARY = 778,
     VARCHAR = 779,
     VARIABLES = 780,
     VARIANCE_SYM = 781,
     VARYING = 782,
     VIEW_SYM = 783,
     WARNINGS = 784,
     WEEK_SYM = 785,
     WHEN_SYM = 786,
     WHERE = 787,
     WHILE_SYM = 788,
     WITH = 789,
     WORK_SYM = 790,
     WRITE_SYM = 791,
     X509_SYM = 792,
     XA_SYM = 793,
     XOR = 794,
     YEARWEEK = 795,
     YEAR_MONTH_SYM = 796,
     YEAR_SYM = 797,
     ZEROFILL = 798,
     TABLE_REF_PRIORITY = 799,
     ELSE = 800,
     THEN_SYM = 801,
     CASE_SYM = 802,
     BETWEEN_SYM = 803,
     NEG = 804
   };
#endif
#define END_OF_INPUT 258
#define ABORT_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define ATAN 277
#define AUTO_INC 278
#define AVG_ROW_LENGTH 279
#define AVG_SYM 280
#define BACKUP_SYM 281
#define BEFORE_SYM 282
#define BEGIN_SYM 283
#define BENCHMARK_SYM 284
#define BERKELEY_DB_SYM 285
#define BIGINT 286
#define BINARY 287
#define BINLOG_SYM 288
#define BIN_NUM 289
#define BIT_AND 290
#define BIT_OR 291
#define BIT_SYM 292
#define BIT_XOR 293
#define BLOB_SYM 294
#define BOOLEAN_SYM 295
#define BOOL_SYM 296
#define BOTH 297
#define BTREE_SYM 298
#define BY 299
#define BYTE_SYM 300
#define CACHE_SYM 301
#define CALL_SYM 302
#define CASCADE 303
#define CASCADED 304
#define CAST_SYM 305
#define CHAIN_SYM 306
#define CHANGE 307
#define CHANGED 308
#define CHARSET 309
#define CHAR_SYM 310
#define CHECKSUM_SYM 311
#define CHECK_SYM 312
#define CIPHER_SYM 313
#define CLIENT_SYM 314
#define CLOSE_SYM 315
#define COALESCE 316
#define CODE_SYM 317
#define COLLATE_SYM 318
#define COLLATION_SYM 319
#define COLUMNS 320
#define COLUMN_SYM 321
#define COMMENT_SYM 322
#define COMMITTED_SYM 323
#define COMMIT_SYM 324
#define COMPACT_SYM 325
#define COMPRESSED_SYM 326
#define CONCAT 327
#define CONCAT_WS 328
#define CONCURRENT 329
#define CONDITION_SYM 330
#define CONNECTION_SYM 331
#define CONSISTENT_SYM 332
#define CONSTRAINT 333
#define CONTAINS_SYM 334
#define CONTINUE_SYM 335
#define CONVERT_SYM 336
#define CONVERT_TZ_SYM 337
#define COUNT_SYM 338
#define CREATE 339
#define CROSS 340
#define CUBE_SYM 341
#define CURDATE 342
#define CURRENT_USER 343
#define CURSOR_SYM 344
#define CURTIME 345
#define DATABASE 346
#define DATABASES 347
#define DATA_SYM 348
#define DATETIME 349
#define DATE_ADD_INTERVAL 350
#define DATE_SUB_INTERVAL 351
#define DATE_SYM 352
#define DAY_HOUR_SYM 353
#define DAY_MICROSECOND_SYM 354
#define DAY_MINUTE_SYM 355
#define DAY_SECOND_SYM 356
#define DAY_SYM 357
#define DEALLOCATE_SYM 358
#define DECIMAL_NUM 359
#define DECIMAL_SYM 360
#define DECLARE_SYM 361
#define DECODE_SYM 362
#define DEFAULT 363
#define DEFINER_SYM 364
#define DELAYED_SYM 365
#define DELAY_KEY_WRITE_SYM 366
#define DELETE_SYM 367
#define DESC 368
#define DESCRIBE 369
#define DES_DECRYPT_SYM 370
#define DES_ENCRYPT_SYM 371
#define DES_KEY_FILE 372
#define DETERMINISTIC_SYM 373
#define DIRECTORY_SYM 374
#define DISABLE_SYM 375
#define DISCARD 376
#define DISTINCT 377
#define DIV_SYM 378
#define DOUBLE_SYM 379
#define DO_SYM 380
#define DROP 381
#define DUAL_SYM 382
#define DUMPFILE 383
#define DUPLICATE_SYM 384
#define DYNAMIC_SYM 385
#define EACH_SYM 386
#define ELSEIF_SYM 387
#define ELT_FUNC 388
#define ENABLE_SYM 389
#define ENCLOSED 390
#define ENCODE_SYM 391
#define ENCRYPT 392
#define END 393
#define ENGINES_SYM 394
#define ENGINE_SYM 395
#define ENUM 396
#define EQ 397
#define EQUAL_SYM 398
#define ERRORS 399
#define ESCAPED 400
#define ESCAPE_SYM 401
#define EVENTS_SYM 402
#define EXECUTE_SYM 403
#define EXISTS 404
#define EXIT_SYM 405
#define EXPANSION_SYM 406
#define EXPORT_SET 407
#define EXTENDED_SYM 408
#define EXTRACT_SYM 409
#define FALSE_SYM 410
#define FAST_SYM 411
#define FETCH_SYM 412
#define FIELD_FUNC 413
#define FILE_SYM 414
#define FIRST_SYM 415
#define FIXED_SYM 416
#define FLOAT_NUM 417
#define FLOAT_SYM 418
#define FLUSH_SYM 419
#define FORCE_SYM 420
#define FOREIGN 421
#define FORMAT_SYM 422
#define FOR_SYM 423
#define FOUND_SYM 424
#define FRAC_SECOND_SYM 425
#define FROM 426
#define FROM_UNIXTIME 427
#define FULL 428
#define FULLTEXT_SYM 429
#define FUNCTION_SYM 430
#define FUNC_ARG0 431
#define FUNC_ARG1 432
#define FUNC_ARG2 433
#define FUNC_ARG3 434
#define GE 435
#define GEOMCOLLFROMTEXT 436
#define GEOMETRYCOLLECTION 437
#define GEOMETRY_SYM 438
#define GEOMFROMTEXT 439
#define GEOMFROMWKB 440
#define GET_FORMAT 441
#define GLOBAL_SYM 442
#define GOTO_SYM 443
#define GRANT 444
#define GRANTS 445
#define GREATEST_SYM 446
#define GROUP 447
#define GROUP_CONCAT_SYM 448
#define GROUP_UNIQUE_USERS 449
#define GT_SYM 450
#define HANDLER_SYM 451
#define HASH_SYM 452
#define HAVING 453
#define HELP_SYM 454
#define HEX_NUM 455
#define HIGH_PRIORITY 456
#define HOSTS_SYM 457
#define HOUR_MICROSECOND_SYM 458
#define HOUR_MINUTE_SYM 459
#define HOUR_SECOND_SYM 460
#define HOUR_SYM 461
#define IDENT 462
#define IDENTIFIED_SYM 463
#define IDENT_QUOTED 464
#define IF 465
#define IGNORE_SYM 466
#define IMPORT 467
#define INDEXES 468
#define INDEX_SYM 469
#define INFILE 470
#define INNER_SYM 471
#define INNOBASE_SYM 472
#define INOUT_SYM 473
#define INSENSITIVE_SYM 474
#define INSERT 475
#define INSERT_METHOD 476
#define INTERVAL_SYM 477
#define INTO 478
#define INT_SYM 479
#define INVOKER_SYM 480
#define IN_SYM 481
#define IS 482
#define ISOLATION 483
#define ISSUER_SYM 484
#define ITERATE_SYM 485
#define JOIN_SYM 486
#define KEYS 487
#define KEY_SYM 488
#define KILL_SYM 489
#define LABEL_SYM 490
#define LANGUAGE_SYM 491
#define LAST_INSERT_ID 492
#define LAST_SYM 493
#define LE 494
#define LEADING 495
#define LEAST_SYM 496
#define LEAVES 497
#define LEAVE_SYM 498
#define LEFT 499
#define LEVEL_SYM 500
#define LEX_HOSTNAME 501
#define LIKE 502
#define LIMIT 503
#define LINEFROMTEXT 504
#define LINES 505
#define LINESTRING 506
#define LOAD 507
#define LOCAL_SYM 508
#define LOCATE 509
#define LOCATOR_SYM 510
#define LOCKS_SYM 511
#define LOCK_SYM 512
#define LOGS_SYM 513
#define LOG_SYM 514
#define LONGBLOB 515
#define LONGTEXT 516
#define LONG_NUM 517
#define LONG_SYM 518
#define LOOP_SYM 519
#define LOW_PRIORITY 520
#define LT 521
#define MAKE_SET_SYM 522
#define MASTER_CONNECT_RETRY_SYM 523
#define MASTER_HOST_SYM 524
#define MASTER_LOG_FILE_SYM 525
#define MASTER_LOG_POS_SYM 526
#define MASTER_PASSWORD_SYM 527
#define MASTER_PORT_SYM 528
#define MASTER_POS_WAIT 529
#define MASTER_SERVER_ID_SYM 530
#define MASTER_SSL_CAPATH_SYM 531
#define MASTER_SSL_CA_SYM 532
#define MASTER_SSL_CERT_SYM 533
#define MASTER_SSL_CIPHER_SYM 534
#define MASTER_SSL_KEY_SYM 535
#define MASTER_SSL_SYM 536
#define MASTER_SYM 537
#define MASTER_USER_SYM 538
#define MATCH 539
#define MAX_CONNECTIONS_PER_HOUR 540
#define MAX_QUERIES_PER_HOUR 541
#define MAX_ROWS 542
#define MAX_SYM 543
#define MAX_UPDATES_PER_HOUR 544
#define MAX_USER_CONNECTIONS_SYM 545
#define MEDIUMBLOB 546
#define MEDIUMINT 547
#define MEDIUMTEXT 548
#define MEDIUM_SYM 549
#define MERGE_SYM 550
#define MICROSECOND_SYM 551
#define MIGRATE_SYM 552
#define MINUTE_MICROSECOND_SYM 553
#define MINUTE_SECOND_SYM 554
#define MINUTE_SYM 555
#define MIN_ROWS 556
#define MIN_SYM 557
#define MLINEFROMTEXT 558
#define MODE_SYM 559
#define MODIFIES_SYM 560
#define MODIFY_SYM 561
#define MOD_SYM 562
#define MONTH_SYM 563
#define MPOINTFROMTEXT 564
#define MPOLYFROMTEXT 565
#define MULTILINESTRING 566
#define MULTIPOINT 567
#define MULTIPOLYGON 568
#define MUTEX_SYM 569
#define NAMES_SYM 570
#define NAME_SYM 571
#define NATIONAL_SYM 572
#define NATURAL 573
#define NCHAR_STRING 574
#define NCHAR_SYM 575
#define NDBCLUSTER_SYM 576
#define NE 577
#define NEW_SYM 578
#define NEXT_SYM 579
#define NONE_SYM 580
#define NOT2_SYM 581
#define NOT_SYM 582
#define NOW_SYM 583
#define NO_SYM 584
#define NO_WRITE_TO_BINLOG 585
#define NULL_SYM 586
#define NUM 587
#define NUMERIC_SYM 588
#define NVARCHAR_SYM 589
#define OFFSET_SYM 590
#define OLD_PASSWORD 591
#define ON 592
#define ONE_SHOT_SYM 593
#define ONE_SYM 594
#define OPEN_SYM 595
#define OPTIMIZE 596
#define OPTION 597
#define OPTIONALLY 598
#define OR2_SYM 599
#define ORDER_SYM 600
#define OR_OR_SYM 601
#define OR_SYM 602
#define OUTER 603
#define OUTFILE 604
#define OUT_SYM 605
#define PACK_KEYS_SYM 606
#define PARTIAL 607
#define PASSWORD 608
#define PARAM_MARKER 609
#define PHASE_SYM 610
#define POINTFROMTEXT 611
#define POINT_SYM 612
#define POLYFROMTEXT 613
#define POLYGON 614
#define POSITION_SYM 615
#define PRECISION 616
#define PREPARE_SYM 617
#define PREV_SYM 618
#define PRIMARY_SYM 619
#define PRIVILEGES 620
#define PROCEDURE 621
#define PROCESS 622
#define PROCESSLIST_SYM 623
#define PURGE 624
#define QUARTER_SYM 625
#define QUERY_SYM 626
#define QUICK 627
#define RAID_0_SYM 628
#define RAID_CHUNKS 629
#define RAID_CHUNKSIZE 630
#define RAID_STRIPED_SYM 631
#define RAID_TYPE 632
#define RAND 633
#define READS_SYM 634
#define READ_SYM 635
#define REAL 636
#define RECOVER_SYM 637
#define REDUNDANT_SYM 638
#define REFERENCES 639
#define REGEXP 640
#define RELAY_LOG_FILE_SYM 641
#define RELAY_LOG_POS_SYM 642
#define RELAY_THREAD 643
#define RELEASE_SYM 644
#define RELOAD 645
#define RENAME 646
#define REPAIR 647
#define REPEATABLE_SYM 648
#define REPEAT_SYM 649
#define REPLACE 650
#define REPLICATION 651
#define REQUIRE_SYM 652
#define RESET_SYM 653
#define RESOURCES 654
#define RESTORE_SYM 655
#define RESTRICT 656
#define RESUME_SYM 657
#define RETURNS_SYM 658
#define RETURN_SYM 659
#define REVOKE 660
#define RIGHT 661
#define ROLLBACK_SYM 662
#define ROLLUP_SYM 663
#define ROUND 664
#define ROUTINE_SYM 665
#define ROWS_SYM 666
#define ROW_COUNT_SYM 667
#define ROW_FORMAT_SYM 668
#define ROW_SYM 669
#define RTREE_SYM 670
#define SAVEPOINT_SYM 671
#define SECOND_MICROSECOND_SYM 672
#define SECOND_SYM 673
#define SECURITY_SYM 674
#define SELECT_SYM 675
#define SENSITIVE_SYM 676
#define SEPARATOR_SYM 677
#define SERIALIZABLE_SYM 678
#define SERIAL_SYM 679
#define SESSION_SYM 680
#define SET 681
#define SET_VAR 682
#define SHARE_SYM 683
#define SHIFT_LEFT 684
#define SHIFT_RIGHT 685
#define SHOW 686
#define SHUTDOWN 687
#define SIGNED_SYM 688
#define SIMPLE_SYM 689
#define SLAVE 690
#define SMALLINT 691
#define SNAPSHOT_SYM 692
#define SOUNDS_SYM 693
#define SPATIAL_SYM 694
#define SPECIFIC_SYM 695
#define SQLEXCEPTION_SYM 696
#define SQLSTATE_SYM 697
#define SQLWARNING_SYM 698
#define SQL_BIG_RESULT 699
#define SQL_BUFFER_RESULT 700
#define SQL_CACHE_SYM 701
#define SQL_CALC_FOUND_ROWS 702
#define SQL_NO_CACHE_SYM 703
#define SQL_SMALL_RESULT 704
#define SQL_SYM 705
#define SQL_THREAD 706
#define SSL_SYM 707
#define STARTING 708
#define START_SYM 709
#define STATUS_SYM 710
#define STD_SYM 711
#define STDDEV_SAMP_SYM 712
#define STOP_SYM 713
#define STORAGE_SYM 714
#define STRAIGHT_JOIN 715
#define STRING_SYM 716
#define SUBDATE_SYM 717
#define SUBJECT_SYM 718
#define SUBSTRING 719
#define SUBSTRING_INDEX 720
#define SUM_SYM 721
#define SUPER_SYM 722
#define SUSPEND_SYM 723
#define SYSDATE 724
#define TABLES 725
#define TABLESPACE 726
#define TABLE_SYM 727
#define TEMPORARY 728
#define TEMPTABLE_SYM 729
#define TERMINATED 730
#define TEXT_STRING 731
#define TEXT_SYM 732
#define TIMESTAMP 733
#define TIMESTAMP_ADD 734
#define TIMESTAMP_DIFF 735
#define TIME_SYM 736
#define TINYBLOB 737
#define TINYINT 738
#define TINYTEXT 739
#define TO_SYM 740
#define TRAILING 741
#define TRANSACTION_SYM 742
#define TRIGGER_SYM 743
#define TRIGGERS_SYM 744
#define TRIM 745
#define TRUE_SYM 746
#define TRUNCATE_SYM 747
#define TYPES_SYM 748
#define TYPE_SYM 749
#define UDF_RETURNS_SYM 750
#define UDF_SONAME_SYM 751
#define ULONGLONG_NUM 752
#define UNCOMMITTED_SYM 753
#define UNDEFINED_SYM 754
#define UNDERSCORE_CHARSET 755
#define UNDO_SYM 756
#define UNICODE_SYM 757
#define UNION_SYM 758
#define UNIQUE_SYM 759
#define UNIQUE_USERS 760
#define UNIX_TIMESTAMP 761
#define UNKNOWN_SYM 762
#define UNLOCK_SYM 763
#define UNSIGNED 764
#define UNTIL_SYM 765
#define UPDATE_SYM 766
#define USAGE 767
#define USER 768
#define USE_FRM 769
#define USE_SYM 770
#define USING 771
#define UTC_DATE_SYM 772
#define UTC_TIMESTAMP_SYM 773
#define UTC_TIME_SYM 774
#define VAR_SAMP_SYM 775
#define VALUES 776
#define VALUE_SYM 777
#define VARBINARY 778
#define VARCHAR 779
#define VARIABLES 780
#define VARIANCE_SYM 781
#define VARYING 782
#define VIEW_SYM 783
#define WARNINGS 784
#define WEEK_SYM 785
#define WHEN_SYM 786
#define WHERE 787
#define WHILE_SYM 788
#define WITH 789
#define WORK_SYM 790
#define WRITE_SYM 791
#define X509_SYM 792
#define XA_SYM 793
#define XOR 794
#define YEARWEEK 795
#define YEAR_MONTH_SYM 796
#define YEAR_SYM 797
#define ZEROFILL 798
#define TABLE_REF_PRIORITY 799
#define ELSE 800
#define THEN_SYM 801
#define CASE_SYM 802
#define BETWEEN_SYM 803
#define NEG 804




/* Copy the first part of user declarations.  */
#line 19 "sql_yacc.yy"

/* thd is passed as an arg to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200				/* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "mysql_priv.h"
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include <myisam.h>
#include <myisammrg.h>

int yylex(void *yylval, void *yythd);

const LEX_STRING null_lex_str={0,0};

#define yyoverflow(A,B,C,D,E,F) {ulong val= *(F); if (my_yyoverflow((B), (D), &val)) { yyerror((char*) (A)); return 2; } else { *(F)= (YYSIZE_T)val; }}

#define WARN_DEPRECATED(A,B)                                        \
  push_warning_printf(((THD *)yythd), MYSQL_ERROR::WARN_LEVEL_WARN, \
		      ER_WARN_DEPRECATED_SYNTAX,                    \
		      ER(ER_WARN_DEPRECATED_SYNTAX), (A), (B));

#define YYERROR_UNLESS(A)                  \
  if (!(A))                             \
  {					\
    yyerror(ER(ER_SYNTAX_ERROR));	\
    YYABORT;				\
  }

/* Helper for parsing "IS [NOT] truth_value" */
inline Item *is_truth_value(Item *A, bool v1, bool v2)
{
  return new Item_func_if(create_func_ifnull(A,
	new Item_int((char *) (v2 ? "TRUE" : "FALSE"), v2, 1)),
	new Item_int((char *) (v1 ? "TRUE" : "FALSE"), v1, 1),
	new Item_int((char *) (v1 ? "FALSE" : "TRUE"),!v1, 1));
}



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
#line 72 "sql_yacc.yy"
typedef union YYSTYPE {
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  enum db_type db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  struct sp_cond_type *spcondtype;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  struct st_lex *lex;
} YYSTYPE;
/* Line 191 of yacc.c.  */
#line 1268 "sql_yacc.cc"
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 112 "sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 214 of yacc.c.  */
#line 1283 "sql_yacc.cc"

#if ! defined (yyoverflow) || YYERROR_VERBOSE

# ifndef YYFREE
#  define YYFREE free
# endif
# ifndef YYMALLOC
#  define YYMALLOC malloc
# endif

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   define YYSTACK_ALLOC alloca
#  endif
# else
#  if defined (alloca) || defined (_ALLOCA_H)
#   define YYSTACK_ALLOC alloca
#  else
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning. */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
# else
#  if defined (__STDC__) || defined (__cplusplus)
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   define YYSIZE_T size_t
#  endif
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
# endif
#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */


#if (! defined (yyoverflow) \
     && (! defined (__cplusplus) \
	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short) + sizeof (YYSTYPE))				\
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined (__GNUC__) && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  register YYSIZE_T yyi;		\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (0)
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (0)

#endif

#if defined (__STDC__) || defined (__cplusplus)
   typedef signed char yysigned_char;
#else
   typedef short yysigned_char;
#endif

/* YYFINAL -- State number of the termination state. */
#define YYFINAL  462
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   44018

/* YYNTOKENS -- Number of terminals. */
#define YYNTOKENS  569
/* YYNNTS -- Number of nonterminals. */
#define YYNNTS  655
/* YYNRULES -- Number of rules. */
#define YYNRULES  1998
/* YYNRULES -- Number of states. */
#define YYNSTATES  3626

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   804

#define YYTRANSLATE(YYX) 						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const unsigned short yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   562,     2,     2,     2,   555,   550,     2,
     559,   560,   553,   552,   561,   551,   566,   554,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   568,   567,
       2,     2,     2,     2,   565,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   556,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   563,   549,   564,   557,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   558
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const unsigned short yyprhs[] =
{
       0,     0,     3,     5,     8,    10,    12,    14,    16,    18,
      20,    22,    24,    26,    28,    30,    32,    34,    36,    38,
      40,    42,    44,    46,    48,    50,    52,    54,    56,    58,
      60,    62,    64,    66,    68,    70,    72,    74,    76,    78,
      80,    82,    84,    86,    88,    90,    92,    94,    96,    98,
     100,   102,   104,   106,   110,   112,   114,   119,   121,   124,
     125,   130,   131,   134,   138,   140,   143,   144,   148,   149,
     155,   157,   161,   165,   169,   173,   177,   181,   185,   189,
     193,   197,   201,   205,   207,   211,   215,   219,   223,   224,
     232,   233,   245,   246,   253,   254,   261,   262,   263,   264,
     265,   278,   279,   283,   288,   289,   293,   295,   300,   301,
     302,   303,   304,   305,   318,   319,   322,   323,   326,   329,
     332,   335,   338,   342,   346,   348,   350,   352,   355,   359,
     363,   364,   371,   372,   374,   378,   380,   381,   383,   387,
     389,   390,   394,   395,   397,   401,   403,   408,   409,   411,
     413,   415,   416,   420,   423,   427,   428,   432,   433,   439,
     445,   446,   454,   460,   461,   464,   466,   468,   470,   474,
     476,   480,   481,   483,   485,   487,   489,   492,   494,   496,
     500,   501,   504,   505,   508,   509,   513,   518,   519,   526,
     527,   528,   537,   539,   540,   543,   546,   549,   552,   555,
     558,   559,   566,   569,   570,   573,   575,   577,   581,   582,
     583,   584,   592,   593,   596,   599,   600,   601,   602,   610,
     611,   614,   617,   618,   624,   625,   627,   628,   634,   639,
     640,   641,   650,   651,   659,   661,   663,   665,   667,   669,
     672,   675,   678,   683,   688,   689,   694,   695,   696,   702,
     703,   711,   712,   713,   720,   721,   723,   724,   726,   728,
     731,   733,   735,   736,   738,   740,   743,   745,   746,   750,
     751,   753,   755,   758,   760,   763,   767,   771,   775,   779,
     783,   787,   791,   795,   799,   803,   807,   811,   815,   819,
     823,   827,   831,   837,   839,   841,   845,   850,   855,   859,
     864,   869,   871,   873,   875,   877,   879,   881,   883,   885,
     887,   889,   891,   893,   895,   897,   900,   901,   903,   905,
     907,   909,   911,   913,   917,   919,   921,   924,   927,   934,
     942,   951,   954,   957,   958,   960,   963,   964,   966,   969,
     970,   975,   979,   983,   987,   989,   994,   996,   998,  1004,
    1007,  1013,  1016,  1021,  1023,  1029,  1035,  1040,  1044,  1046,
    1048,  1051,  1053,  1055,  1058,  1060,  1062,  1064,  1067,  1071,
    1074,  1078,  1081,  1084,  1088,  1092,  1096,  1097,  1104,  1105,
    1112,  1115,  1117,  1119,  1121,  1123,  1125,  1127,  1129,  1131,
    1133,  1135,  1137,  1140,  1143,  1145,  1148,  1150,  1153,  1157,
    1160,  1162,  1164,  1166,  1168,  1170,  1172,  1174,  1177,  1178,
    1182,  1184,  1190,  1191,  1193,  1196,  1198,  1200,  1202,  1204,
    1205,  1209,  1210,  1212,  1213,  1215,  1218,  1220,  1222,  1225,
    1228,  1233,  1235,  1239,  1242,  1244,  1247,  1250,  1253,  1256,
    1258,  1261,  1263,  1265,  1267,  1269,  1271,  1273,  1275,  1277,
    1279,  1281,  1282,  1285,  1287,  1289,  1290,  1292,  1293,  1296,
    1298,  1301,  1305,  1308,  1309,  1311,  1312,  1314,  1316,  1319,
    1320,  1322,  1323,  1328,  1330,  1335,  1339,  1341,  1342,  1344,
    1347,  1349,  1353,  1357,  1360,  1363,  1366,  1368,  1370,  1373,
    1376,  1379,  1381,  1384,  1387,  1390,  1393,  1395,  1397,  1398,
    1400,  1402,  1404,  1406,  1407,  1409,  1411,  1413,  1414,  1417,
    1420,  1422,  1424,  1426,  1431,  1434,  1436,  1441,  1442,  1444,
    1445,  1448,  1450,  1454,  1455,  1462,  1463,  1469,  1470,  1476,
    1477,  1483,  1484,  1496,  1497,  1499,  1500,  1503,  1506,  1508,
    1512,  1515,  1519,  1522,  1527,  1528,  1535,  1536,  1537,  1546,
    1551,  1556,  1560,  1564,  1567,  1570,  1577,  1583,  1587,  1593,
    1595,  1597,  1599,  1600,  1602,  1603,  1605,  1606,  1608,  1610,
    1611,  1614,  1616,  1617,  1619,  1621,  1623,  1624,  1630,  1634,
    1635,  1641,  1645,  1649,  1650,  1654,  1655,  1658,  1660,  1664,
    1665,  1667,  1669,  1670,  1673,  1675,  1679,  1680,  1687,  1688,
    1695,  1696,  1702,  1703,  1705,  1707,  1708,  1715,  1716,  1718,
    1720,  1723,  1725,  1727,  1729,  1730,  1737,  1738,  1744,  1745,
    1747,  1749,  1752,  1754,  1756,  1758,  1760,  1762,  1763,  1770,
    1771,  1773,  1775,  1776,  1781,  1786,  1790,  1796,  1798,  1802,
    1806,  1812,  1814,  1818,  1821,  1823,  1825,  1826,  1833,  1835,
    1839,  1843,  1844,  1847,  1848,  1853,  1854,  1857,  1859,  1862,
    1867,  1870,  1874,  1875,  1879,  1880,  1881,  1888,  1891,  1893,
    1895,  1898,  1901,  1910,  1915,  1916,  1918,  1921,  1923,  1925,
    1927,  1929,  1931,  1933,  1935,  1937,  1939,  1941,  1943,  1944,
    1947,  1952,  1956,  1958,  1960,  1965,  1966,  1967,  1969,  1971,
    1972,  1975,  1978,  1980,  1982,  1983,  1986,  1987,  1991,  1992,
    1996,  2000,  2001,  2005,  2006,  2010,  2013,  2015,  2019,  2024,
    2028,  2033,  2037,  2042,  2044,  2048,  2053,  2057,  2061,  2066,
    2068,  2074,  2081,  2085,  2090,  2096,  2103,  2108,  2113,  2119,
    2123,  2128,  2130,  2134,  2136,  2140,  2142,  2146,  2150,  2152,
    2156,  2160,  2165,  2170,  2172,  2176,  2180,  2184,  2188,  2192,
    2194,  2198,  2200,  2202,  2204,  2206,  2208,  2210,  2212,  2214,
    2216,  2218,  2220,  2222,  2224,  2226,  2228,  2230,  2232,  2235,
    2237,  2241,  2243,  2245,  2250,  2253,  2259,  2261,  2265,  2268,
    2271,  2274,  2277,  2281,  2287,  2294,  2297,  2299,  2304,  2312,
    2317,  2320,  2327,  2334,  2341,  2348,  2353,  2358,  2362,  2367,
    2374,  2383,  2390,  2399,  2406,  2411,  2418,  2423,  2430,  2435,
    2440,  2445,  2450,  2457,  2466,  2469,  2472,  2477,  2480,  2488,
    2496,  2500,  2505,  2510,  2517,  2524,  2529,  2536,  2543,  2550,
    2555,  2562,  2567,  2574,  2583,  2594,  2607,  2614,  2619,  2626,
    2633,  2635,  2642,  2647,  2656,  2667,  2672,  2674,  2678,  2683,
    2690,  2697,  2706,  2713,  2720,  2725,  2732,  2739,  2748,  2753,
    2758,  2765,  2770,  2773,  2778,  2783,  2788,  2795,  2800,  2805,
    2809,  2818,  2825,  2830,  2837,  2841,  2848,  2857,  2862,  2871,
    2878,  2887,  2894,  2903,  2906,  2911,  2916,  2921,  2928,  2937,
    2946,  2951,  2959,  2967,  2975,  2982,  2989,  2996,  3003,  3010,
    3017,  3018,  3024,  3035,  3039,  3044,  3048,  3051,  3054,  3057,
    3062,  3069,  3074,  3079,  3086,  3093,  3100,  3107,  3112,  3119,
    3124,  3131,  3136,  3141,  3146,  3151,  3158,  3163,  3170,  3175,
    3182,  3187,  3192,  3199,  3204,  3211,  3216,  3223,  3228,  3233,
    3240,  3245,  3252,  3253,  3257,  3261,  3262,  3264,  3265,  3268,
    3270,  3274,  3279,  3284,  3290,  3295,  3300,  3305,  3311,  3316,
    3317,  3318,  3326,  3337,  3342,  3348,  3353,  3359,  3364,  3369,
    3374,  3379,  3384,  3390,  3391,  3400,  3401,  3403,  3404,  3407,
    3408,  3410,  3411,  3415,  3418,  3422,  3425,  3427,  3430,  3432,
    3435,  3437,  3439,  3441,  3444,  3445,  3448,  3450,  3454,  3456,
    3460,  3461,  3464,  3466,  3470,  3471,  3473,  3474,  3477,  3478,
    3481,  3485,  3491,  3493,  3494,  3497,  3499,  3501,  3505,  3509,
    3513,  3514,  3521,  3522,  3529,  3530,  3539,  3544,  3545,  3554,
    3555,  3566,  3573,  3574,  3583,  3584,  3595,  3602,  3604,  3607,
    3610,  3611,  3616,  3617,  3629,  3633,  3640,  3641,  3645,  3646,
    3647,  3653,  3654,  3656,  3657,  3659,  3660,  3663,  3666,  3669,
    3670,  3676,  3677,  3679,  3683,  3685,  3687,  3689,  3693,  3695,
    3697,  3699,  3701,  3703,  3705,  3707,  3709,  3711,  3713,  3715,
    3717,  3719,  3721,  3723,  3725,  3727,  3729,  3731,  3733,  3735,
    3737,  3739,  3741,  3743,  3745,  3746,  3748,  3750,  3751,  3754,
    3755,  3757,  3758,  3759,  3763,  3764,  3765,  3769,  3772,  3773,
    3774,  3779,  3784,  3787,  3788,  3791,  3794,  3795,  3797,  3798,
    3803,  3808,  3811,  3812,  3814,  3816,  3817,  3819,  3820,  3822,
    3825,  3827,  3831,  3835,  3837,  3839,  3841,  3843,  3844,  3847,
    3849,  3851,  3853,  3855,  3857,  3859,  3861,  3863,  3865,  3867,
    3869,  3870,  3871,  3878,  3879,  3881,  3885,  3887,  3890,  3891,
    3894,  3898,  3900,  3903,  3905,  3906,  3913,  3917,  3920,  3921,
    3925,  3932,  3933,  3940,  3945,  3950,  3955,  3960,  3966,  3970,
    3972,  3976,  3978,  3979,  3982,  3983,  3985,  3986,  3987,  3996,
    3997,  3998,  4005,  4006,  4008,  4010,  4012,  4014,  4016,  4019,
    4021,  4023,  4025,  4029,  4034,  4035,  4039,  4043,  4045,  4048,
    4051,  4052,  4056,  4057,  4063,  4067,  4069,  4073,  4075,  4079,
    4081,  4083,  4084,  4086,  4087,  4092,  4093,  4095,  4099,  4101,
    4103,  4105,  4106,  4107,  4114,  4115,  4116,  4128,  4132,  4134,
    4138,  4142,  4144,  4148,  4149,  4151,  4152,  4157,  4158,  4165,
    4166,  4172,  4173,  4180,  4182,  4186,  4190,  4196,  4197,  4200,
    4201,  4204,  4206,  4208,  4210,  4214,  4215,  4217,  4218,  4222,
    4225,  4230,  4235,  4240,  4245,  4246,  4251,  4258,  4275,  4278,
    4281,  4282,  4289,  4295,  4298,  4301,  4304,  4306,  4312,  4318,
    4321,  4324,  4328,  4331,  4334,  4337,  4341,  4344,  4347,  4350,
    4352,  4354,  4358,  4363,  4367,  4371,  4374,  4377,  4381,  4385,
    4389,  4393,  4397,  4401,  4403,  4405,  4407,  4409,  4410,  4412,
    4413,  4416,  4417,  4419,  4421,  4423,  4424,  4427,  4428,  4431,
    4432,  4435,  4438,  4439,  4444,  4445,  4450,  4452,  4454,  4455,
    4457,  4458,  4460,  4462,  4463,  4468,  4472,  4474,  4475,  4479,
    4484,  4487,  4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,
    4504,  4506,  4507,  4511,  4515,  4517,  4519,  4521,  4524,  4525,
    4529,  4533,  4536,  4539,  4543,  4544,  4546,  4548,  4551,  4552,
    4557,  4563,  4564,  4565,  4566,  4583,  4586,  4587,  4589,  4590,
    4592,  4594,  4595,  4597,  4599,  4600,  4603,  4606,  4608,  4612,
    4617,  4621,  4625,  4626,  4629,  4632,  4634,  4638,  4642,  4643,
    4647,  4648,  4652,  4655,  4659,  4661,  4663,  4666,  4667,  4670,
    4672,  4674,  4677,  4680,  4682,  4684,  4686,  4688,  4690,  4693,
    4696,  4698,  4700,  4702,  4704,  4706,  4708,  4710,  4713,  4716,
    4719,  4722,  4725,  4727,  4729,  4731,  4733,  4735,  4737,  4739,
    4743,  4749,  4751,  4753,  4755,  4757,  4759,  4763,  4768,  4774,
    4776,  4782,  4786,  4789,  4791,  4795,  4798,  4800,  4802,  4804,
    4806,  4808,  4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,
    4828,  4831,  4833,  4835,  4837,  4839,  4841,  4843,  4845,  4847,
    4849,  4851,  4853,  4855,  4857,  4859,  4861,  4863,  4865,  4867,
    4869,  4871,  4873,  4875,  4877,  4879,  4881,  4883,  4885,  4887,
    4889,  4891,  4893,  4895,  4897,  4899,  4901,  4903,  4905,  4907,
    4909,  4911,  4913,  4915,  4917,  4919,  4921,  4923,  4925,  4927,
    4929,  4931,  4933,  4935,  4937,  4939,  4941,  4943,  4945,  4947,
    4949,  4951,  4953,  4955,  4957,  4959,  4961,  4963,  4965,  4967,
    4969,  4971,  4973,  4975,  4977,  4979,  4981,  4983,  4985,  4987,
    4989,  4991,  4993,  4995,  4997,  4999,  5001,  5003,  5005,  5007,
    5009,  5011,  5013,  5015,  5017,  5019,  5021,  5023,  5025,  5027,
    5029,  5031,  5033,  5035,  5037,  5039,  5041,  5043,  5045,  5047,
    5049,  5051,  5053,  5055,  5057,  5059,  5061,  5063,  5065,  5067,
    5069,  5071,  5073,  5075,  5077,  5079,  5081,  5083,  5085,  5087,
    5089,  5091,  5093,  5095,  5097,  5099,  5101,  5103,  5105,  5107,
    5109,  5111,  5113,  5115,  5117,  5119,  5121,  5123,  5125,  5127,
    5129,  5131,  5133,  5135,  5137,  5139,  5141,  5143,  5145,  5147,
    5149,  5151,  5153,  5155,  5157,  5159,  5161,  5163,  5165,  5167,
    5169,  5171,  5173,  5175,  5177,  5179,  5181,  5183,  5185,  5187,
    5189,  5191,  5193,  5195,  5197,  5199,  5201,  5203,  5205,  5207,
    5209,  5211,  5213,  5215,  5217,  5219,  5221,  5223,  5225,  5227,
    5229,  5231,  5233,  5235,  5237,  5239,  5241,  5243,  5245,  5247,
    5249,  5251,  5253,  5255,  5257,  5259,  5261,  5263,  5265,  5267,
    5269,  5271,  5273,  5275,  5277,  5279,  5281,  5283,  5285,  5287,
    5289,  5291,  5293,  5295,  5297,  5299,  5301,  5303,  5305,  5307,
    5309,  5311,  5313,  5315,  5317,  5319,  5321,  5323,  5325,  5327,
    5328,  5333,  5334,  5336,  5338,  5342,  5343,  5346,  5348,  5350,
    5352,  5354,  5355,  5357,  5358,  5360,  5362,  5364,  5365,  5368,
    5371,  5374,  5376,  5379,  5384,  5390,  5395,  5402,  5405,  5409,
    5413,  5417,  5423,  5425,  5429,  5433,  5436,  5439,  5442,  5444,
    5446,  5451,  5456,  5458,  5460,  5462,  5464,  5466,  5467,  5472,
    5474,  5476,  5478,  5482,  5486,  5488,  5490,  5493,  5496,  5497,
    5501,  5506,  5510,  5511,  5519,  5521,  5524,  5526,  5528,  5530,
    5532,  5534,  5536,  5537,  5543,  5545,  5547,  5549,  5551,  5553,
    5557,  5564,  5571,  5578,  5586,  5590,  5599,  5608,  5617,  5618,
    5620,  5622,  5625,  5626,  5628,  5630,  5634,  5635,  5639,  5640,
    5644,  5645,  5649,  5650,  5654,  5656,  5658,  5660,  5662,  5664,
    5666,  5668,  5670,  5672,  5674,  5676,  5679,  5682,  5684,  5688,
    5691,  5694,  5697,  5700,  5703,  5706,  5709,  5712,  5713,  5715,
    5719,  5721,  5724,  5727,  5730,  5732,  5736,  5740,  5742,  5744,
    5748,  5750,  5754,  5759,  5765,  5767,  5768,  5772,  5776,  5778,
    5780,  5781,  5784,  5787,  5790,  5793,  5794,  5797,  5800,  5802,
    5805,  5808,  5811,  5814,  5817,  5818,  5822,  5823,  5825,  5826,
    5830,  5833,  5834,  5836,  5839,  5840,  5842,  5847,  5852,  5858,
    5861,  5865,  5866,  5868,  5869,  5874,  5875,  5877,  5879,  5880,
    5883,  5886,  5888,  5889,  5891,  5893,  5897,  5899,  5903,  5905,
    5909,  5911,  5914,  5916,  5918,  5920,  5926,  5927,  5932,  5934,
    5937,  5939,  5942,  5946,  5950,  5954,  5955,  5957,  5960,  5964,
    5966,  5968,  5969,  5973,  5977,  5978,  5987,  5988,  5992,  5994,
    5998,  6002,  6008,  6009,  6013,  6018,  6023,  6024,  6037,  6042,
    6047,  6051,  6056,  6060,  6063,  6065,  6069,  6075,  6077,  6079,
    6080,  6082,  6084,  6085,  6088,  6089,  6090,  6094,  6095
};

/* YYRHS -- A `-1'-separated list of the rules' RHS. */
static const short yyrhs[] =
{
     570,     0,    -1,     3,    -1,   571,     3,    -1,   572,    -1,
    1172,    -1,   764,    -1,   805,    -1,   795,    -1,   612,    -1,
     584,    -1,   807,    -1,   797,    -1,  1178,    -1,   589,    -1,
     573,    -1,  1019,    -1,  1046,    -1,   975,    -1,   977,    -1,
     577,    -1,  1052,    -1,  1147,    -1,  1138,    -1,   582,    -1,
     983,    -1,  1066,    -1,  1069,    -1,  1130,    -1,   812,    -1,
     820,    -1,   824,    -1,   575,    -1,  1062,    -1,  1181,    -1,
     815,    -1,   800,    -1,   986,    -1,  1058,    -1,   793,    -1,
    1145,    -1,  1179,    -1,  1180,    -1,   832,    -1,  1113,    -1,
    1032,    -1,   782,    -1,   785,    -1,  1030,    -1,  1136,    -1,
    1011,    -1,  1068,    -1,  1216,    -1,   574,   362,  1107,    -1,
     103,    -1,   126,    -1,   362,  1107,   171,   576,    -1,  1105,
      -1,   565,  1109,    -1,    -1,   148,  1107,   578,   579,    -1,
      -1,   516,   580,    -1,   580,   561,   581,    -1,   581,    -1,
     565,  1109,    -1,    -1,   199,   583,  1109,    -1,    -1,    52,
     282,   485,   585,   586,    -1,   587,    -1,   586,   561,   587,
      -1,   269,   142,  1105,    -1,   283,   142,  1105,    -1,   272,
     142,  1105,    -1,   273,   142,   962,    -1,   268,   142,   962,
      -1,   281,   142,   962,    -1,   277,   142,  1105,    -1,   276,
     142,  1105,    -1,   278,   142,  1105,    -1,   279,   142,  1105,
      -1,   280,   142,  1105,    -1,   588,    -1,   270,   142,  1105,
      -1,   271,   142,   963,    -1,   386,   142,  1105,    -1,   387,
     142,   962,    -1,    -1,    84,   682,   472,   685,  1102,   590,
     669,    -1,    -1,    84,   756,   214,  1107,   757,   337,  1102,
     591,   559,   759,   560,    -1,    -1,    84,    91,   685,  1107,
     592,   679,    -1,    -1,    84,   697,   175,   600,   593,   601,
      -1,    -1,    -1,    -1,    -1,    84,   366,   600,   594,   559,
     595,   620,   560,   596,   608,   597,   639,    -1,    -1,    84,
     598,  1205,    -1,    84,   513,   599,  1163,    -1,    -1,  1107,
     566,  1107,    -1,  1107,    -1,   403,   698,   496,  1105,    -1,
      -1,    -1,    -1,    -1,    -1,   559,   602,   616,   560,   603,
     403,   604,   709,   605,   608,   606,   639,    -1,    -1,   607,
     609,    -1,    -1,   608,   610,    -1,    67,  1105,    -1,   236,
     450,    -1,   329,   450,    -1,    79,   450,    -1,   379,   450,
      93,    -1,   305,   450,    93,    -1,   611,    -1,   609,    -1,
     118,    -1,   871,   118,    -1,   450,   419,   109,    -1,   450,
     419,   225,    -1,    -1,    47,   600,   613,   559,   614,   560,
      -1,    -1,   615,    -1,   615,   561,   853,    -1,   853,    -1,
      -1,   617,    -1,   617,   561,   619,    -1,   619,    -1,    -1,
    1107,   618,   709,    -1,    -1,   621,    -1,   621,   561,   622,
      -1,   622,    -1,   623,   618,  1107,   709,    -1,    -1,   226,
      -1,   350,    -1,   218,    -1,    -1,   624,   639,   567,    -1,
     639,   567,    -1,   625,   639,   567,    -1,    -1,   626,   627,
     567,    -1,    -1,   106,   637,   628,   709,   638,    -1,   106,
    1107,    75,   168,   634,    -1,    -1,   106,   632,   196,   168,
     629,   633,   639,    -1,   106,  1107,    89,   168,   630,    -1,
      -1,   631,   572,    -1,   150,    -1,    80,    -1,   636,    -1,
     633,   561,   636,    -1,   962,    -1,   442,   635,  1106,    -1,
      -1,   522,    -1,   634,    -1,  1107,    -1,   443,    -1,   871,
     169,    -1,   441,    -1,  1107,    -1,   637,   561,  1107,    -1,
      -1,   108,   853,    -1,    -1,   640,   572,    -1,    -1,   404,
     641,   853,    -1,   210,   649,   138,   210,    -1,    -1,   547,
     531,   642,   654,   138,   547,    -1,    -1,    -1,   547,   643,
     853,   531,   644,   654,   138,   547,    -1,   659,    -1,    -1,
     645,   662,    -1,   243,  1108,    -1,   230,  1108,    -1,   235,
     207,    -1,   188,   207,    -1,   340,  1107,    -1,    -1,   157,
     647,  1107,   223,   646,   648,    -1,    60,  1107,    -1,    -1,
     324,   171,    -1,   171,    -1,  1107,    -1,   648,   561,  1107,
      -1,    -1,    -1,    -1,   650,   853,   546,   651,   625,   652,
     653,    -1,    -1,   132,   649,    -1,   545,   625,    -1,    -1,
      -1,    -1,   655,   853,   546,   656,   625,   657,   658,    -1,
      -1,   545,   625,    -1,   531,   654,    -1,    -1,  1108,   568,
     660,   662,   661,    -1,    -1,  1108,    -1,    -1,    28,   663,
     626,   624,   138,    -1,   264,   625,   138,   264,    -1,    -1,
      -1,   533,   664,   853,   125,   665,   625,   138,   533,    -1,
      -1,   394,   625,   510,   666,   853,   138,   394,    -1,    27,
      -1,     8,    -1,   220,    -1,   511,    -1,   112,    -1,   559,
     670,    -1,   686,   672,    -1,   247,  1102,    -1,   559,   247,
    1102,   560,    -1,   699,   560,   686,   672,    -1,    -1,   675,
     560,   671,  1185,    -1,    -1,    -1,  1077,   678,   675,   673,
    1182,    -1,    -1,  1077,   678,   559,   675,   560,   674,  1185,
      -1,    -1,    -1,   420,   676,   842,   846,   677,   696,    -1,
      -1,    18,    -1,    -1,   680,    -1,   681,    -1,   680,   681,
      -1,   691,    -1,   690,    -1,    -1,   683,    -1,   684,    -1,
     684,   683,    -1,   473,    -1,    -1,   210,   871,   149,    -1,
      -1,   688,    -1,   689,    -1,   689,   687,    -1,   689,    -1,
     689,   688,    -1,   689,   561,   688,    -1,   140,  1003,   692,
      -1,   494,  1003,   692,    -1,   287,  1003,   963,    -1,   301,
    1003,   963,    -1,    24,  1003,   962,    -1,   353,  1003,  1105,
      -1,    67,  1003,  1105,    -1,    23,  1003,   963,    -1,   351,
    1003,   962,    -1,   351,  1003,   108,    -1,    56,  1003,   962,
      -1,   111,  1003,   962,    -1,   413,  1003,   693,    -1,   377,
    1003,   694,    -1,   374,  1003,   962,    -1,   375,  1003,   962,
      -1,   503,  1003,   559,   979,   560,    -1,   690,    -1,   691,
      -1,   221,  1003,   695,    -1,    93,   119,  1003,  1105,    -1,
     214,   119,  1003,  1105,    -1,    76,  1003,  1105,    -1,   738,
     730,  1003,   732,    -1,   738,    63,  1003,   737,    -1,  1109,
      -1,   108,    -1,   161,    -1,   130,    -1,    71,    -1,   383,
      -1,    70,    -1,   376,    -1,   373,    -1,   962,    -1,   329,
      -1,   160,    -1,   238,    -1,   957,    -1,   841,   845,    -1,
      -1,    10,    -1,   461,    -1,   381,    -1,   105,    -1,   224,
      -1,   700,    -1,   699,   561,   700,    -1,   701,    -1,   702,
      -1,   707,   703,    -1,   707,   743,    -1,   751,   761,   757,
     559,   759,   560,    -1,   705,   752,   761,   757,   559,   759,
     560,    -1,   705,   166,   233,   761,   559,   759,   560,   743,
      -1,   706,   703,    -1,   705,   704,    -1,    -1,   704,    -1,
      57,   853,    -1,    -1,   706,    -1,    78,   761,    -1,    -1,
    1101,   708,   709,   726,    -1,   717,   724,   721,    -1,   718,
     725,   721,    -1,   163,   719,   721,    -1,    37,    -1,    37,
     559,   332,   560,    -1,    41,    -1,    40,    -1,   713,   559,
     332,   560,   739,    -1,   713,   739,    -1,   714,   559,   332,
     560,   740,    -1,   714,   740,    -1,    32,   559,   332,   560,
      -1,    32,    -1,   715,   559,   332,   560,   739,    -1,   716,
     559,   332,   560,   740,    -1,   523,   559,   332,   560,    -1,
     542,   724,   721,    -1,    97,    -1,   481,    -1,   478,   724,
      -1,    94,    -1,   482,    -1,    39,   724,    -1,   712,    -1,
     291,    -1,   260,    -1,   263,   523,    -1,   263,   715,   739,
      -1,   484,   739,    -1,   477,   724,   739,    -1,   293,   739,
      -1,   261,   739,    -1,   105,   719,   721,    -1,   333,   719,
     721,    -1,   161,   719,   721,    -1,    -1,   141,   710,   559,
     763,   560,   739,    -1,    -1,   426,   711,   559,   763,   560,
     739,    -1,   263,   739,    -1,   424,    -1,   183,    -1,   182,
      -1,   357,    -1,   312,    -1,   251,    -1,   311,    -1,   359,
      -1,   313,    -1,    55,    -1,   320,    -1,   317,    55,    -1,
     713,   527,    -1,   524,    -1,   317,   524,    -1,   334,    -1,
     320,   524,    -1,   317,    55,   527,    -1,   320,   527,    -1,
     224,    -1,   483,    -1,   436,    -1,   292,    -1,    31,    -1,
     381,    -1,   124,    -1,   124,   361,    -1,    -1,   559,   332,
     560,    -1,   720,    -1,   559,   332,   561,   332,   560,    -1,
      -1,   722,    -1,   722,   723,    -1,   723,    -1,   433,    -1,
     509,    -1,   543,    -1,    -1,   559,   332,   560,    -1,    -1,
     720,    -1,    -1,   727,    -1,   727,   728,    -1,   728,    -1,
     331,    -1,   871,   331,    -1,   108,   729,    -1,   337,   511,
     328,   852,    -1,    23,    -1,   424,   108,   522,    -1,   742,
     233,    -1,   504,    -1,   504,   233,    -1,    67,  1105,    -1,
      63,   735,    -1,   328,   852,    -1,  1092,    -1,    55,   426,
      -1,    54,    -1,  1109,    -1,    32,    -1,   731,    -1,   108,
      -1,  1109,    -1,    32,    -1,   733,    -1,   108,    -1,  1109,
      -1,    -1,    63,   737,    -1,   735,    -1,   108,    -1,    -1,
     108,    -1,    -1,    20,   740,    -1,    45,    -1,   502,   740,
      -1,   730,   731,   740,    -1,    32,   741,    -1,    -1,    32,
      -1,    -1,    20,    -1,   502,    -1,   730,   731,    -1,    -1,
     364,    -1,    -1,   384,  1102,   744,   745,    -1,   747,    -1,
     559,   746,   560,   747,    -1,   746,   561,  1107,    -1,  1107,
      -1,    -1,   748,    -1,   748,   749,    -1,   749,    -1,   337,
     112,   750,    -1,   337,   511,   750,    -1,   284,   173,    -1,
     284,   352,    -1,   284,   434,    -1,   401,    -1,    48,    -1,
     426,   331,    -1,   329,     5,    -1,   426,   108,    -1,   753,
      -1,   174,   754,    -1,   439,   754,    -1,   364,   233,    -1,
     504,   754,    -1,   233,    -1,   214,    -1,    -1,   753,    -1,
     232,    -1,   214,    -1,   213,    -1,    -1,   504,    -1,   174,
      -1,   439,    -1,    -1,   516,   758,    -1,   494,   758,    -1,
      43,    -1,   415,    -1,   197,    -1,   759,   561,   760,   955,
      -1,   760,   955,    -1,  1107,    -1,  1107,   559,   332,   560,
      -1,    -1,  1101,    -1,    -1,   566,  1107,    -1,  1090,    -1,
     763,   561,  1090,    -1,    -1,    13,   778,   472,  1102,   765,
     771,    -1,    -1,    13,    91,   770,   766,   679,    -1,    -1,
      13,   366,   600,   767,   607,    -1,    -1,    13,   175,   600,
     768,   607,    -1,    -1,    13,  1204,  1198,  1207,   528,  1102,
     769,  1210,    18,  1212,  1213,    -1,    -1,  1107,    -1,    -1,
     121,   471,    -1,   212,   471,    -1,   773,    -1,   771,   561,
     773,    -1,     6,   777,    -1,   772,   701,   780,    -1,     6,
     702,    -1,   772,   559,   699,   560,    -1,    -1,    52,   777,
    1101,   774,   707,   780,    -1,    -1,    -1,   306,   777,  1101,
     775,   709,   726,   776,   780,    -1,   126,   777,  1101,   779,
      -1,   126,   166,   233,   761,    -1,   126,   364,   233,    -1,
     126,   753,  1101,    -1,   120,   232,    -1,   134,   232,    -1,
      13,   777,  1101,   426,   108,  1092,    -1,    13,   777,  1101,
     126,   108,    -1,   391,   781,  1102,    -1,    81,   485,   730,
     732,   736,    -1,   687,    -1,   165,    -1,   952,    -1,    -1,
      66,    -1,    -1,   211,    -1,    -1,   401,    -1,    48,    -1,
      -1,     8,  1107,    -1,   160,    -1,    -1,   485,    -1,   142,
      -1,    18,    -1,    -1,   454,   435,   787,   783,   791,    -1,
     458,   435,   787,    -1,    -1,   435,   454,   787,   784,   791,
      -1,   435,   458,   787,    -1,   454,   487,   786,    -1,    -1,
     534,    77,   437,    -1,    -1,   788,   789,    -1,   790,    -1,
     789,   561,   790,    -1,    -1,   451,    -1,   388,    -1,    -1,
     510,   792,    -1,   588,    -1,   792,   561,   588,    -1,    -1,
     400,  1132,   794,   979,   171,  1105,    -1,    -1,    26,  1132,
     796,   979,   485,  1105,    -1,    -1,    56,  1132,   798,   979,
     799,    -1,    -1,   372,    -1,   153,    -1,    -1,   392,   814,
    1132,   801,   979,   802,    -1,    -1,   803,    -1,   804,    -1,
     804,   803,    -1,   372,    -1,   153,    -1,   514,    -1,    -1,
      14,   814,  1132,   806,   979,   809,    -1,    -1,    57,  1132,
     808,   979,   809,    -1,    -1,   810,    -1,   811,    -1,   811,
     810,    -1,   372,    -1,   156,    -1,   294,    -1,   153,    -1,
      53,    -1,    -1,   341,   814,  1132,   813,   979,   809,    -1,
      -1,   330,    -1,   253,    -1,    -1,   391,  1132,   816,   818,
      -1,   391,   513,   599,   817,    -1,  1110,   485,  1110,    -1,
     817,   561,  1110,   485,  1110,    -1,   819,    -1,   818,   561,
     819,    -1,  1102,   485,  1102,    -1,    46,   214,   821,   226,
     823,    -1,   822,    -1,   821,   561,   822,    -1,  1102,   828,
      -1,  1107,    -1,   108,    -1,    -1,   252,   214,   223,    46,
     825,   826,    -1,   827,    -1,   826,   561,   827,    -1,  1102,
     828,   831,    -1,    -1,   829,   830,    -1,    -1,   754,   559,
     935,   560,    -1,    -1,   211,   242,    -1,   833,    -1,   420,
     835,    -1,   559,   834,   560,  1185,    -1,   420,   837,    -1,
     559,   834,   560,    -1,    -1,   837,   836,  1182,    -1,    -1,
      -1,   838,   842,   846,   839,   840,   845,    -1,   951,   957,
      -1,   973,    -1,   841,    -1,   973,   841,    -1,   841,   973,
      -1,   171,   909,   943,   948,   945,   951,   957,   964,    -1,
     171,   127,   943,   957,    -1,    -1,   843,    -1,   843,   844,
      -1,   844,    -1,   460,    -1,   201,    -1,   122,    -1,   449,
      -1,   444,    -1,   445,    -1,   447,    -1,   448,    -1,   446,
      -1,    12,    -1,    -1,   168,   511,    -1,   257,   226,   428,
     304,    -1,   846,   561,   847,    -1,   847,    -1,   553,    -1,
     848,   850,   849,   851,    -1,    -1,    -1,  1096,    -1,   853,
      -1,    -1,    18,  1107,    -1,    18,  1105,    -1,  1107,    -1,
    1105,    -1,    -1,   559,   560,    -1,    -1,   856,   854,   855,
      -1,    -1,   855,   869,   856,    -1,   856,   539,   856,    -1,
      -1,   859,   857,   858,    -1,    -1,   858,   870,   859,    -1,
     327,   859,    -1,   860,    -1,   861,   227,   491,    -1,   861,
     227,   871,   491,    -1,   861,   227,   155,    -1,   861,   227,
     871,   155,    -1,   861,   227,   507,    -1,   861,   227,   871,
     507,    -1,   861,    -1,   861,   227,   331,    -1,   861,   227,
     871,   331,    -1,   861,   143,   862,    -1,   861,   873,   862,
      -1,   861,   873,   874,  1194,    -1,   862,    -1,   863,   226,
     559,   895,   560,    -1,   863,   871,   226,   559,   895,   560,
      -1,   863,   226,  1194,    -1,   863,   871,   226,  1194,    -1,
     863,   548,   863,    16,   862,    -1,   863,   871,   548,   863,
      16,   862,    -1,   863,   438,   247,   863,    -1,   863,   247,
     876,   947,    -1,   863,   871,   247,   876,   947,    -1,   863,
     385,   863,    -1,   863,   871,   385,   863,    -1,   863,    -1,
     863,   549,   864,    -1,   864,    -1,   864,   550,   865,    -1,
     865,    -1,   865,   429,   866,    -1,   865,   430,   866,    -1,
     866,    -1,   866,   552,   867,    -1,   866,   551,   867,    -1,
     866,   552,   875,   937,    -1,   866,   551,   875,   937,    -1,
     867,    -1,   867,   553,   868,    -1,   867,   554,   868,    -1,
     867,   555,   868,    -1,   867,   123,   868,    -1,   867,   307,
     868,    -1,   868,    -1,   868,   556,   876,    -1,   876,    -1,
     347,    -1,   344,    -1,    16,    -1,    15,    -1,   327,    -1,
     326,    -1,   562,    -1,   326,    -1,   142,    -1,   180,    -1,
     195,    -1,   239,    -1,   266,    -1,   322,    -1,    12,    -1,
      17,    -1,   222,   853,    -1,  1098,    -1,   876,    63,  1109,
      -1,  1093,    -1,  1091,    -1,   565,  1109,   427,   853,    -1,
     565,  1109,    -1,   565,   565,  1122,  1109,   762,    -1,   885,
      -1,   876,   346,   876,    -1,   552,   876,    -1,   551,   876,
      -1,   557,   876,    -1,   872,   876,    -1,   559,   853,   560,
      -1,   559,   853,   561,   895,   560,    -1,   414,   559,   853,
     561,   895,   560,    -1,   149,  1192,    -1,  1190,    -1,   563,
    1107,   853,   564,    -1,   284,   898,     9,   559,   863,   879,
     560,    -1,    20,   559,   853,   560,    -1,    32,   876,    -1,
      50,   559,   853,    18,   894,   560,    -1,   547,   902,   531,
     904,   903,   138,    -1,    81,   559,   853,   561,   894,   560,
      -1,    81,   559,   853,   516,   731,   560,    -1,   108,   559,
    1098,   560,    -1,   521,   559,  1099,   560,    -1,   176,   559,
     560,    -1,   177,   559,   853,   560,    -1,   178,   559,   853,
     561,   853,   560,    -1,   179,   559,   853,   561,   853,   561,
     853,   560,    -1,     7,   559,   853,   561,   853,   560,    -1,
       7,   559,   853,   561,   222,   853,   937,   560,    -1,   394,
     559,   853,   561,   853,   560,    -1,    22,   559,   853,   560,
      -1,    22,   559,   853,   561,   853,   560,    -1,    55,   559,
     895,   560,    -1,    55,   559,   895,   516,   731,   560,    -1,
      54,   559,   853,   560,    -1,    61,   559,   895,   560,    -1,
      64,   559,   853,   560,    -1,    72,   559,   895,   560,    -1,
      73,   559,   853,   561,   895,   560,    -1,    82,   559,   853,
     561,   853,   561,   853,   560,    -1,    87,   852,    -1,    90,
     852,    -1,    90,   559,   853,   560,    -1,    88,   852,    -1,
      95,   559,   853,   561,   875,   937,   560,    -1,    96,   559,
     853,   561,   875,   937,   560,    -1,    91,   559,   560,    -1,
      97,   559,   853,   560,    -1,   102,   559,   853,   560,    -1,
     133,   559,   853,   561,   895,   560,    -1,   267,   559,   853,
     561,   895,   560,    -1,   137,   559,   853,   560,    -1,   137,
     559,   853,   561,   853,   560,    -1,   107,   559,   853,   561,
    1106,   560,    -1,   136,   559,   853,   561,  1106,   560,    -1,
     115,   559,   853,   560,    -1,   115,   559,   853,   561,   853,
     560,    -1,   116,   559,   853,   560,    -1,   116,   559,   853,
     561,   853,   560,    -1,   152,   559,   853,   561,   853,   561,
     853,   560,    -1,   152,   559,   853,   561,   853,   561,   853,
     561,   853,   560,    -1,   152,   559,   853,   561,   853,   561,
     853,   561,   853,   561,   853,   560,    -1,   167,   559,   853,
     561,   332,   560,    -1,   172,   559,   853,   560,    -1,   172,
     559,   853,   561,   853,   560,    -1,   158,   559,   853,   561,
     895,   560,    -1,   878,    -1,   186,   559,   939,   561,   853,
     560,    -1,   206,   559,   853,   560,    -1,   210,   559,   853,
     561,   853,   561,   853,   560,    -1,   220,   559,   853,   561,
     853,   561,   853,   561,   853,   560,    -1,   875,   937,   552,
     853,    -1,   875,    -1,   237,   559,   560,    -1,   237,   559,
     853,   560,    -1,   244,   559,   853,   561,   853,   560,    -1,
     254,   559,   853,   561,   853,   560,    -1,   254,   559,   853,
     561,   853,   561,   853,   560,    -1,   191,   559,   853,   561,
     895,   560,    -1,   241,   559,   853,   561,   895,   560,    -1,
     259,   559,   853,   560,    -1,   259,   559,   853,   561,   853,
     560,    -1,   274,   559,   853,   561,   853,   560,    -1,   274,
     559,   853,   561,   853,   561,   853,   560,    -1,   296,   559,
     853,   560,    -1,   300,   559,   853,   560,    -1,   307,   559,
     853,   561,   853,   560,    -1,   308,   559,   853,   560,    -1,
     328,   852,    -1,   328,   559,   853,   560,    -1,   353,   559,
     853,   560,    -1,   336,   559,   853,   560,    -1,   360,   559,
     863,   226,   853,   560,    -1,   370,   559,   853,   560,    -1,
     378,   559,   853,   560,    -1,   378,   559,   560,    -1,   395,
     559,   853,   561,   853,   561,   853,   560,    -1,   406,   559,
     853,   561,   853,   560,    -1,   409,   559,   853,   560,    -1,
     409,   559,   853,   561,   853,   560,    -1,   412,   559,   560,
      -1,   462,   559,   853,   561,   853,   560,    -1,   462,   559,
     853,   561,   222,   853,   937,   560,    -1,   418,   559,   853,
     560,    -1,   464,   559,   853,   561,   853,   561,   853,   560,
      -1,   464,   559,   853,   561,   853,   560,    -1,   464,   559,
     853,   171,   853,   168,   853,   560,    -1,   464,   559,   853,
     171,   853,   560,    -1,   465,   559,   853,   561,   853,   561,
     853,   560,    -1,   469,   852,    -1,   469,   559,   853,   560,
      -1,   481,   559,   853,   560,    -1,   478,   559,   853,   560,
      -1,   478,   559,   853,   561,   853,   560,    -1,   479,   559,
     938,   561,   853,   561,   853,   560,    -1,   480,   559,   938,
     561,   853,   561,   853,   560,    -1,   490,   559,   853,   560,
      -1,   490,   559,   240,   853,   171,   853,   560,    -1,   490,
     559,   486,   853,   171,   853,   560,    -1,   490,   559,    42,
     853,   171,   853,   560,    -1,   490,   559,   240,   171,   853,
     560,    -1,   490,   559,   486,   171,   853,   560,    -1,   490,
     559,    42,   171,   853,   560,    -1,   490,   559,   853,   171,
     853,   560,    -1,   492,   559,   853,   561,   853,   560,    -1,
    1107,   566,  1107,   559,   880,   560,    -1,    -1,  1104,   559,
     877,   880,   560,    -1,   505,   559,  1089,   561,   332,   561,
     332,   561,   895,   560,    -1,   506,   559,   560,    -1,   506,
     559,   853,   560,    -1,   513,   559,   560,    -1,   517,   852,
      -1,   519,   852,    -1,   518,   852,    -1,   530,   559,   853,
     560,    -1,   530,   559,   853,   561,   853,   560,    -1,   542,
     559,   853,   560,    -1,   540,   559,   853,   560,    -1,   540,
     559,   853,   561,   853,   560,    -1,    29,   559,   962,   561,
     853,   560,    -1,   154,   559,   937,   171,   853,   560,    -1,
      79,   559,   853,   561,   853,   560,    -1,   184,   559,   853,
     560,    -1,   184,   559,   853,   561,   853,   560,    -1,   185,
     559,   853,   560,    -1,   185,   559,   853,   561,   853,   560,
      -1,   182,   559,   895,   560,    -1,   251,   559,   895,   560,
      -1,   311,   559,   895,   560,    -1,   303,   559,   853,   560,
      -1,   303,   559,   853,   561,   853,   560,    -1,   309,   559,
     853,   560,    -1,   309,   559,   853,   561,   853,   560,    -1,
     310,   559,   853,   560,    -1,   310,   559,   853,   561,   853,
     560,    -1,   312,   559,   895,   560,    -1,   313,   559,   895,
     560,    -1,   357,   559,   853,   561,   853,   560,    -1,   356,
     559,   853,   560,    -1,   356,   559,   853,   561,   853,   560,
      -1,   358,   559,   853,   560,    -1,   358,   559,   853,   561,
     853,   560,    -1,   359,   559,   895,   560,    -1,   181,   559,
     853,   560,    -1,   181,   559,   853,   561,   853,   560,    -1,
     249,   559,   853,   560,    -1,   249,   559,   853,   561,   853,
     560,    -1,    -1,   534,   371,   151,    -1,   226,    40,   304,
      -1,    -1,   881,    -1,    -1,   882,   883,    -1,   884,    -1,
     883,   561,   884,    -1,   848,   853,   849,   851,    -1,    25,
     559,   892,   560,    -1,    25,   559,   122,   892,   560,    -1,
      35,   559,   892,   560,    -1,    36,   559,   892,   560,    -1,
      38,   559,   892,   560,    -1,    83,   559,   942,   553,   560,
      -1,    83,   559,   892,   560,    -1,    -1,    -1,    83,   559,
     122,   886,   895,   887,   560,    -1,   194,   559,  1089,   561,
     332,   561,   332,   561,   892,   560,    -1,   302,   559,   892,
     560,    -1,   302,   559,   122,   892,   560,    -1,   288,   559,
     892,   560,    -1,   288,   559,   122,   892,   560,    -1,   456,
     559,   892,   560,    -1,   526,   559,   892,   560,    -1,   457,
     559,   892,   560,    -1,   520,   559,   892,   560,    -1,   466,
     559,   892,   560,    -1,   466,   559,   122,   892,   560,    -1,
      -1,   193,   559,   889,   888,   895,   891,   890,   560,    -1,
      -1,   122,    -1,    -1,   422,  1090,    -1,    -1,   952,    -1,
      -1,   942,   893,   853,    -1,    32,   724,    -1,    55,   724,
     739,    -1,   320,   724,    -1,   433,    -1,   433,   224,    -1,
     509,    -1,   509,   224,    -1,    97,    -1,   481,    -1,    94,
      -1,   105,   719,    -1,    -1,   896,   897,    -1,   853,    -1,
     897,   561,   853,    -1,   899,    -1,   559,   899,   560,    -1,
      -1,   900,   901,    -1,  1098,    -1,   901,   561,  1098,    -1,
      -1,   853,    -1,    -1,   545,   853,    -1,    -1,   905,   906,
      -1,   853,   546,   853,    -1,   906,   531,   853,   546,   853,
      -1,   920,    -1,    -1,   911,   908,    -1,   910,    -1,   907,
      -1,   910,   561,   907,    -1,   907,   919,   907,    -1,   907,
     460,   920,    -1,    -1,   907,   919,   907,   337,   912,   853,
      -1,    -1,   907,   460,   920,   337,   913,   853,    -1,    -1,
     907,   919,   907,   516,   914,   559,   936,   560,    -1,   907,
     318,   231,   920,    -1,    -1,   907,   244,   930,   231,   907,
     337,   915,   853,    -1,    -1,   907,   244,   930,   231,   920,
     916,   516,   559,   936,   560,    -1,   907,   318,   244,   930,
     231,   920,    -1,    -1,   907,   406,   930,   231,   907,   337,
     917,   853,    -1,    -1,   907,   406,   930,   231,   920,   918,
     516,   559,   936,   560,    -1,   907,   318,   406,   930,   231,
     920,    -1,   231,    -1,   216,   231,    -1,    85,   231,    -1,
      -1,   921,  1102,   941,   931,    -1,    -1,   563,  1107,   907,
     244,   348,   231,   907,   337,   922,   853,   564,    -1,   929,
     928,   925,    -1,   559,   928,   923,  1185,   560,   941,    -1,
      -1,   928,   924,   910,    -1,    -1,    -1,   926,   842,   846,
     927,   696,    -1,    -1,   420,    -1,    -1,   348,    -1,    -1,
     515,   932,    -1,   165,   932,    -1,   211,   932,    -1,    -1,
     753,   933,   559,   934,   560,    -1,    -1,   935,    -1,   935,
     561,  1107,    -1,  1107,    -1,   364,    -1,  1107,    -1,   936,
     561,  1107,    -1,   938,    -1,    98,    -1,    99,    -1,   100,
      -1,   101,    -1,   203,    -1,   204,    -1,   205,    -1,   296,
      -1,   298,    -1,   299,    -1,   417,    -1,   541,    -1,   102,
      -1,   530,    -1,   206,    -1,   170,    -1,   300,    -1,   308,
      -1,   370,    -1,   418,    -1,   542,    -1,    97,    -1,   481,
      -1,    94,    -1,   478,    -1,    -1,    18,    -1,   142,    -1,
      -1,   940,  1107,    -1,    -1,    12,    -1,    -1,    -1,   532,
     944,   853,    -1,    -1,    -1,   198,   946,   853,    -1,   146,
     876,    -1,    -1,    -1,   192,    44,   949,   950,    -1,   949,
     561,  1097,   955,    -1,  1097,   955,    -1,    -1,   534,    86,
      -1,   534,   408,    -1,    -1,   952,    -1,    -1,   345,    44,
     953,   954,    -1,   954,   561,  1097,   955,    -1,  1097,   955,
      -1,    -1,    19,    -1,   113,    -1,    -1,   958,    -1,    -1,
     958,    -1,   248,   959,    -1,   960,    -1,   960,   561,   960,
      -1,   960,   335,   960,    -1,  1091,    -1,   497,    -1,   262,
      -1,   332,    -1,    -1,   248,   960,    -1,   332,    -1,   200,
      -1,   262,    -1,   497,    -1,   104,    -1,   162,    -1,   332,
      -1,   497,    -1,   262,    -1,   104,    -1,   162,    -1,    -1,
      -1,   366,  1107,   965,   559,   966,   560,    -1,    -1,   967,
      -1,   967,   561,   968,    -1,   968,    -1,   848,   853,    -1,
      -1,   970,   971,    -1,   971,   561,   972,    -1,   972,    -1,
     565,  1109,    -1,  1109,    -1,    -1,   223,   349,  1105,   974,
    1078,  1081,    -1,   223,   128,  1105,    -1,   223,   969,    -1,
      -1,   125,   976,   895,    -1,   126,   982,  1132,   981,   979,
     779,    -1,    -1,   126,   214,  1107,   337,  1102,   978,    -1,
     126,    91,   981,  1107,    -1,   126,   175,   981,   600,    -1,
     126,   366,   981,   600,    -1,   126,   513,   599,  1162,    -1,
     126,   528,   981,   979,   779,    -1,   126,   488,   600,    -1,
     980,    -1,   979,   561,   980,    -1,  1102,    -1,    -1,   210,
     149,    -1,    -1,   473,    -1,    -1,    -1,   220,   984,   989,
     778,   991,   985,   993,  1009,    -1,    -1,    -1,   395,   987,
     990,   991,   988,   993,    -1,    -1,   265,    -1,   110,    -1,
     201,    -1,  1018,    -1,   110,    -1,   223,   992,    -1,   992,
      -1,   980,    -1,   996,    -1,   559,   560,   996,    -1,   559,
     995,   560,   996,    -1,    -1,   426,   994,  1000,    -1,   995,
     561,  1095,    -1,  1095,    -1,   521,   999,    -1,   522,   999,
      -1,    -1,   675,   997,  1182,    -1,    -1,   559,   675,   560,
     998,  1185,    -1,   999,   561,  1004,    -1,  1004,    -1,  1000,
     561,  1001,    -1,  1001,    -1,  1099,  1002,  1008,    -1,   142,
      -1,   427,    -1,    -1,  1002,    -1,    -1,   559,  1005,  1006,
     560,    -1,    -1,  1007,    -1,  1007,   561,  1008,    -1,  1008,
      -1,   853,    -1,   108,    -1,    -1,    -1,   337,   129,  1010,
     233,   511,  1016,    -1,    -1,    -1,   511,  1012,  1018,   778,
     909,   426,  1014,  1013,   943,   951,   961,    -1,  1014,   561,
    1015,    -1,  1015,    -1,  1099,  1002,  1008,    -1,  1016,   561,
    1017,    -1,  1017,    -1,  1099,  1002,  1008,    -1,    -1,   265,
      -1,    -1,   112,  1020,  1028,  1021,    -1,    -1,   171,  1102,
    1022,   943,   951,   961,    -1,    -1,  1025,  1023,   171,   909,
     943,    -1,    -1,   171,  1025,  1024,   516,   909,   943,    -1,
    1026,    -1,  1025,   561,  1026,    -1,  1107,  1027,   941,    -1,
    1107,   566,  1107,  1027,   941,    -1,    -1,   566,   553,    -1,
      -1,  1029,  1028,    -1,   372,    -1,   265,    -1,   211,    -1,
     492,  1031,   980,    -1,    -1,   472,    -1,    -1,   431,  1033,
    1034,    -1,    92,  1045,    -1,  1041,   470,  1040,  1045,    -1,
    1041,   489,  1040,  1045,    -1,   472,   455,  1040,  1045,    -1,
     340,   470,  1040,  1045,    -1,    -1,   140,   692,  1035,  1037,
      -1,  1041,    65,  1042,  1102,  1040,  1045,    -1,   323,   282,
     168,   435,   534,   270,   142,  1105,    16,   271,   142,   963,
      16,   275,   142,   962,    -1,  1038,   258,    -1,   435,   202,
      -1,    -1,    33,   147,  1043,  1044,  1036,   956,    -1,   755,
    1042,  1102,  1040,   943,    -1,    66,   493,    -1,   472,   493,
      -1,  1039,   139,    -1,   365,    -1,    83,   559,   553,   560,
     529,    -1,    83,   559,   553,   560,   144,    -1,   529,   956,
      -1,   144,   956,    -1,  1121,   455,  1045,    -1,   217,   455,
      -1,   314,   455,    -1,  1041,   368,    -1,  1121,   525,  1045,
      -1,   730,  1045,    -1,    64,  1045,    -1,    30,   258,    -1,
     258,    -1,   190,    -1,   190,   168,  1110,    -1,    84,    91,
     685,  1107,    -1,    84,   472,  1102,    -1,    84,   528,  1102,
      -1,   282,   455,    -1,   435,   455,    -1,    84,   366,   600,
      -1,    84,   175,   600,    -1,   366,   455,  1045,    -1,   175,
     455,  1045,    -1,   366,    62,   600,    -1,   175,    62,   600,
      -1,   455,    -1,   258,    -1,   282,    -1,    32,    -1,    -1,
     459,    -1,    -1,  1042,  1107,    -1,    -1,   173,    -1,   171,
      -1,   226,    -1,    -1,   226,  1105,    -1,    -1,   171,   963,
      -1,    -1,   247,  1105,    -1,   532,   853,    -1,    -1,  1049,
    1102,  1047,  1051,    -1,    -1,  1049,  1050,  1048,   832,    -1,
     113,    -1,   114,    -1,    -1,   153,    -1,    -1,  1090,    -1,
    1107,    -1,    -1,   164,   814,  1053,  1054,    -1,  1054,   561,
    1055,    -1,  1055,    -1,    -1,  1132,  1056,  1057,    -1,   470,
     534,   380,   257,    -1,   371,    46,    -1,   202,    -1,   365,
      -1,   258,    -1,   455,    -1,   435,    -1,   282,    -1,   117,
      -1,   399,    -1,    -1,   979,    -1,    -1,   398,  1059,  1060,
      -1,  1060,   561,  1061,    -1,  1061,    -1,   435,    -1,   282,
      -1,   371,    46,    -1,    -1,   369,  1063,  1064,    -1,  1038,
     258,  1065,    -1,   485,  1105,    -1,    27,   853,    -1,   234,
    1067,   853,    -1,    -1,    76,    -1,   371,    -1,   515,  1107,
      -1,    -1,   252,    93,  1070,  1071,    -1,   252,   472,  1102,
     171,   282,    -1,    -1,    -1,    -1,  1076,  1075,   215,  1105,
    1072,  1077,   223,  1073,   472,  1102,  1074,  1078,  1081,  1084,
    1085,  1088,    -1,   171,   282,    -1,    -1,   253,    -1,    -1,
      74,    -1,   265,    -1,    -1,   395,    -1,   211,    -1,    -1,
      65,  1079,    -1,  1079,  1080,    -1,  1080,    -1,   475,    44,
    1090,    -1,   343,   135,    44,  1090,    -1,   135,    44,  1090,
      -1,   145,    44,  1090,    -1,    -1,   250,  1082,    -1,  1082,
    1083,    -1,  1083,    -1,   475,    44,  1090,    -1,   453,    44,
    1090,    -1,    -1,   211,   332,   250,    -1,    -1,   559,  1086,
     560,    -1,   559,   560,    -1,  1086,   561,  1087,    -1,  1087,
      -1,  1099,    -1,   565,  1109,    -1,    -1,   426,  1016,    -1,
    1106,    -1,   319,    -1,   500,   476,    -1,  1089,  1106,    -1,
    1106,    -1,   200,    -1,    34,    -1,   354,    -1,  1093,    -1,
     552,  1094,    -1,   551,  1094,    -1,  1089,    -1,  1094,    -1,
     331,    -1,   155,    -1,   491,    -1,   200,    -1,    34,    -1,
     500,   200,    -1,   500,    34,    -1,    97,  1089,    -1,   481,
    1089,    -1,   478,  1089,    -1,   332,    -1,   262,    -1,   497,
      -1,   104,    -1,   162,    -1,  1099,    -1,  1096,    -1,  1107,
     566,   553,    -1,  1107,   566,  1107,   566,   553,    -1,   853,
      -1,  1107,    -1,  1100,    -1,  1107,    -1,  1100,    -1,  1107,
     566,  1107,    -1,   566,  1107,   566,  1107,    -1,  1107,   566,
    1107,   566,  1107,    -1,  1107,    -1,  1107,   566,  1107,   566,
    1107,    -1,  1107,   566,  1107,    -1,   566,  1107,    -1,  1107,
      -1,  1107,   566,  1107,    -1,   566,  1107,    -1,  1107,    -1,
     207,    -1,   209,    -1,   476,    -1,   476,    -1,  1104,    -1,
    1111,    -1,  1104,    -1,  1112,    -1,  1107,    -1,  1105,    -1,
     246,    -1,  1109,    -1,  1109,   565,  1109,    -1,    88,   852,
      -1,  1112,    -1,    20,    -1,    26,    -1,    28,    -1,    45,
      -1,    46,    -1,    54,    -1,    56,    -1,    60,    -1,    67,
      -1,    69,    -1,    79,    -1,   103,    -1,   125,    -1,   138,
      -1,   148,    -1,   164,    -1,   196,    -1,   199,    -1,   236,
      -1,   329,    -1,   340,    -1,   362,    -1,   392,    -1,   398,
      -1,   400,    -1,   407,    -1,   416,    -1,   419,    -1,   433,
      -1,   435,    -1,   454,    -1,   458,    -1,   492,    -1,   502,
      -1,   538,    -1,     5,    -1,     7,    -1,     8,    -1,     9,
      -1,    10,    -1,    11,    -1,    17,    -1,    23,    -1,    24,
      -1,    25,    -1,    30,    -1,    33,    -1,    37,    -1,    41,
      -1,    40,    -1,    43,    -1,    49,    -1,    51,    -1,    53,
      -1,    58,    -1,    59,    -1,    62,    -1,    64,    -1,    65,
      -1,    68,    -1,    70,    -1,    71,    -1,    74,    -1,    77,
      -1,    86,    -1,    93,    -1,    94,    -1,    97,    -1,   102,
      -1,   109,    -1,   111,    -1,   117,    -1,   119,    -1,   121,
      -1,   128,    -1,   129,    -1,   130,    -1,   141,    -1,   140,
      -1,   139,    -1,   144,    -1,   146,    -1,   147,    -1,   151,
      -1,   153,    -1,   156,    -1,   169,    -1,   120,    -1,   134,
      -1,   173,    -1,   159,    -1,   160,    -1,   161,    -1,   170,
      -1,   183,    -1,   182,    -1,   186,    -1,   190,    -1,   187,
      -1,   197,    -1,   202,    -1,   206,    -1,   208,    -1,   225,
      -1,   212,    -1,   213,    -1,   228,    -1,   229,    -1,   217,
      -1,   221,    -1,   388,    -1,   238,    -1,   242,    -1,   245,
      -1,   251,    -1,   253,    -1,   256,    -1,   258,    -1,   287,
      -1,   282,    -1,   269,    -1,   273,    -1,   270,    -1,   271,
      -1,   283,    -1,   272,    -1,   275,    -1,   268,    -1,   281,
      -1,   277,    -1,   276,    -1,   278,    -1,   279,    -1,   280,
      -1,   285,    -1,   286,    -1,   289,    -1,   290,    -1,   294,
      -1,   295,    -1,   296,    -1,   297,    -1,   300,    -1,   301,
      -1,   306,    -1,   304,    -1,   308,    -1,   311,    -1,   312,
      -1,   313,    -1,   314,    -1,   316,    -1,   315,    -1,   317,
      -1,   320,    -1,   321,    -1,   324,    -1,   323,    -1,   325,
      -1,   334,    -1,   335,    -1,   336,    -1,   338,    -1,   339,
      -1,   351,    -1,   352,    -1,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,   363,    -1,   365,    -1,   367,    -1,   368,
      -1,   370,    -1,   371,    -1,   372,    -1,   373,    -1,   374,
      -1,   375,    -1,   376,    -1,   377,    -1,   382,    -1,   383,
      -1,   386,    -1,   387,    -1,   390,    -1,   393,    -1,   396,
      -1,   399,    -1,   402,    -1,   403,    -1,   408,    -1,   410,
      -1,   411,    -1,   413,    -1,   414,    -1,   415,    -1,   418,
      -1,   424,    -1,   423,    -1,   425,    -1,   434,    -1,   428,
      -1,   432,    -1,   437,    -1,   438,    -1,   446,    -1,   445,
      -1,   448,    -1,   451,    -1,   455,    -1,   459,    -1,   461,
      -1,   462,    -1,   463,    -1,   467,    -1,   468,    -1,   470,
      -1,   471,    -1,   473,    -1,   474,    -1,   477,    -1,   487,
      -1,   489,    -1,   478,    -1,   479,    -1,   480,    -1,   481,
      -1,   493,    -1,   494,    -1,   495,    -1,   175,    -1,   498,
      -1,   499,    -1,   507,    -1,   510,    -1,   513,    -1,   514,
      -1,   525,    -1,   528,    -1,   522,    -1,   529,    -1,   530,
      -1,   535,    -1,   537,    -1,   542,    -1,    -1,   426,  1115,
    1114,  1116,    -1,    -1,   342,    -1,  1117,    -1,  1116,   561,
    1117,    -1,    -1,  1118,  1123,    -1,  1120,    -1,   187,    -1,
     253,    -1,   425,    -1,    -1,   338,    -1,    -1,   187,    -1,
     253,    -1,   425,    -1,    -1,   187,   566,    -1,   253,   566,
      -1,   425,   566,    -1,  1124,    -1,  1120,  1125,    -1,  1119,
    1126,  1002,  1129,    -1,  1119,   487,   228,   245,  1127,    -1,
     565,  1109,  1002,   853,    -1,   565,   565,  1122,  1126,  1002,
    1129,    -1,   730,   734,    -1,   315,  1002,   853,    -1,   315,
     732,   736,    -1,   353,  1002,  1128,    -1,   353,   168,  1110,
    1002,  1128,    -1,  1107,    -1,  1107,   566,  1107,    -1,   108,
     566,  1107,    -1,   380,   498,    -1,   380,    68,    -1,   393,
     380,    -1,   423,    -1,   476,    -1,   353,   559,   476,   560,
      -1,   336,   559,   476,   560,    -1,   853,    -1,   108,    -1,
     337,    -1,    12,    -1,    32,    -1,    -1,   257,  1132,  1131,
    1133,    -1,   472,    -1,   470,    -1,  1134,    -1,  1133,   561,
    1134,    -1,  1102,   941,  1135,    -1,   380,    -1,   536,    -1,
     265,   536,    -1,   380,   253,    -1,    -1,   508,  1137,  1132,
      -1,   196,  1102,   340,   941,    -1,   196,  1103,    60,    -1,
      -1,   196,  1103,   380,  1139,  1140,   943,   957,    -1,  1141,
      -1,  1107,  1142,    -1,   160,    -1,   324,    -1,   160,    -1,
     324,    -1,   363,    -1,   238,    -1,    -1,  1144,  1143,   559,
    1007,   560,    -1,   142,    -1,   180,    -1,   239,    -1,   195,
      -1,   266,    -1,   405,   599,  1146,    -1,  1150,   337,  1149,
    1161,   171,  1163,    -1,  1150,   337,   175,  1161,   171,  1163,
      -1,  1150,   337,   366,  1161,   171,  1163,    -1,    12,  1151,
     561,   189,   342,   171,  1163,    -1,   189,   599,  1148,    -1,
    1150,   337,  1149,  1161,   485,  1163,  1168,  1169,    -1,  1150,
     337,   175,  1161,   485,  1163,  1168,  1169,    -1,  1150,   337,
     366,  1161,   485,  1163,  1168,  1169,    -1,    -1,   472,    -1,
    1152,    -1,    12,  1151,    -1,    -1,   365,    -1,  1153,    -1,
    1152,   561,  1153,    -1,    -1,   420,  1154,  1165,    -1,    -1,
     220,  1155,  1165,    -1,    -1,   511,  1156,  1165,    -1,    -1,
     384,  1157,  1165,    -1,   112,    -1,   512,    -1,   214,    -1,
      13,    -1,    84,    -1,   126,    -1,   148,    -1,   390,    -1,
     432,    -1,   367,    -1,   159,    -1,   189,   342,    -1,   431,
      92,    -1,   467,    -1,    84,   473,   470,    -1,   257,   470,
      -1,   396,   435,    -1,   396,    59,    -1,    84,   528,    -1,
     431,   528,    -1,    84,   410,    -1,    13,   410,    -1,    84,
     513,    -1,    -1,    16,    -1,  1160,  1158,  1159,    -1,  1160,
      -1,   463,   476,    -1,   229,   476,    -1,    58,   476,    -1,
     553,    -1,  1107,   566,   553,    -1,   553,   566,   553,    -1,
    1102,    -1,  1110,    -1,  1162,   561,  1110,    -1,  1164,    -1,
    1163,   561,  1164,    -1,  1110,   208,    44,   476,    -1,  1110,
     208,    44,   353,   476,    -1,  1110,    -1,    -1,   559,  1166,
     560,    -1,  1166,   561,  1167,    -1,  1167,    -1,  1107,    -1,
      -1,   397,  1159,    -1,   397,   452,    -1,   397,   537,    -1,
     397,   325,    -1,    -1,   534,  1170,    -1,  1170,  1171,    -1,
    1171,    -1,   189,   342,    -1,   286,   962,    -1,   289,   962,
      -1,   285,   962,    -1,   290,   962,    -1,    -1,    28,  1173,
    1174,    -1,    -1,   535,    -1,    -1,    16,   329,    51,    -1,
      16,    51,    -1,    -1,   389,    -1,   329,   389,    -1,    -1,
     416,    -1,    69,  1174,  1175,  1176,    -1,   407,  1174,  1175,
    1176,    -1,   407,  1174,   485,  1177,  1107,    -1,   416,  1107,
      -1,   389,   416,  1107,    -1,    -1,  1183,    -1,    -1,   503,
    1189,  1184,   833,    -1,    -1,  1183,    -1,  1186,    -1,    -1,
    1187,  1188,    -1,   952,   956,    -1,   958,    -1,    -1,   122,
      -1,    12,    -1,  1196,  1191,  1197,    -1,   835,    -1,  1196,
    1193,  1197,    -1,   835,    -1,  1196,  1195,  1197,    -1,   835,
      -1,   559,   420,    -1,   560,    -1,  1199,    -1,  1200,    -1,
     109,   142,  1109,   565,  1109,    -1,    -1,   109,   142,    88,
     852,    -1,  1202,    -1,  1202,  1203,    -1,  1203,    -1,   347,
     395,    -1,    11,   142,   499,    -1,    11,   142,   295,    -1,
      11,   142,   474,    -1,    -1,  1203,    -1,  1198,  1206,    -1,
    1201,  1198,  1208,    -1,  1208,    -1,  1214,    -1,    -1,   450,
     419,   109,    -1,   450,   419,   225,    -1,    -1,  1207,   528,
    1102,  1209,  1210,    18,  1212,  1213,    -1,    -1,   559,  1211,
     560,    -1,  1107,    -1,  1211,   561,  1107,    -1,   420,   848,
     835,    -1,   559,   848,   834,   560,  1185,    -1,    -1,   534,
      57,   342,    -1,   534,    49,    57,   342,    -1,   534,   253,
      57,   342,    -1,    -1,   488,   848,   600,   667,   668,   337,
    1102,   168,   131,   414,  1215,   639,    -1,   538,  1218,  1217,
    1219,    -1,   538,   138,  1217,  1221,    -1,   538,   362,  1217,
      -1,   538,    69,  1217,  1220,    -1,   538,   407,  1217,    -1,
     538,   382,    -1,  1090,    -1,  1090,   561,  1090,    -1,  1090,
     561,  1090,   561,   962,    -1,    28,    -1,   454,    -1,    -1,
     231,    -1,   402,    -1,    -1,   339,   355,    -1,    -1,    -1,
     468,  1222,  1223,    -1,    -1,   168,   297,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const unsigned short yyrline[] =
{
       0,   854,   854,   868,   871,   872,   877,   878,   879,   880,
     881,   882,   883,   884,   885,   886,   887,   888,   889,   890,
     891,   892,   893,   894,   895,   896,   897,   898,   899,   900,
     901,   902,   903,   904,   905,   906,   907,   908,   909,   910,
     911,   912,   913,   914,   915,   916,   917,   918,   919,   920,
     921,   922,   923,   927,   941,   942,   947,   961,   968,   978,
     977,   993,   995,   999,  1000,  1003,  1016,  1015,  1034,  1033,
    1044,  1045,  1048,  1053,  1058,  1063,  1068,  1072,  1077,  1081,
    1085,  1089,  1093,  1098,  1102,  1106,  1122,  1126,  1138,  1137,
    1161,  1160,  1180,  1179,  1192,  1191,  1200,  1225,  1232,  1239,
    1199,  1260,  1259,  1267,  1275,  1289,  1294,  1301,  1310,  1336,
    1342,  1350,  1362,  1309,  1393,  1394,  1398,  1399,  1404,  1406,
    1408,  1410,  1412,  1414,  1416,  1422,  1423,  1424,  1428,  1432,
    1440,  1439,  1452,  1454,  1458,  1462,  1469,  1471,  1475,  1476,
    1481,  1500,  1525,  1527,  1531,  1532,  1536,  1561,  1562,  1563,
    1564,  1568,  1569,  1573,  1574,  1579,  1582,  1609,  1608,  1665,
    1680,  1679,  1719,  1743,  1743,  1774,  1775,  1780,  1801,  1825,
    1831,  1846,  1847,  1851,  1855,  1864,  1869,  1874,  1882,  1897,
    1915,  1916,  1920,  1920,  1963,  1962,  1985,  1987,  1986,  1992,
    1994,  1991,  2017,  2019,  2019,  2030,  2060,  2088,  2113,  2173,
    2189,  2188,  2205,  2222,  2224,  2225,  2229,  2250,  2273,  2275,
    2288,  2273,  2306,  2308,  2309,  2313,  2315,  2346,  2313,  2366,
    2374,  2375,  2380,  2379,  2417,  2418,  2423,  2422,  2449,  2460,
    2462,  2459,  2484,  2483,  2499,  2501,  2506,  2508,  2510,  2515,
    2516,  2517,  2523,  2532,  2533,  2533,  2537,  2539,  2538,  2541,
    2540,  2546,  2562,  2545,  2576,  2577,  2580,  2581,  2584,  2585,
    2588,  2589,  2592,  2593,  2596,  2597,  2600,  2603,  2604,  2606,
    2608,  2611,  2612,  2615,  2616,  2617,  2620,  2621,  2622,  2623,
    2624,  2625,  2626,  2627,  2628,  2643,  2649,  2650,  2651,  2652,
    2657,  2662,  2667,  2682,  2683,  2684,  2685,  2686,  2687,  2691,
    2708,  2724,  2734,  2735,  2736,  2737,  2738,  2739,  2742,  2743,
    2744,  2747,  2748,  2749,  2752,  2753,  2756,  2757,  2760,  2761,
    2762,  2763,  2766,  2767,  2771,  2772,  2776,  2777,  2784,  2790,
    2798,  2812,  2816,  2822,  2824,  2828,  2832,  2833,  2837,  2842,
    2841,  2863,  2864,  2865,  2866,  2868,  2870,  2872,  2874,  2876,
    2878,  2881,  2884,  2887,  2890,  2892,  2895,  2898,  2899,  2900,
    2901,  2914,  2915,  2917,  2919,  2931,  2933,  2935,  2937,  2938,
    2939,  2940,  2941,  2942,  2944,  2946,  2948,  2948,  2950,  2950,
    2952,  2953,  2962,  2963,  2964,  2967,  2968,  2969,  2970,  2971,
    2975,  2979,  2980,  2984,  2985,  2989,  2990,  2991,  2992,  2993,
    2997,  2998,  2999,  3000,  3001,  3004,  3006,  3007,  3011,  3012,
    3013,  3016,  3023,  3024,  3027,  3028,  3031,  3032,  3033,  3036,
    3037,  3040,  3041,  3044,  3045,  3048,  3049,  3052,  3053,  3054,
    3055,  3057,  3058,  3064,  3070,  3076,  3082,  3083,  3099,  3100,
    3104,  3105,  3109,  3117,  3121,  3122,  3126,  3135,  3139,  3140,
    3143,  3153,  3154,  3158,  3159,  3162,  3163,  3166,  3167,  3168,
    3169,  3178,  3179,  3182,  3183,  3186,  3187,  3188,  3197,  3199,
    3201,  3206,  3205,  3217,  3218,  3221,  3222,  3226,  3227,  3230,
    3231,  3234,  3235,  3236,  3237,  3238,  3241,  3242,  3243,  3244,
    3245,  3248,  3249,  3250,  3262,  3263,  3266,  3267,  3270,  3271,
    3275,  3276,  3277,  3280,  3281,  3282,  3283,  3296,  3297,  3298,
    3301,  3302,  3306,  3309,  3310,  3313,  3314,  3325,  3326,  3329,
    3330,  3333,  3334,  3342,  3341,  3366,  3365,  3377,  3376,  3395,
    3394,  3414,  3412,  3427,  3428,  3430,  3431,  3432,  3433,  3434,
    3437,  3445,  3446,  3450,  3455,  3454,  3462,  3471,  3461,  3483,
    3490,  3494,  3501,  3508,  3514,  3520,  3526,  3533,  3546,  3567,
    3572,  3576,  3583,  3584,  3587,  3588,  3592,  3593,  3594,  3598,
    3599,  3600,  3603,  3604,  3605,  3606,  3614,  3613,  3624,  3632,
    3631,  3641,  3651,  3660,  3661,  3668,  3668,  3674,  3675,  3679,
    3680,  3681,  3685,  3686,  3703,  3704,  3709,  3708,  3719,  3718,
    3729,  3728,  3738,  3739,  3740,  3745,  3744,  3756,  3757,  3760,
    3761,  3764,  3765,  3766,  3770,  3769,  3782,  3781,  3798,  3799,
    3802,  3803,  3806,  3807,  3808,  3809,  3810,  3814,  3813,  3825,
    3826,  3827,  3832,  3831,  3837,  3844,  3849,  3857,  3858,  3861,
    3873,  3882,  3883,  3886,  3899,  3900,  3905,  3904,  3914,  3915,
    3918,  3931,  3931,  3941,  3942,  3951,  3952,  3961,  3970,  3972,
    3975,  3995,  3999,  3998,  4018,  4026,  4018,  4032,  4033,  4034,
    4035,  4036,  4039,  4041,  4048,  4050,  4061,  4062,  4065,  4066,
    4072,  4073,  4074,  4075,  4081,  4087,  4088,  4092,  4095,  4097,
    4103,  4113,  4114,  4115,  4128,  4146,  4149,  4152,  4153,  4156,
    4157,  4158,  4159,  4160,  4164,  4165,  4169,  4169,  4186,  4188,
    4193,  4194,  4194,  4211,  4213,  4218,  4219,  4222,  4223,  4224,
    4225,  4226,  4227,  4228,  4231,  4232,  4233,  4234,  4236,  4238,
    4241,  4251,  4263,  4265,  4267,  4269,  4275,  4278,  4280,  4282,
    4283,  4285,  4288,  4289,  4292,  4293,  4296,  4298,  4300,  4303,
    4304,  4305,  4307,  4309,  4312,  4313,  4314,  4315,  4316,  4317,
    4320,  4321,  4323,  4323,  4324,  4324,  4325,  4325,  4326,  4326,
    4328,  4329,  4330,  4331,  4332,  4333,  4336,  4337,  4341,  4345,
    4346,  4353,  4354,  4355,  4362,  4369,  4381,  4382,  4384,  4385,
    4386,  4387,  4388,  4389,  4394,  4399,  4400,  4401,  4402,  4406,
    4407,  4411,  4419,  4421,  4428,  4430,  4441,  4443,  4454,  4465,
    4476,  4487,  4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,
    4505,  4507,  4509,  4511,  4517,  4519,  4521,  4526,  4528,  4530,
    4532,  4537,  4539,  4541,  4543,  4545,  4550,  4551,  4553,  4555,
    4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4577,
    4579,  4589,  4591,  4593,  4595,  4597,  4600,  4609,  4614,  4619,
    4621,  4623,  4625,  4627,  4629,  4631,  4633,  4638,  4643,  4645,
    4647,  4649,  4651,  4653,  4655,  4661,  4663,  4665,  4667,  4669,
    4671,  4673,  4675,  4677,  4678,  4683,  4685,  4687,  4689,  4691,
    4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,
    4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,
    4745,  4744,  4856,  4860,  4865,  4867,  4869,  4871,  4873,  4875,
    4880,  4882,  4884,  4886,  4888,  4893,  4897,  4899,  4901,  4903,
    4905,  4907,  4911,  4914,  4917,  4919,  4921,  4923,  4925,  4927,
    4929,  4932,  4935,  4937,  4939,  4941,  4943,  4945,  4948,  4950,
    4952,  4954,  4959,  4960,  4961,  4965,  4966,  4970,  4970,  4976,
    4980,  4987,  5001,  5003,  5005,  5007,  5009,  5011,  5013,  5016,
    5018,  5015,  5021,  5023,  5030,  5032,  5034,  5036,  5038,  5040,
    5042,  5044,  5046,  5049,  5048,  5062,  5063,  5066,  5067,  5072,
    5075,  5087,  5086,  5102,  5103,  5104,  5105,  5106,  5107,  5108,
    5109,  5110,  5111,  5112,  5116,  5116,  5121,  5122,  5125,  5126,
    5129,  5129,  5134,  5135,  5138,  5139,  5142,  5143,  5146,  5146,
    5151,  5157,  5166,  5167,  5167,  5176,  5181,  5182,  5202,  5204,
    5208,  5206,  5221,  5219,  5235,  5233,  5241,  5250,  5248,  5264,
    5263,  5270,  5281,  5279,  5296,  5295,  5307,  5317,  5318,  5319,
    5324,  5324,  5343,  5341,  5357,  5379,  5427,  5426,  5449,  5467,
    5449,  5474,  5478,  5497,  5498,  5501,  5502,  5508,  5515,  5523,
    5523,  5529,  5530,  5534,  5538,  5542,  5548,  5556,  5565,  5566,
    5567,  5568,  5569,  5570,  5571,  5572,  5573,  5574,  5575,  5576,
    5577,  5580,  5581,  5582,  5583,  5584,  5585,  5586,  5587,  5588,
    5592,  5593,  5594,  5595,  5598,  5600,  5601,  5604,  5605,  5608,
    5610,  5614,  5616,  5615,  5629,  5632,  5631,  5646,  5652,  5665,
    5667,  5670,  5672,  5676,  5677,  5690,  5707,  5709,  5713,  5712,
    5726,  5728,  5732,  5733,  5734,  5739,  5745,  5749,  5750,  5754,
    5758,  5765,  5772,  5781,  5782,  5783,  5784,  5789,  5793,  5801,
    5802,  5803,  5804,  5805,  5806,  5810,  5811,  5812,  5813,  5814,
    5817,  5820,  5819,  5841,  5842,  5845,  5846,  5849,  5862,  5862,
    5872,  5873,  5877,  5885,  5912,  5911,  5920,  5932,  5943,  5942,
    5959,  5966,  5966,  5977,  5984,  5996,  6008,  6012,  6018,  6027,
    6028,  6031,  6039,  6040,  6044,  6045,  6053,  6062,  6052,  6072,
    6079,  6071,  6088,  6089,  6090,  6091,  6095,  6096,  6099,  6100,
    6103,  6112,  6113,  6114,  6116,  6115,  6125,  6126,  6129,  6130,
    6131,  6131,  6132,  6132,  6136,  6137,  6140,  6142,  6145,  6153,
    6154,  6158,  6159,  6164,  6163,  6176,  6177,  6180,  6185,  6193,
    6194,  6197,  6199,  6199,  6207,  6216,  6206,  6238,  6239,  6242,
    6249,  6250,  6253,  6262,  6263,  6269,  6268,  6282,  6281,  6290,
    6289,  6297,  6296,  6306,  6307,  6310,  6316,  6327,  6328,  6332,
    6333,  6336,  6337,  6338,  6341,  6350,  6352,  6357,  6356,  6370,
    6378,  6387,  6396,  6405,  6415,  6414,  6417,  6427,  6437,  6441,
    6446,  6445,  6450,  6460,  6465,  6471,  6476,  6481,  6483,  6485,
    6487,  6489,  6498,  6500,  6502,  6504,  6513,  6521,  6529,  6531,
    6533,  6557,  6564,  6570,  6578,  6586,  6590,  6594,  6601,  6608,
    6618,  6628,  6638,  6651,  6665,  6678,  6679,  6681,  6683,  6686,
    6687,  6690,  6691,  6694,  6695,  6698,  6699,  6702,  6703,  6705,
    6707,  6710,  6722,  6721,  6736,  6735,  6745,  6746,  6749,  6750,
    6754,  6755,  6756,  6764,  6763,  6784,  6785,  6788,  6788,  6789,
    6790,  6791,  6792,  6793,  6794,  6795,  6796,  6797,  6798,  6801,
    6802,  6806,  6805,  6814,  6815,  6818,  6819,  6820,  6824,  6823,
    6832,  6836,  6841,  6853,  6862,  6863,  6864,  6868,  6878,  6877,
    6890,  6905,  6916,  6921,  6904,  6934,  6940,  6941,  6944,  6945,
    6946,  6950,  6951,  6952,  6954,  6956,  6959,  6960,  6963,  6968,
    6975,  6980,  6986,  6988,  6991,  6992,  6995,  7000,  7006,  7008,
    7015,  7016,  7017,  7020,  7022,  7027,  7028,  7033,  7034,  7040,
    7045,  7047,  7049,  7054,  7056,  7067,  7080,  7095,  7096,  7097,
    7106,  7107,  7108,  7110,  7111,  7112,  7113,  7114,  7128,  7142,
    7143,  7144,  7147,  7148,  7149,  7150,  7158,  7173,  7174,  7177,
    7183,  7194,  7197,  7226,  7230,  7238,  7242,  7303,  7318,  7342,
    7343,  7359,  7369,  7372,  7373,  7374,  7378,  7382,  7383,  7408,
    7420,  7433,  7434,  7443,  7444,  7453,  7454,  7455,  7458,  7467,
    7474,  7496,  7497,  7498,  7499,  7500,  7501,  7502,  7503,  7504,
    7505,  7506,  7507,  7508,  7509,  7510,  7511,  7512,  7513,  7514,
    7515,  7516,  7517,  7518,  7519,  7520,  7521,  7522,  7523,  7524,
    7525,  7526,  7527,  7528,  7529,  7530,  7531,  7541,  7542,  7543,
    7544,  7545,  7546,  7547,  7548,  7549,  7550,  7551,  7552,  7553,
    7554,  7555,  7556,  7557,  7558,  7559,  7560,  7561,  7562,  7563,
    7564,  7565,  7566,  7567,  7568,  7569,  7570,  7571,  7572,  7573,
    7574,  7575,  7576,  7577,  7578,  7579,  7580,  7581,  7582,  7583,
    7584,  7585,  7586,  7587,  7588,  7589,  7590,  7591,  7592,  7593,
    7594,  7595,  7596,  7597,  7598,  7599,  7600,  7601,  7602,  7603,
    7604,  7605,  7606,  7607,  7608,  7609,  7610,  7611,  7612,  7613,
    7614,  7615,  7616,  7617,  7618,  7619,  7620,  7621,  7622,  7623,
    7624,  7625,  7626,  7627,  7628,  7629,  7630,  7631,  7632,  7633,
    7634,  7635,  7636,  7637,  7638,  7639,  7640,  7641,  7642,  7643,
    7644,  7645,  7646,  7647,  7648,  7649,  7650,  7651,  7652,  7653,
    7654,  7655,  7656,  7657,  7658,  7659,  7660,  7661,  7662,  7663,
    7664,  7665,  7666,  7667,  7668,  7669,  7670,  7671,  7672,  7673,
    7674,  7675,  7676,  7677,  7678,  7679,  7680,  7681,  7682,  7683,
    7684,  7685,  7686,  7687,  7688,  7689,  7690,  7691,  7692,  7693,
    7694,  7695,  7696,  7697,  7698,  7699,  7700,  7701,  7702,  7703,
    7704,  7705,  7706,  7707,  7708,  7709,  7710,  7711,  7712,  7713,
    7714,  7715,  7716,  7717,  7718,  7719,  7720,  7721,  7722,  7723,
    7724,  7725,  7726,  7727,  7728,  7729,  7730,  7731,  7732,  7733,
    7734,  7735,  7736,  7737,  7738,  7739,  7740,  7741,  7742,  7743,
    7744,  7745,  7746,  7747,  7748,  7749,  7750,  7751,  7752,  7759,
    7758,  7772,  7773,  7776,  7777,  7780,  7780,  7847,  7848,  7849,
    7850,  7854,  7855,  7859,  7860,  7861,  7862,  7866,  7867,  7868,
    7869,  7873,  7874,  7877,  7953,  7966,  7970,  7975,  7982,  7997,
    8010,  8031,  8038,  8076,  8119,  8133,  8134,  8135,  8136,  8140,
    8141,  8148,  8157,  8158,  8159,  8160,  8161,  8169,  8168,  8184,
    8185,  8188,  8189,  8192,  8200,  8201,  8202,  8203,  8208,  8207,
    8228,  8240,  8253,  8252,  8271,  8272,  8276,  8277,  8281,  8282,
    8283,  8284,  8286,  8285,  8296,  8297,  8298,  8299,  8300,  8306,
    8311,  8318,  8331,  8343,  8350,  8355,  8363,  8376,  8390,  8392,
    8395,  8396,  8403,  8405,  8409,  8410,  8413,  8413,  8414,  8414,
    8415,  8415,  8416,  8416,  8417,  8418,  8419,  8420,  8421,  8422,
    8423,  8424,  8425,  8426,  8427,  8428,  8429,  8430,  8431,  8432,
    8433,  8434,  8435,  8436,  8437,  8438,  8439,  8444,  8445,  8449,
    8450,  8454,  8464,  8474,  8487,  8500,  8513,  8526,  8538,  8539,
    8548,  8549,  8558,  8583,  8585,  8592,  8596,  8599,  8600,  8603,
    8624,  8625,  8629,  8633,  8637,  8644,  8645,  8648,  8649,  8653,
    8654,  8660,  8666,  8672,  8682,  8681,  8691,  8692,  8696,  8697,
    8698,  8702,  8703,  8704,  8708,  8709,  8713,  8723,  8730,  8740,
    8749,  8763,  8764,  8769,  8768,  8801,  8802,  8803,  8807,  8807,
    8831,  8832,  8836,  8837,  8838,  8842,  8849,  8856,  8863,  8870,
    8877,  8883,  8898,  8907,  8917,  8927,  8937,  8939,  8949,  8951,
    8953,  8958,  8963,  8965,  8967,  8973,  8974,  8979,  8981,  8986,
    8988,  8994,  8995,  8997,  9003,  9002,  9017,  9018,  9022,  9027,
    9035,  9044,  9057,  9058,  9060,  9062,  9075,  9073,  9141,  9145,
    9149,  9153,  9157,  9161,  9167,  9174,  9181,  9190,  9191,  9195,
    9196,  9197,  9201,  9202,  9206,  9207,  9207,  9212,  9213
};
#endif

#if YYDEBUG || YYERROR_VERBOSE
/* YYTNME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "END_OF_INPUT", "ABORT_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "ATAN",
  "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM",
  "BEGIN_SYM", "BENCHMARK_SYM", "BERKELEY_DB_SYM", "BIGINT", "BINARY",
  "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM", "BIT_XOR",
  "BLOB_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BY",
  "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CAST_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPRESSED_SYM", "CONCAT", "CONCAT_WS", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT", "CONTAINS_SYM",
  "CONTINUE_SYM", "CONVERT_SYM", "CONVERT_TZ_SYM", "COUNT_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_USER", "CURSOR_SYM", "CURTIME",
  "DATABASE", "DATABASES", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DECODE_SYM", "DEFAULT",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_DECRYPT_SYM", "DES_ENCRYPT_SYM", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSEIF_SYM",
  "ELT_FUNC", "ENABLE_SYM", "ENCLOSED", "ENCODE_SYM", "ENCRYPT", "END",
  "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM", "ERRORS",
  "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPORT_SET", "EXTENDED_SYM", "EXTRACT_SYM",
  "FALSE_SYM", "FAST_SYM", "FETCH_SYM", "FIELD_FUNC", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM",
  "FORCE_SYM", "FOREIGN", "FORMAT_SYM", "FOR_SYM", "FOUND_SYM",
  "FRAC_SECOND_SYM", "FROM", "FROM_UNIXTIME", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "FUNC_ARG0", "FUNC_ARG1", "FUNC_ARG2", "FUNC_ARG3", "GE",
  "GEOMCOLLFROMTEXT", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GEOMFROMTEXT",
  "GEOMFROMWKB", "GET_FORMAT", "GLOBAL_SYM", "GOTO_SYM", "GRANT", "GRANTS",
  "GREATEST_SYM", "GROUP", "GROUP_CONCAT_SYM", "GROUP_UNIQUE_USERS",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INNOBASE_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT",
  "INSERT_METHOD", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM",
  "IN_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "KEYS", "KEY_SYM", "KILL_SYM", "LABEL_SYM", "LANGUAGE_SYM",
  "LAST_INSERT_ID", "LAST_SYM", "LE", "LEADING", "LEAST_SYM", "LEAVES",
  "LEAVE_SYM", "LEFT", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEFROMTEXT", "LINES", "LINESTRING", "LOAD", "LOCAL_SYM", "LOCATE",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGS_SYM", "LOG_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MAKE_SET_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_POS_WAIT",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MATCH",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SYM", "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MERGE_SYM",
  "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM",
  "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS", "MIN_SYM",
  "MLINEFROMTEXT", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MPOINTFROMTEXT", "MPOLYFROMTEXT", "MULTILINESTRING",
  "MULTIPOINT", "MULTIPOLYGON", "MUTEX_SYM", "NAMES_SYM", "NAME_SYM",
  "NATIONAL_SYM", "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM",
  "NE", "NEW_SYM", "NEXT_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM",
  "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM", "OLD_PASSWORD", "ON",
  "ONE_SHOT_SYM", "ONE_SYM", "OPEN_SYM", "OPTIMIZE", "OPTION",
  "OPTIONALLY", "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER",
  "OUTFILE", "OUT_SYM", "PACK_KEYS_SYM", "PARTIAL", "PASSWORD",
  "PARAM_MARKER", "PHASE_SYM", "POINTFROMTEXT", "POINT_SYM",
  "POLYFROMTEXT", "POLYGON", "POSITION_SYM", "PRECISION", "PREPARE_SYM",
  "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE", "PROCESS",
  "PROCESSLIST_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK",
  "RAID_0_SYM", "RAID_CHUNKS", "RAID_CHUNKSIZE", "RAID_STRIPED_SYM",
  "RAID_TYPE", "RAND", "READS_SYM", "READ_SYM", "REAL", "RECOVER_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "RENAME",
  "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE", "REPLICATION",
  "REQUIRE_SYM", "RESET_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNS_SYM", "RETURN_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUND", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_COUNT_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM",
  "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SET", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE",
  "SMALLINT", "SNAPSHOT_SYM", "SOUNDS_SYM", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STARTING", "START_SYM", "STATUS_SYM", "STD_SYM",
  "STDDEV_SAMP_SYM", "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN",
  "STRING_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBSTRING",
  "SUBSTRING_INDEX", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SYSDATE",
  "TABLES", "TABLESPACE", "TABLE_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB", "TINYINT", "TINYTEXT",
  "TO_SYM", "TRAILING", "TRANSACTION_SYM", "TRIGGER_SYM", "TRIGGERS_SYM",
  "TRIM", "TRUE_SYM", "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UDF_SONAME_SYM", "ULONGLONG_NUM", "UNCOMMITTED_SYM",
  "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDO_SYM", "UNICODE_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNIQUE_USERS", "UNIX_TIMESTAMP",
  "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM",
  "USAGE", "USER", "USE_FRM", "USE_SYM", "USING", "UTC_DATE_SYM",
  "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VAR_SAMP_SYM", "VALUES",
  "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES", "VARIANCE_SYM",
  "VARYING", "VIEW_SYM", "WARNINGS", "WEEK_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WORK_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM",
  "XOR", "YEARWEEK", "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL",
  "TABLE_REF_PRIORITY", "ELSE", "THEN_SYM", "CASE_SYM", "BETWEEN_SYM",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "NEG",
  "'('", "')'", "','", "'!'", "'{'", "'}'", "'@'", "'.'", "';'", "':'",
  "$accept", "query", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "@1",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "@2",
  "change", "@3", "master_defs", "master_def", "master_file_def", "create",
  "@4", "@5", "@6", "@7", "@8", "@9", "@10", "@11", "@12",
  "clear_privileges", "sp_name", "create_function_tail", "@13", "@14",
  "@15", "@16", "@17", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "sp_c_chistic", "sp_suid", "call", "@18", "sp_cparam_list", "sp_cparams",
  "sp_fdparam_list", "sp_fdparams", "sp_init_param", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "@19", "@20",
  "sp_cursor_stmt", "@21", "sp_handler_type", "sp_hcond_list", "sp_cond",
  "opt_value", "sp_hcond", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "@22", "@23", "@24", "@25", "@26", "@27", "@28",
  "sp_opt_fetch_noise", "sp_fetch_list", "sp_if", "@29", "@30", "@31",
  "sp_elseifs", "sp_case", "@32", "@33", "@34", "sp_whens",
  "sp_labeled_control", "@35", "sp_opt_label", "sp_unlabeled_control",
  "@36", "@37", "@38", "@39", "trg_action_time", "trg_event", "create2",
  "create2a", "@40", "create3", "@41", "@42", "create_select", "@43",
  "@44", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "default_charset",
  "default_collation", "storage_engines", "row_types", "raid_types",
  "merge_insert_types", "opt_select_from", "udf_func_type", "udf_type",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@45", "type", "@46", "@47", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "field_options", "field_opt_list",
  "field_option", "opt_len", "opt_precision", "opt_attribute",
  "opt_attribute_list", "attribute", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "collation_name_or_default", "opt_default", "opt_binary", "opt_bin_mod",
  "opt_bin_charset", "opt_primary", "references", "@48", "opt_ref_list",
  "ref_list", "opt_on_delete", "opt_on_delete_list", "opt_on_delete_item",
  "delete_option", "key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_or_fulltext", "key_alg",
  "opt_btree_or_rtree", "key_list", "key_part", "opt_ident",
  "opt_component", "string_list", "alter", "@49", "@50", "@51", "@52",
  "@53", "ident_or_empty", "alter_list", "add_column", "alter_list_item",
  "@54", "@55", "@56", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "@57", "@58", "start",
  "start_transaction_opts", "slave_thread_opts", "@59",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "restore", "@60", "backup", "@61", "checksum", "@62",
  "opt_checksum_type", "repair", "@63", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@64", "check", "@65",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "@66", "opt_no_write_to_binlog", "rename", "@67", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "keycache_list",
  "assign_to_keycache", "key_cache_name", "preload", "@68", "preload_list",
  "preload_keys", "cache_keys_spec", "@69", "cache_key_list_or_empty",
  "opt_ignore_leaves", "select", "select_init", "select_paren",
  "select_init2", "@70", "select_part2", "@71", "@72", "select_into",
  "select_from", "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_item2", "select_alias", "optional_braces",
  "expr", "@73", "bool_or_expr", "bool_term", "@74", "bool_and_expr",
  "bool_factor", "bool_test", "bool_pri", "predicate", "bit_expr",
  "bit_term", "bit_factor", "value_expr", "term", "factor", "or", "and",
  "not", "not2", "comp_op", "all_or_any", "interval_expr", "simple_expr",
  "@75", "geometry_function", "fulltext_options", "udf_expr_list",
  "udf_expr_list2", "@76", "udf_expr_list3", "udf_expr", "sum_expr", "@77",
  "@78", "@79", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@80", "cast_type", "expr_list",
  "@81", "expr_list2", "ident_list_arg", "ident_list", "@82",
  "ident_list2", "opt_expr", "opt_else", "when_list", "@83", "when_list2",
  "table_ref", "@84", "join_table_list", "derived_table_list",
  "join_table", "@85", "@86", "@87", "@88", "@89", "@90", "@91",
  "normal_join", "table_factor", "@92", "@93", "select_derived", "@94",
  "select_derived2", "@95", "@96", "get_select_lex", "select_derived_init",
  "opt_outer", "opt_key_definition", "key_usage_list", "@97",
  "key_list_or_empty", "key_usage_list2", "using_list", "interval",
  "interval_time_st", "date_time_type", "table_alias", "opt_table_alias",
  "opt_all", "where_clause", "@98", "having_clause", "@99", "opt_escape",
  "group_clause", "group_list", "olap_opt", "opt_order_clause",
  "order_clause", "@100", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "ulonglong_num", "procedure_clause", "@101", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@102",
  "select_var_list", "select_var_ident", "into", "@103", "do", "@104",
  "drop", "@105", "table_list", "table_name", "if_exists", "opt_temporary",
  "insert", "@106", "@107", "replace", "@108", "@109",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "insert_field_spec", "@110", "fields", "insert_values", "@111", "@112",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "no_braces", "@113", "opt_values", "values", "expr_or_default",
  "opt_insert_update", "@114", "update", "@115", "@116", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "@117", "single_multi", "@118", "@119",
  "@120", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "opt_table_sym",
  "show", "@121", "show_param", "@122", "@123", "show_engine_param",
  "master_or_binary", "opt_storage", "opt_db", "opt_full", "from_or_in",
  "binlog_in", "binlog_from", "wild_and_where", "describe", "@124", "@125",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "@126", "flush_options", "flush_option", "@127",
  "opt_table_list", "reset", "@128", "reset_options", "reset_option",
  "purge", "@129", "purge_options", "purge_option", "kill", "kill_option",
  "use", "load", "@130", "load_data", "@131", "@132", "@133", "opt_local",
  "load_data_lock", "opt_duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_ignore_lines", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "text_literal", "text_string",
  "param_marker", "signed_literal", "literal", "NUM_literal",
  "insert_ident", "table_wild", "order_ident", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "field_ident", "table_ident",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "ident", "label_ident", "ident_or_text", "user",
  "keyword", "keyword_sp", "set", "@134", "opt_option",
  "option_value_list", "option_type_value", "@135", "option_type",
  "option_type2", "opt_var_type", "opt_var_ident_type", "ext_option_value",
  "sys_option_value", "option_value", "internal_variable_name",
  "isolation_types", "text_or_password", "set_expr_or_default", "lock",
  "@136", "table_or_tables", "table_lock_list", "table_lock",
  "lock_option", "unlock", "@137", "handler", "@138",
  "handler_read_or_scan", "handler_scan_function", "handler_rkey_function",
  "@139", "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "@140", "@141", "@142",
  "@143", "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "require_clause", "grant_options",
  "grant_option_list", "grant_option", "begin", "@144", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "@145",
  "union_opt", "union_order_or_limit", "@146", "order_or_limit",
  "union_option", "singlerow_subselect", "singlerow_subselect_init",
  "exists_subselect", "exists_subselect_init", "in_subselect",
  "in_subselect_init", "subselect_start", "subselect_end", "definer",
  "get_definer", "opt_current_definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_algorithm_opt",
  "view_or_trigger", "view_or_trigger_tail", "view_suid", "view_tail",
  "@147", "view_list_opt", "view_list", "view_select", "view_check_option",
  "trigger_tail", "@148", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@149",
  "opt_migrate", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const unsigned short yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   124,
      38,    45,    43,    42,    47,    37,    94,   126,   804,    40,
      41,    44,    33,   123,   125,    64,    46,    59,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const unsigned short yyr1[] =
{
       0,   569,   570,   570,   571,   571,   572,   572,   572,   572,
     572,   572,   572,   572,   572,   572,   572,   572,   572,   572,
     572,   572,   572,   572,   572,   572,   572,   572,   572,   572,
     572,   572,   572,   572,   572,   572,   572,   572,   572,   572,
     572,   572,   572,   572,   572,   572,   572,   572,   572,   572,
     572,   572,   572,   573,   574,   574,   575,   576,   576,   578,
     577,   579,   579,   580,   580,   581,   583,   582,   585,   584,
     586,   586,   587,   587,   587,   587,   587,   587,   587,   587,
     587,   587,   587,   587,   588,   588,   588,   588,   590,   589,
     591,   589,   592,   589,   593,   589,   594,   595,   596,   597,
     589,   598,   589,   589,   599,   600,   600,   601,   602,   603,
     604,   605,   606,   601,   607,   607,   608,   608,   609,   609,
     609,   609,   609,   609,   609,   610,   610,   610,   611,   611,
     613,   612,   614,   614,   615,   615,   616,   616,   617,   617,
     618,   619,   620,   620,   621,   621,   622,   623,   623,   623,
     623,   624,   624,   625,   625,   626,   626,   628,   627,   627,
     629,   627,   627,   631,   630,   632,   632,   633,   633,   634,
     634,   635,   635,   636,   636,   636,   636,   636,   637,   637,
     638,   638,   640,   639,   641,   639,   639,   642,   639,   643,
     644,   639,   639,   645,   639,   639,   639,   639,   639,   639,
     646,   639,   639,   647,   647,   647,   648,   648,   650,   651,
     652,   649,   653,   653,   653,   655,   656,   657,   654,   658,
     658,   658,   660,   659,   661,   661,   663,   662,   662,   664,
     665,   662,   666,   662,   667,   667,   668,   668,   668,   669,
     669,   669,   669,   670,   671,   670,   672,   673,   672,   674,
     672,   676,   677,   675,   678,   678,   679,   679,   680,   680,
     681,   681,   682,   682,   683,   683,   684,   685,   685,   686,
     686,   687,   687,   688,   688,   688,   689,   689,   689,   689,
     689,   689,   689,   689,   689,   689,   689,   689,   689,   689,
     689,   689,   689,   689,   689,   689,   689,   689,   689,   690,
     691,   692,   693,   693,   693,   693,   693,   693,   694,   694,
     694,   695,   695,   695,   696,   696,   697,   697,   698,   698,
     698,   698,   699,   699,   700,   700,   701,   701,   702,   702,
     702,   702,   702,   703,   703,   704,   705,   705,   706,   708,
     707,   709,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   709,   709,   709,   709,   710,   709,   711,   709,
     709,   709,   712,   712,   712,   712,   712,   712,   712,   712,
     713,   714,   714,   715,   715,   716,   716,   716,   716,   716,
     717,   717,   717,   717,   717,   718,   718,   718,   719,   719,
     719,   720,   721,   721,   722,   722,   723,   723,   723,   724,
     724,   725,   725,   726,   726,   727,   727,   728,   728,   728,
     728,   728,   728,   728,   728,   728,   728,   728,   729,   729,
     730,   730,   731,   731,   732,   732,   733,   733,   734,   734,
     735,   736,   736,   737,   737,   738,   738,   739,   739,   739,
     739,   739,   739,   740,   740,   741,   741,   741,   741,   742,
     742,   744,   743,   745,   745,   746,   746,   747,   747,   748,
     748,   749,   749,   749,   749,   749,   750,   750,   750,   750,
     750,   751,   751,   751,   752,   752,   753,   753,   754,   754,
     755,   755,   755,   756,   756,   756,   756,   757,   757,   757,
     758,   758,   758,   759,   759,   760,   760,   761,   761,   762,
     762,   763,   763,   765,   764,   766,   764,   767,   764,   768,
     764,   769,   764,   770,   770,   771,   771,   771,   771,   771,
     772,   773,   773,   773,   774,   773,   775,   776,   773,   773,
     773,   773,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   777,   777,   778,   778,   779,   779,   779,   780,
     780,   780,   781,   781,   781,   781,   783,   782,   782,   784,
     782,   782,   785,   786,   786,   788,   787,   789,   789,   790,
     790,   790,   791,   791,   792,   792,   794,   793,   796,   795,
     798,   797,   799,   799,   799,   801,   800,   802,   802,   803,
     803,   804,   804,   804,   806,   805,   808,   807,   809,   809,
     810,   810,   811,   811,   811,   811,   811,   813,   812,   814,
     814,   814,   816,   815,   815,   817,   817,   818,   818,   819,
     820,   821,   821,   822,   823,   823,   825,   824,   826,   826,
     827,   829,   828,   830,   830,   831,   831,   832,   833,   833,
     834,   834,   836,   835,   838,   839,   837,   840,   840,   840,
     840,   840,   841,   841,   842,   842,   843,   843,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   845,   845,
     845,   846,   846,   846,   847,   848,   849,   850,   850,   851,
     851,   851,   851,   851,   852,   852,   854,   853,   855,   855,
     856,   857,   856,   858,   858,   859,   859,   860,   860,   860,
     860,   860,   860,   860,   861,   861,   861,   861,   861,   861,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   863,   863,   864,   864,   865,   865,   865,   866,
     866,   866,   866,   866,   867,   867,   867,   867,   867,   867,
     868,   868,   869,   869,   870,   870,   871,   871,   872,   872,
     873,   873,   873,   873,   873,   873,   874,   874,   875,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     877,   876,   876,   876,   876,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   878,   878,   878,   878,   878,   878,   878,   878,
     878,   878,   879,   879,   879,   880,   880,   882,   881,   883,
     883,   884,   885,   885,   885,   885,   885,   885,   885,   886,
     887,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   888,   885,   889,   889,   890,   890,   891,
     891,   893,   892,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   896,   895,   897,   897,   898,   898,
     900,   899,   901,   901,   902,   902,   903,   903,   905,   904,
     906,   906,   907,   908,   907,   909,   910,   910,   911,   911,
     912,   911,   913,   911,   914,   911,   911,   915,   911,   916,
     911,   911,   917,   911,   918,   911,   911,   919,   919,   919,
     921,   920,   922,   920,   920,   920,   924,   923,   926,   927,
     925,   928,   929,   930,   930,   931,   931,   931,   931,   933,
     932,   934,   934,   935,   935,   935,   936,   936,   937,   937,
     937,   937,   937,   937,   937,   937,   937,   937,   937,   937,
     937,   938,   938,   938,   938,   938,   938,   938,   938,   938,
     939,   939,   939,   939,   940,   940,   940,   941,   941,   942,
     942,   943,   944,   943,   945,   946,   945,   947,   947,   948,
     948,   949,   949,   950,   950,   950,   951,   951,   953,   952,
     954,   954,   955,   955,   955,   956,   956,   957,   957,   958,
     959,   959,   959,   960,   960,   960,   960,   961,   961,   962,
     962,   962,   962,   962,   962,   963,   963,   963,   963,   963,
     964,   965,   964,   966,   966,   967,   967,   968,   970,   969,
     971,   971,   972,   972,   974,   973,   973,   973,   976,   975,
     977,   978,   977,   977,   977,   977,   977,   977,   977,   979,
     979,   980,   981,   981,   982,   982,   984,   985,   983,   987,
     988,   986,   989,   989,   989,   989,   990,   990,   991,   991,
     992,   993,   993,   993,   994,   993,   995,   995,   996,   996,
     997,   996,   998,   996,   999,   999,  1000,  1000,  1001,  1002,
    1002,  1003,  1003,  1005,  1004,  1006,  1006,  1007,  1007,  1008,
    1008,  1009,  1010,  1009,  1012,  1013,  1011,  1014,  1014,  1015,
    1016,  1016,  1017,  1018,  1018,  1020,  1019,  1022,  1021,  1023,
    1021,  1024,  1021,  1025,  1025,  1026,  1026,  1027,  1027,  1028,
    1028,  1029,  1029,  1029,  1030,  1031,  1031,  1033,  1032,  1034,
    1034,  1034,  1034,  1034,  1035,  1034,  1034,  1034,  1034,  1034,
    1036,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,
    1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,
    1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,
    1034,  1034,  1034,  1037,  1037,  1038,  1038,  1039,  1039,  1040,
    1040,  1041,  1041,  1042,  1042,  1043,  1043,  1044,  1044,  1045,
    1045,  1045,  1047,  1046,  1048,  1046,  1049,  1049,  1050,  1050,
    1051,  1051,  1051,  1053,  1052,  1054,  1054,  1056,  1055,  1055,
    1055,  1055,  1055,  1055,  1055,  1055,  1055,  1055,  1055,  1057,
    1057,  1059,  1058,  1060,  1060,  1061,  1061,  1061,  1063,  1062,
    1064,  1065,  1065,  1066,  1067,  1067,  1067,  1068,  1070,  1069,
    1069,  1072,  1073,  1074,  1071,  1071,  1075,  1075,  1076,  1076,
    1076,  1077,  1077,  1077,  1078,  1078,  1079,  1079,  1080,  1080,
    1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,
    1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,  1089,
    1089,  1089,  1089,  1090,  1090,  1090,  1091,  1092,  1092,  1092,
    1093,  1093,  1093,  1093,  1093,  1093,  1093,  1093,  1093,  1093,
    1093,  1093,  1094,  1094,  1094,  1094,  1094,  1095,  1095,  1096,
    1096,  1097,  1098,  1098,  1099,  1099,  1100,  1100,  1100,  1101,
    1101,  1101,  1101,  1102,  1102,  1102,  1103,  1104,  1104,  1105,
    1106,  1107,  1107,  1108,  1108,  1109,  1109,  1109,  1110,  1110,
    1110,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1112,  1114,
    1113,  1115,  1115,  1116,  1116,  1118,  1117,  1119,  1119,  1119,
    1119,  1120,  1120,  1121,  1121,  1121,  1121,  1122,  1122,  1122,
    1122,  1123,  1123,  1124,  1124,  1125,  1125,  1125,  1125,  1125,
    1125,  1125,  1126,  1126,  1126,  1127,  1127,  1127,  1127,  1128,
    1128,  1128,  1129,  1129,  1129,  1129,  1129,  1131,  1130,  1132,
    1132,  1133,  1133,  1134,  1135,  1135,  1135,  1135,  1137,  1136,
    1138,  1138,  1139,  1138,  1140,  1140,  1141,  1141,  1142,  1142,
    1142,  1142,  1143,  1142,  1144,  1144,  1144,  1144,  1144,  1145,
    1146,  1146,  1146,  1146,  1147,  1148,  1148,  1148,  1149,  1149,
    1150,  1150,  1151,  1151,  1152,  1152,  1154,  1153,  1155,  1153,
    1156,  1153,  1157,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1158,  1158,  1159,
    1159,  1160,  1160,  1160,  1161,  1161,  1161,  1161,  1162,  1162,
    1163,  1163,  1164,  1164,  1164,  1165,  1165,  1166,  1166,  1167,
    1168,  1168,  1168,  1168,  1168,  1169,  1169,  1170,  1170,  1171,
    1171,  1171,  1171,  1171,  1173,  1172,  1174,  1174,  1175,  1175,
    1175,  1176,  1176,  1176,  1177,  1177,  1178,  1179,  1179,  1180,
    1181,  1182,  1182,  1184,  1183,  1185,  1185,  1185,  1187,  1186,
    1188,  1188,  1189,  1189,  1189,  1190,  1191,  1192,  1193,  1194,
    1195,  1196,  1197,  1198,  1199,  1199,  1200,  1200,  1201,  1201,
    1201,  1202,  1203,  1203,  1203,  1204,  1204,  1205,  1205,  1206,
    1206,  1207,  1207,  1207,  1209,  1208,  1210,  1210,  1211,  1211,
    1212,  1212,  1213,  1213,  1213,  1213,  1215,  1214,  1216,  1216,
    1216,  1216,  1216,  1216,  1217,  1217,  1217,  1218,  1218,  1219,
    1219,  1219,  1220,  1220,  1221,  1222,  1221,  1223,  1223
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const unsigned char yyr2[] =
{
       0,     2,     1,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     4,     1,     2,     0,
       4,     0,     2,     3,     1,     2,     0,     3,     0,     5,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     1,     3,     3,     3,     3,     0,     7,
       0,    11,     0,     6,     0,     6,     0,     0,     0,     0,
      12,     0,     3,     4,     0,     3,     1,     4,     0,     0,
       0,     0,     0,    12,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       0,     6,     0,     1,     3,     1,     0,     1,     3,     1,
       0,     3,     0,     1,     3,     1,     4,     0,     1,     1,
       1,     0,     3,     2,     3,     0,     3,     0,     5,     5,
       0,     7,     5,     0,     2,     1,     1,     1,     3,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     3,
       0,     2,     0,     2,     0,     3,     4,     0,     6,     0,
       0,     8,     1,     0,     2,     2,     2,     2,     2,     2,
       0,     6,     2,     0,     2,     1,     1,     3,     0,     0,
       0,     7,     0,     2,     2,     0,     0,     0,     7,     0,
       2,     2,     0,     5,     0,     1,     0,     5,     4,     0,
       0,     8,     0,     7,     1,     1,     1,     1,     1,     2,
       2,     2,     4,     4,     0,     4,     0,     0,     5,     0,
       7,     0,     0,     6,     0,     1,     0,     1,     1,     2,
       1,     1,     0,     1,     1,     2,     1,     0,     3,     0,
       1,     1,     2,     1,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     5,     1,     1,     3,     4,     4,     3,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     0,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     2,     2,     6,     7,
       8,     2,     2,     0,     1,     2,     0,     1,     2,     0,
       4,     3,     3,     3,     1,     4,     1,     1,     5,     2,
       5,     2,     4,     1,     5,     5,     4,     3,     1,     1,
       2,     1,     1,     2,     1,     1,     1,     2,     3,     2,
       3,     2,     2,     3,     3,     3,     0,     6,     0,     6,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     3,
       1,     5,     0,     1,     2,     1,     1,     1,     1,     0,
       3,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       4,     1,     3,     2,     1,     2,     2,     2,     2,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     0,     1,     0,     2,     1,
       2,     3,     2,     0,     1,     0,     1,     1,     2,     0,
       1,     0,     4,     1,     4,     3,     1,     0,     1,     2,
       1,     3,     3,     2,     2,     2,     1,     1,     2,     2,
       2,     1,     2,     2,     2,     2,     1,     1,     0,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       1,     1,     1,     4,     2,     1,     4,     0,     1,     0,
       2,     1,     3,     0,     6,     0,     5,     0,     5,     0,
       5,     0,    11,     0,     1,     0,     2,     2,     1,     3,
       2,     3,     2,     4,     0,     6,     0,     0,     8,     4,
       4,     3,     3,     2,     2,     6,     5,     3,     5,     1,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     0,     5,     3,     0,
       5,     3,     3,     0,     3,     0,     2,     1,     3,     0,
       1,     1,     0,     2,     1,     3,     0,     6,     0,     6,
       0,     5,     0,     1,     1,     0,     6,     0,     1,     1,
       2,     1,     1,     1,     0,     6,     0,     5,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     0,     6,     0,
       1,     1,     0,     4,     4,     3,     5,     1,     3,     3,
       5,     1,     3,     2,     1,     1,     0,     6,     1,     3,
       3,     0,     2,     0,     4,     0,     2,     1,     2,     4,
       2,     3,     0,     3,     0,     0,     6,     2,     1,     1,
       2,     2,     8,     4,     0,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     2,
       4,     3,     1,     1,     4,     0,     0,     1,     1,     0,
       2,     2,     1,     1,     0,     2,     0,     3,     0,     3,
       3,     0,     3,     0,     3,     2,     1,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     3,     4,     1,
       5,     6,     3,     4,     5,     6,     4,     4,     5,     3,
       4,     1,     3,     1,     3,     1,     3,     3,     1,     3,
       3,     4,     4,     1,     3,     3,     3,     3,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     4,     2,     5,     1,     3,     2,     2,
       2,     2,     3,     5,     6,     2,     1,     4,     7,     4,
       2,     6,     6,     6,     6,     4,     4,     3,     4,     6,
       8,     6,     8,     6,     4,     6,     4,     6,     4,     4,
       4,     4,     6,     8,     2,     2,     4,     2,     7,     7,
       3,     4,     4,     6,     6,     4,     6,     6,     6,     4,
       6,     4,     6,     8,    10,    12,     6,     4,     6,     6,
       1,     6,     4,     8,    10,     4,     1,     3,     4,     6,
       6,     8,     6,     6,     4,     6,     6,     8,     4,     4,
       6,     4,     2,     4,     4,     4,     6,     4,     4,     3,
       8,     6,     4,     6,     3,     6,     8,     4,     8,     6,
       8,     6,     8,     2,     4,     4,     4,     6,     8,     8,
       4,     7,     7,     7,     6,     6,     6,     6,     6,     6,
       0,     5,    10,     3,     4,     3,     2,     2,     2,     4,
       6,     4,     4,     6,     6,     6,     6,     4,     6,     4,
       6,     4,     4,     4,     4,     6,     4,     6,     4,     6,
       4,     4,     6,     4,     6,     4,     6,     4,     4,     6,
       4,     6,     0,     3,     3,     0,     1,     0,     2,     1,
       3,     4,     4,     5,     4,     4,     4,     5,     4,     0,
       0,     7,    10,     4,     5,     4,     5,     4,     4,     4,
       4,     4,     5,     0,     8,     0,     1,     0,     2,     0,
       1,     0,     3,     2,     3,     2,     1,     2,     1,     2,
       1,     1,     1,     2,     0,     2,     1,     3,     1,     3,
       0,     2,     1,     3,     0,     1,     0,     2,     0,     2,
       3,     5,     1,     0,     2,     1,     1,     3,     3,     3,
       0,     6,     0,     6,     0,     8,     4,     0,     8,     0,
      10,     6,     0,     8,     0,    10,     6,     1,     2,     2,
       0,     4,     0,    11,     3,     6,     0,     3,     0,     0,
       5,     0,     1,     0,     1,     0,     2,     2,     2,     0,
       5,     0,     1,     3,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     0,     2,     0,
       1,     0,     0,     3,     0,     0,     3,     2,     0,     0,
       4,     4,     2,     0,     2,     2,     0,     1,     0,     4,
       4,     2,     0,     1,     1,     0,     1,     0,     1,     2,
       1,     3,     3,     1,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     0,     6,     0,     1,     3,     1,     2,     0,     2,
       3,     1,     2,     1,     0,     6,     3,     2,     0,     3,
       6,     0,     6,     4,     4,     4,     4,     5,     3,     1,
       3,     1,     0,     2,     0,     1,     0,     0,     8,     0,
       0,     6,     0,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     3,     4,     0,     3,     3,     1,     2,     2,
       0,     3,     0,     5,     3,     1,     3,     1,     3,     1,
       1,     0,     1,     0,     4,     0,     1,     3,     1,     1,
       1,     0,     0,     6,     0,     0,    11,     3,     1,     3,
       3,     1,     3,     0,     1,     0,     4,     0,     6,     0,
       5,     0,     6,     1,     3,     3,     5,     0,     2,     0,
       2,     1,     1,     1,     3,     0,     1,     0,     3,     2,
       4,     4,     4,     4,     0,     4,     6,    16,     2,     2,
       0,     6,     5,     2,     2,     2,     1,     5,     5,     2,
       2,     3,     2,     2,     2,     3,     2,     2,     2,     1,
       1,     3,     4,     3,     3,     2,     2,     3,     3,     3,
       3,     3,     3,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     1,     1,     0,     2,     0,     2,     0,
       2,     2,     0,     4,     0,     4,     1,     1,     0,     1,
       0,     1,     1,     0,     4,     3,     1,     0,     3,     4,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     1,     1,     1,     2,     0,     3,
       3,     2,     2,     3,     0,     1,     1,     2,     0,     4,
       5,     0,     0,     0,    16,     2,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     3,
       0,     3,     2,     3,     1,     1,     2,     0,     2,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     3,
       5,     1,     1,     1,     1,     1,     3,     4,     5,     1,
       5,     3,     2,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     0,     1,     1,     3,     0,     2,     1,     1,     1,
       1,     0,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     1,     2,     4,     5,     4,     6,     2,     3,     3,
       3,     5,     1,     3,     3,     2,     2,     2,     1,     1,
       4,     4,     1,     1,     1,     1,     1,     0,     4,     1,
       1,     1,     3,     3,     1,     1,     2,     2,     0,     3,
       4,     3,     0,     7,     1,     2,     1,     1,     1,     1,
       1,     1,     0,     5,     1,     1,     1,     1,     1,     3,
       6,     6,     6,     7,     3,     8,     8,     8,     0,     1,
       1,     2,     0,     1,     1,     3,     0,     3,     0,     3,
       0,     3,     0,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     2,     0,     1,     3,
       1,     2,     2,     2,     1,     3,     3,     1,     1,     3,
       1,     3,     4,     5,     1,     0,     3,     3,     1,     1,
       0,     2,     2,     2,     2,     0,     2,     2,     1,     2,
       2,     2,     2,     2,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     0,     4,     0,     1,     1,     0,     2,
       2,     1,     0,     1,     1,     3,     1,     3,     1,     3,
       1,     2,     1,     1,     1,     5,     0,     4,     1,     2,
       1,     2,     3,     3,     3,     0,     1,     2,     3,     1,
       1,     0,     3,     3,     0,     8,     0,     3,     1,     3,
       3,     5,     0,     3,     4,     4,     0,    12,     4,     4,
       3,     4,     3,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     0,     3,     0,     2
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const unsigned short yydefact[] =
{
       0,     2,  1955,   629,     0,  1904,     0,     0,     0,     0,
       0,  1906,   101,    54,  1255,  1346,  1347,  1178,  1194,     0,
     629,   104,     0,    66,  1196,  1384,     0,     0,   629,     0,
    1378,     0,     0,   629,  1199,  1371,     0,   104,  1906,     0,
     664,  1741,  1277,     0,     0,     0,  1275,  1798,  1244,     0,
       0,     0,     0,     0,     4,    15,     0,    32,    20,    24,
      10,    14,     9,     6,    46,    47,    39,     8,    12,    36,
       7,    11,    29,    35,    30,    31,    43,   657,    18,    19,
      25,    37,    50,    16,    48,    45,    17,  1348,    21,    38,
      33,    26,    51,    27,    44,    28,    49,    23,    40,    22,
       5,    13,    41,    42,    34,    52,     0,   533,     0,   565,
       0,     0,  1956,  1946,   631,   630,     0,  1790,  1789,   598,
    1906,     0,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1492,
    1534,  1535,  1536,  1493,  1494,  1537,  1538,  1539,  1541,  1540,
    1542,  1495,  1496,  1543,  1544,  1545,  1497,  1498,  1546,  1547,
    1499,  1548,  1549,  1550,  1500,  1551,  1501,  1552,  1553,  1554,
    1555,  1502,  1556,  1557,  1558,  1559,  1560,  1503,  1561,  1562,
    1563,  1564,  1579,  1565,  1504,  1566,  1567,  1568,  1580,  1505,
    1571,  1570,  1569,  1572,  1573,  1574,  1506,  1575,  1576,  1577,
    1582,  1583,  1584,  1507,  1578,  1585,  1581,  1724,  1587,  1586,
    1588,  1590,  1589,  1508,  1591,  1509,  1592,  1593,  1477,  1594,
    1478,  1596,  1597,  1600,  1601,  1595,  1598,  1599,  1510,  1603,
    1604,  1605,  1606,  1607,  1608,  1609,  1619,  1612,  1614,  1615,
    1617,  1613,  1618,  1622,  1621,  1623,  1624,  1625,  1620,  1611,
    1616,  1626,  1627,  1610,  1628,  1629,  1630,  1631,  1632,  1633,
    1634,  1635,  1637,  1636,  1638,  1639,  1640,  1641,  1642,  1644,
    1643,  1645,  1646,  1647,  1649,  1648,  1650,  1511,  1651,  1652,
    1653,  1654,  1655,  1512,  1656,  1657,  1658,  1659,  1660,  1661,
    1513,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,  1670,
    1671,  1672,  1673,  1674,  1675,  1676,  1677,  1602,  1678,  1514,
    1679,  1680,  1515,  1681,  1516,  1682,  1683,  1517,  1684,  1685,
    1686,  1687,  1688,  1689,  1518,  1690,  1519,  1692,  1691,  1693,
    1695,  1696,  1520,  1694,  1521,  1697,  1698,  1700,  1699,  1701,
    1702,  1522,  1703,  1523,  1704,  1705,  1706,  1707,  1708,  1709,
    1710,  1711,  1712,  1713,  1714,  1717,  1718,  1719,  1720,  1715,
    1716,  1524,  1721,  1722,  1723,  1725,  1726,  1525,  1727,  1728,
    1729,  1730,  1733,  1731,  1732,  1734,  1735,  1736,  1737,  1526,
    1738,   130,  1481,   106,  1482,  1491,     0,   600,   616,  1907,
    1908,   317,   267,   505,     0,   506,   266,   504,   104,  1946,
       0,   263,   264,     0,     0,  1269,  1004,  1192,  1192,     0,
    1192,  1195,     0,   104,  1192,     0,    59,  1353,     0,     0,
       0,     0,  1476,     0,  1202,  1385,  1386,     0,  1388,     0,
       0,  1787,     0,     0,     0,     0,   104,   632,     0,  1253,
       0,   596,     0,  1908,  1919,   658,   662,   674,  1742,  1739,
    1331,   585,   585,   585,   583,   585,  1276,     0,     0,  1253,
    1387,  1987,     0,     0,     0,  1983,     0,  1988,     0,   664,
       0,     0,     1,     3,     0,  1576,  1344,  1342,  1473,     0,
     525,   534,   529,   527,     0,     0,  1961,  1943,  1944,   614,
       0,  1905,     0,   641,   651,     0,     0,    68,     0,     0,
       0,  1911,     0,     0,    96,     0,     0,  1961,  1946,  1948,
    1950,   102,   267,   265,     0,     0,  1273,  1272,  1271,     0,
    1269,  1179,     0,     0,     0,     0,     0,     0,  1188,     0,
       0,  1192,    61,     0,  1832,  1847,  1848,  1844,  1849,  1850,
    1854,     0,  1846,  1838,     0,  1853,  1842,  1851,     0,  1836,
       0,  1852,  1857,  1840,  1845,  1824,     0,  1830,  1834,  1475,
    1104,  1801,  1802,     0,  1487,  1479,  1486,  1485,    67,  1204,
    1205,  1203,   564,  1528,  1492,     0,  1536,     0,     0,  1446,
       0,     0,     0,     0,  1497,     0,     0,  1549,     0,     0,
    1502,     0,     0,     0,   704,   704,   704,     0,     0,     0,
    1559,  1560,  1455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1443,     0,  1456,     0,     0,     0,     0,
       0,     0,     0,  1587,     0,     0,  1588,     0,     0,     0,
    1445,  1593,     0,     0,     0,     0,     0,     0,     0,  1606,
       0,     0,  1453,     0,     0,  1010,     0,  1632,  1634,     0,
       0,     0,  1638,     0,     0,  1639,  1640,  1641,  1430,   769,
       0,   704,  1442,  1452,  1653,  1658,  1436,     0,  1660,     0,
    1661,     0,  1666,     0,     0,     0,     0,     0,     0,  1688,
    1690,     0,     0,  1706,     0,     0,     0,   704,  1480,  1717,
    1718,  1719,  1720,     0,  1444,  1524,  1454,     0,     0,     0,
    1729,   704,   704,   704,     0,     0,     0,  1735,     0,  1738,
    1014,     0,     0,     0,     0,   768,     0,     0,     0,  1383,
     706,   711,   716,   723,   729,   741,   743,   745,   748,   753,
     759,     0,   856,   761,   850,   786,  1440,   782,   781,  1441,
     779,  1463,  1481,  1429,  1462,   796,   664,  1398,     0,     0,
       0,   627,     0,  1326,  1325,     0,  1379,  1920,     0,     0,
     605,  1207,  1254,     0,  1206,  1376,     0,  1375,  1372,  1374,
       0,  1832,  1819,     0,  1914,  1911,  1921,   687,   680,   679,
     682,   683,   686,   684,   685,   681,   678,   695,   675,   677,
    1745,     0,     0,   441,     0,  1339,     0,     0,     0,  1339,
       0,  1135,  1332,     0,  1754,  1310,   502,   501,     0,   500,
    1755,  1309,  1325,     0,     0,     0,  1296,     0,  1756,     0,
    1328,     0,  1135,  1339,     0,  1278,     0,     0,     0,     0,
     579,   589,   581,   576,     0,   582,   578,  1274,  1191,  1799,
     564,  1435,  1434,  1984,  1433,  1992,  1994,  1980,  1982,  1989,
     660,     0,  1925,    53,     0,  1350,  1953,  1954,  1952,   455,
     114,   114,   523,     0,     0,     0,     0,     0,  1189,     0,
       0,   643,   653,   132,   105,     0,   602,   618,  1910,     0,
       0,  1912,  1916,   767,   766,     0,    92,     0,   704,  1488,
    1884,   103,  1880,  1951,   695,  1957,     0,  1959,  1960,  1961,
    1949,     0,    94,   507,     0,  1256,  1259,  1263,  1267,  1270,
    1006,  1005,  1193,  1183,  1184,     0,  1185,  1878,  1186,   566,
       0,     0,    60,  1367,  1361,  1363,  1366,  1362,     0,  1368,
    1365,  1364,  1790,  1354,  1356,  1357,  1833,  1831,  1865,  1864,
       0,  1866,  1862,  1855,  1885,  1859,  1885,  1861,  1860,  1885,
    1856,  1863,  1885,  1828,     0,  1105,  1106,     0,  1800,     0,
    1474,     0,     0,     0,     0,  1109,     0,   800,  1109,  1109,
    1109,     0,     0,  1004,  1004,     0,  1004,     0,     0,     0,
       0,  1109,     0,   824,   827,     0,   825,     0,     0,     0,
       0,     0,  1449,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   795,   664,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,     0,     0,   985,
       0,     0,     0,     0,   778,     0,     0,     0,     0,  1004,
       0,     0,     0,     0,  1010,     0,  1008,     0,  1109,     0,
       0,  1109,     0,     0,     0,     0,     0,  1004,  1004,  1004,
     715,     0,   872,     0,     0,     0,     0,     0,  1004,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1109,
    1109,     0,     0,     0,  1109,     0,   893,     0,  1451,     0,
       0,     0,  1450,     0,     0,  1448,  1447,  1431,     0,     0,
       0,   916,   918,   917,  1109,     0,  1109,     0,     0,     0,
    1015,     0,   789,   788,   790,  1941,     0,     0,  1757,   784,
       0,     0,   708,   713,   770,     0,   771,   772,     0,   773,
     774,   775,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   791,  1079,  1080,  1081,  1082,  1091,  1094,  1083,  1084,
    1085,  1093,  1086,  1087,  1088,  1095,  1096,  1097,  1089,  1098,
    1092,  1090,  1099,     0,  1078,     0,     0,  1432,   910,     0,
    1936,     0,  1399,     0,  1400,  1389,  1396,   646,     0,  1104,
    1788,  1791,     0,     0,    56,    57,     0,   634,     0,   633,
     637,     0,     0,     0,  1210,  1200,  1209,  1377,     0,     0,
    1831,  1828,  1915,     0,  1917,  1932,   663,  1922,   693,   665,
     692,     0,   676,  1740,  1743,  1751,  1308,  1335,   440,     0,
       0,  1307,  1293,     0,   267,     0,     0,     0,     0,  1279,
    1284,   301,     0,  1300,  1136,     0,  1339,     0,  1302,  1315,
    1303,     0,  1329,     0,  1339,  1289,  1316,  1329,  1294,  1299,
    1306,  1333,  1334,     0,  1288,  1295,     0,  1304,  1329,  1329,
    1339,  1339,   592,   591,   590,   586,   587,   592,     0,  1050,
       0,     0,  1981,  1995,  1979,  1990,  1991,  1978,   661,  1926,
     659,  1927,     0,  1345,  1343,  1351,  1352,   456,   526,   455,
     258,   261,   260,     0,   530,   528,   455,   704,     0,     0,
       0,   618,     0,     0,   645,   640,   644,   642,   497,   496,
     499,     0,   652,     0,   133,   135,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    69,    70,    83,   604,   603,   601,   626,   625,   623,
     624,   622,   617,   619,   620,  1909,  1913,   268,   455,    97,
    1490,     0,     0,     0,     0,     0,  1958,    88,     0,     0,
       0,     0,  1261,  1257,  1267,     0,     0,     0,  1104,     0,
    1181,     0,   568,   567,  1187,   566,     0,    62,    64,  1360,
       0,     0,  1369,  1858,     0,  1839,  1843,  1837,  1841,     0,
       0,  1829,     0,  1835,  1108,  1583,  1648,     0,  1111,  1804,
    1197,     0,     0,     0,  1110,  1109,     0,   991,  1153,  1154,
    1150,  1151,  1149,  1152,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   969,     0,
     991,   705,     0,   830,     0,     0,     0,     0,     0,     0,
    1462,     0,     0,     0,     0,     0,  1938,     0,     0,     0,
       0,     0,     0,   807,     0,     0,     0,     0,     0,     0,
       0,  1102,  1100,  1103,  1101,     0,     0,   986,   983,     0,
       0,     0,     0,   857,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,  1012,  1109,     0,     0,
       0,  1109,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     879,     0,     0,     0,     0,     0,   884,     0,     0,     0,
       0,     0,     0,     0,  1109,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   913,     0,   915,
       0,     0,  1465,  1464,     0,     0,     0,     0,  1018,   792,
    1004,     0,     0,     0,     0,     0,     0,     0,   710,   707,
     712,   726,   719,   724,   717,   721,     0,   776,  1533,   727,
       0,  1004,   732,   664,  1118,   739,     0,     0,   742,     0,
       0,     0,     0,   744,   746,   747,   750,   856,   749,   856,
     757,   758,   754,   755,   756,   760,     0,   780,   787,   957,
    1466,  1942,  1935,  1395,  1397,     0,     0,  1390,     0,     0,
     618,    58,     0,     0,  1380,     0,     0,     0,     0,   607,
    1208,     0,  1373,     0,     0,     0,     0,     0,  1918,  1934,
    1933,  1923,   695,  1126,   696,   698,   697,  1462,  1745,  1748,
    1749,  1752,  1750,     0,  1747,  1746,  1761,     0,  1337,  1340,
    1341,     0,     0,  1318,  1317,  1313,  1314,     0,  1145,  1146,
    1144,  1139,  1140,  1143,  1322,  1320,  1311,     0,  1339,     0,
    1321,  1319,  1339,  1329,     0,  1339,  1339,  1301,  1305,     0,
     580,   589,   577,   584,  1062,  1061,     0,  1026,     0,  1025,
    1023,  1022,     0,  1061,  1985,  1993,  1997,     0,  1135,  1931,
    1929,   259,  1231,  1231,     0,     0,     0,     0,     0,     0,
       0,   115,   124,   562,   562,  1231,  1231,   562,  1231,  1231,
    1231,     0,     0,  1231,     0,     0,   562,     0,  1231,   560,
       0,     0,  1231,  1231,  1231,   562,  1231,  1231,  1231,  1231,
    1231,   572,  1231,  1231,  1231,   559,   271,   293,   294,   524,
       0,   538,   561,  1947,     0,  1962,  1963,   531,   615,   599,
    1190,     0,   131,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     621,    93,   147,  1489,     0,  1881,     0,  1964,   269,     0,
     108,    95,   510,   512,   511,   509,   508,     0,     0,  1111,
       0,  1264,  1050,  1268,  1267,  1265,  1007,  1182,  1879,  1180,
      65,     0,     0,  1355,  1370,  1358,  1889,     0,  1888,  1874,
    1877,  1473,     0,     0,     0,  1814,  1808,  1815,  1817,  1811,
    1816,  1818,  1809,  1810,  1805,  1812,  1112,  1137,     0,     0,
     799,   814,     0,     0,   962,     0,     0,   964,   965,   966,
       0,   818,     0,   816,   819,   820,   821,  1004,     0,     0,
       0,     0,  1004,   968,     0,   826,     0,     0,   831,   832,
       0,   805,     0,   839,     0,   841,     0,  1004,     0,   835,
       0,  1937,     0,     0,  1004,     0,   847,     0,   808,     0,
       0,   948,     0,   931,   927,     0,   929,     0,     0,  1004,
    1004,     0,   852,     0,     0,   858,  1004,     0,   950,     0,
     932,     0,   864,     0,  1004,     0,  1009,     0,     0,     0,
     975,   868,   869,     0,   973,   934,     0,     0,   871,   936,
       0,   938,     0,   933,   940,   941,   873,   875,   874,   943,
       0,     0,   945,     0,   947,     0,   877,   878,     0,     0,
       0,   882,     0,  1004,   887,   977,   979,     0,     0,     0,
       0,     0,   981,   894,   896,     0,     0,     0,   895,     0,
       0,     0,     0,     0,     0,     0,   900,     0,     0,   914,
     980,   806,   978,   919,     0,   922,     0,   921,  1016,     0,
       0,   797,  1758,  1759,  1760,   519,   783,  1467,   763,   762,
       0,   765,   764,     0,   720,   725,   718,   722,   728,     0,
    1940,     0,     0,   737,   736,     0,  1004,   733,  1118,   740,
       0,   752,   751,   855,     0,   956,   695,   957,     0,     0,
     647,   648,   651,     0,  1794,  1795,  1793,  1792,   628,  1382,
    1381,     0,   635,   638,   639,   612,   611,   613,   606,   608,
     609,   251,  1214,     0,     0,     0,  1220,  1201,  1211,   597,
       0,     0,     0,     0,     0,   691,  1050,  1168,   688,   669,
    1137,  1127,   668,   699,     0,  1744,     0,  1715,  1772,     0,
       0,     0,     0,     0,  1762,  1336,     0,  1290,     0,  1312,
    1324,  1323,  1285,     0,     0,     0,  1283,  1330,  1282,  1111,
    1329,  1280,  1281,   594,   593,   588,  1061,  1050,     0,     0,
    1047,  1063,     0,  1063,  1050,  1050,     0,  1050,  1024,  1104,
    1058,     0,     0,  1996,  1128,  1930,  1229,  1230,  1232,     0,
       0,   118,   121,   119,     0,   120,     0,     0,   563,   517,
     498,   498,   542,     0,   333,   517,   491,   540,     0,     0,
       0,     0,     0,     0,     0,     0,  1231,     0,   553,   536,
       0,     0,     0,     0,   554,     0,   537,  1231,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   575,   574,   573,
       0,     0,     0,     0,   272,   455,   336,     0,   569,   333,
     339,  1469,  1945,  1966,  1075,     0,  1074,   134,    76,    72,
      84,  1158,  1159,  1157,  1155,  1156,    85,    74,    75,    79,
      78,    80,    81,    82,    77,    73,    86,    87,    71,   150,
     148,   149,     0,   143,   145,   140,     0,  1882,   235,   234,
       0,  1966,     0,   336,    89,  1401,   270,   273,   320,   321,
     319,   318,     0,   136,    90,  1050,  1126,  1267,  1111,     0,
    1104,    63,  1359,  1886,     0,     0,     0,     0,     0,     0,
       0,     0,  1803,  1138,  1241,     0,     0,     0,   963,   992,
       0,   419,   419,  1002,  1000,   408,   419,   996,  1001,   998,
       0,   443,     0,   442,     0,     0,     0,     0,     0,   970,
     967,     0,     0,     0,  1466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   989,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   952,  1013,   976,   974,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   982,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1019,   793,     0,   785,   709,   714,   730,
    1939,  1117,   734,     0,   738,     0,   911,     0,   958,   959,
       0,  1468,  1391,     0,   655,  1796,  1797,     0,   610,   674,
       0,  1233,  1218,  1225,  1219,     0,     0,     0,  1217,  1458,
    1457,  1464,  1921,     0,     0,     0,     0,  1924,  1111,  1111,
       0,     0,  1177,     0,     0,     0,   666,   671,   667,   670,
       0,   694,   703,   702,  1459,  1466,     0,     0,     0,     0,
     445,   444,   451,     0,     0,     0,  1757,     0,   447,   449,
     448,  1767,   446,  1338,  1135,  1298,  1297,  1142,  1141,     0,
    1292,  1339,     0,  1928,  1056,     0,  1049,  1048,  1064,     0,
    1050,  1063,  1063,     0,  1029,  1028,  1245,  1248,     0,  1027,
    1065,  1054,   674,  1986,  1998,     0,   454,   453,   300,   450,
     299,   123,   122,   128,   129,   338,   518,   492,   493,     0,
       0,     0,   498,   332,   517,   331,   334,   507,     0,   283,
     280,   544,   286,   282,   298,     0,     0,   287,   517,   551,
     552,   566,   276,     0,   312,   313,   311,   295,   278,   279,
     546,   285,   284,   281,   290,   291,   309,   308,   289,   310,
     557,   307,   305,   302,   304,   303,   306,   288,   277,     0,
     539,     0,   322,   324,   325,  1472,     0,   571,   541,     0,
     326,   327,     0,     0,     0,     0,   654,     0,    98,   147,
       0,  1883,   238,   236,   237,     0,     0,   241,     0,   239,
       0,     0,  1403,  1402,   240,   254,   455,   274,     0,     0,
     137,   139,   140,     0,  1111,  1147,  1260,  1266,  1887,  1876,
    1875,  1890,  1890,  1890,     0,  1113,     0,  1198,   778,   811,
     815,   924,     0,   993,   457,     0,  1003,   410,   995,   997,
     999,   801,   817,   822,   926,   804,   803,     0,     0,     0,
       0,   837,   840,   842,   833,   838,   836,     0,   925,   849,
     846,   848,   809,     0,   949,   928,   930,   851,   862,   987,
     990,     0,     0,     0,   863,   859,   951,   860,     0,   865,
     834,   866,     0,     0,     0,     0,   935,   870,   937,   939,
     944,   942,   946,   876,   813,     0,   881,   883,   794,   778,
     885,     0,   891,   889,     0,     0,   897,     0,     0,   906,
       0,   904,     0,   905,     0,   907,   908,     0,   920,   923,
    1017,   802,     0,     0,   520,   731,   735,   696,   695,   909,
    1401,   649,     0,   650,   636,   695,  1215,  1227,     0,  1235,
       0,     0,  1212,  1222,     0,     0,     0,  1221,     0,  1821,
    1822,  1820,  1137,  1119,  1176,  1174,     0,  1169,  1171,  1173,
     689,     0,   701,   700,     0,  1774,     0,  1773,  1785,  1786,
    1783,  1784,  1782,  1763,     0,  1769,  1768,     0,     0,     0,
    1779,  1770,     0,     0,  1291,     0,  1286,   595,     0,  1050,
    1063,  1050,  1036,     0,     0,  1050,  1032,  1030,  1034,     0,
    1111,     0,     0,     0,     0,  1051,   695,  1461,  1129,  1132,
     335,   517,   494,   495,   507,     0,     0,     0,     0,   451,
     296,   550,   549,   297,     0,     0,   543,   336,   570,   471,
     404,   353,   344,   419,   347,   346,   390,   361,   358,   408,
     406,   376,   408,   408,   383,   382,   400,   386,   366,   457,
     457,   365,   403,   457,   387,   385,   389,     0,   391,   408,
     396,   384,   388,   405,   381,   378,   402,   419,   419,   359,
     362,   401,   457,     0,   394,   419,   423,   364,   457,   463,
       0,     0,   419,   421,  1471,  1968,     0,     0,  1073,   116,
     144,     0,     0,     0,     0,   244,   269,   255,     0,   275,
     107,   109,     0,     0,     0,  1262,     0,  1258,     0,  1895,
    1895,  1895,  1240,  1239,     0,  1238,  1242,     0,     0,   463,
     465,   459,   463,     0,   994,     0,     0,   971,   828,   829,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   798,     0,     0,     0,     0,     0,     0,     0,   903,
     901,   902,     0,  1020,     0,   699,   960,     0,   656,   252,
       0,     0,     0,  1236,  1224,  1925,  1213,  1216,  1466,  1823,
     673,     0,  1114,  1404,  1172,     0,     0,  1460,     0,     0,
    1778,  1764,   452,     0,     0,     0,     0,  1765,     0,  1104,
    1057,     0,     0,  1022,  1050,  1050,     0,  1022,     0,     0,
       0,  1247,  1126,  1249,  1069,  1067,  1068,  1066,  1059,     0,
    1133,  1134,  1131,     0,     0,     0,   556,     0,   569,   558,
     423,   292,   323,   477,     0,     0,   363,   412,   407,     0,
     412,   412,   372,   390,   367,     0,   457,   380,   371,   392,
     395,   397,   399,   412,     0,   457,   360,   369,     0,   412,
     431,     0,     0,     0,   427,     0,   470,     0,   434,   340,
     424,   426,     0,     0,   393,     0,   349,   464,     0,   351,
       0,     0,   412,     0,   422,   412,     0,  1967,     0,   695,
     695,  1972,    99,   146,     0,  1972,   242,  1925,  1401,     0,
     247,     0,   138,   141,     0,  1132,   515,  1148,     0,     0,
    1894,  1892,     0,  1893,  1891,  1867,     0,  1826,  1827,  1825,
    1813,     0,     0,   812,   420,   458,   466,   467,     0,   462,
     460,   463,   409,     0,   823,   843,     0,   810,   988,   984,
    1109,   853,     0,   861,   867,   954,   953,   880,   886,   890,
     888,   892,   898,   899,  1004,     0,   961,  1392,  1137,  1226,
    1228,  1234,  1223,     0,  1115,  1126,     0,  1412,  1170,   690,
    1776,  1775,  1777,  1771,     0,     0,     0,     0,  1055,  1050,
    1037,     0,  1041,  1046,  1042,     0,  1033,  1031,     0,  1147,
       0,  1137,  1132,     0,     0,     0,     0,     0,     0,     0,
       0,   555,  1437,   545,   547,     0,     0,     0,   472,   473,
     478,   480,     0,     0,   416,   417,   418,   373,   413,   415,
       0,   375,   343,   368,   398,   374,     0,   370,     0,   357,
     437,   436,   704,   429,   439,     0,     0,   435,   425,   433,
     428,     0,     0,     0,     0,   341,     0,   342,  1470,  1969,
     664,     0,     0,   532,   126,   182,   125,   117,     0,     0,
    1965,   245,   243,     0,  1921,   110,    91,     0,   514,     0,
    1873,  1872,  1871,  1868,     0,     0,     0,     0,     0,     0,
    1896,  1898,  1237,     0,   468,   461,     0,     0,     0,     0,
       0,  1021,     0,   253,   688,   314,  1123,  1132,     0,  1137,
       0,     0,     0,     0,  1405,  1407,     0,  1175,  1781,  1780,
    1766,     0,     0,     0,     0,     0,     0,     0,  1076,  1246,
    1071,  1060,  1130,     0,     0,   328,  1439,  1438,   569,   483,
     484,   485,     0,     0,     0,   476,   479,   352,   345,   414,
       0,   521,     0,   356,   438,   704,   432,   457,   463,   457,
     463,  1970,     0,     0,     0,     0,     0,   203,     0,   208,
       0,     0,     0,     0,   184,   189,   100,     0,     0,   192,
    1483,     0,  1484,   127,     0,   249,   248,     0,  1132,     0,
    1869,  1899,  1902,  1900,  1901,  1903,  1897,     0,   411,   844,
       0,   972,   854,   912,     0,   315,     0,     0,  1120,  1122,
    1116,  1160,     0,     0,     0,     0,  1406,     0,     0,  1413,
    1415,     0,  1052,  1038,     0,  1043,     0,  1035,     0,     0,
    1072,     0,   329,   548,   487,     0,   486,     0,   481,   482,
     477,     0,   457,     0,   457,   430,   348,   350,   354,   355,
    1925,     0,  1973,     0,   202,   205,     0,     0,   198,     0,
       0,   196,   197,   195,   199,     0,   187,     0,   183,   226,
     182,   182,   229,   194,   222,  1976,  1925,   111,   513,   516,
    1243,  1251,     0,     0,  1393,  1124,  1125,  1132,     0,   672,
    1410,  1411,     0,  1408,     0,     0,  1414,     0,     0,     0,
       0,  1077,  1070,   330,   489,   490,   488,   474,   475,   377,
     522,   379,  1971,  1974,  1975,   204,     0,     0,     0,   185,
     215,     0,   155,   182,     0,   182,     0,     0,   182,   250,
     116,     0,     0,   845,  1404,  1121,  1161,  1409,  1417,  1416,
       0,     0,  1040,  1045,   200,   186,   209,     0,     0,   190,
     151,     0,     0,   153,   232,     0,   224,  1977,   112,  1250,
    1252,  1412,     0,     0,  1053,     0,   182,     0,     0,   215,
       0,   182,     0,   228,   154,     0,   230,   223,   225,   182,
    1418,   695,     0,   201,   206,   182,   188,   216,     0,   166,
     165,     0,   157,   178,   227,     0,   156,     0,   182,   113,
       0,  1420,     0,     0,  1164,  1166,     0,     0,   212,   182,
       0,     0,     0,     0,     0,     0,   152,     0,   182,     0,
       0,  1427,  1167,  1162,   695,  1287,   207,   208,   182,   211,
     182,   191,   160,   179,   180,     0,   163,   233,     0,  1419,
    1422,     0,     0,  1424,  1425,     0,  1394,  1165,   213,   182,
     219,     0,     0,   158,   171,   159,   169,   162,     0,   231,
    1426,  1421,     0,  1428,   215,   182,   218,   177,   175,   182,
     173,   167,     0,   174,   181,   172,     0,   164,  1423,   221,
     182,     0,   161,   176,   170,   168
};

/* YYDEFGOTO[NTERM-NUM]. */
static const short yydefgoto[] =
{
      -1,    52,    53,    54,    55,    56,    57,  1174,    58,   522,
     912,  1367,  1368,    59,   413,    60,   865,  1321,  1322,  1323,
      61,  1778,  2573,  1338,  1348,   877,  1772,  2849,  3205,   389,
     408,   371,  1781,  2233,  3051,  3327,  3470,  3519,  1284,  3042,
    1701,  3207,  1702,    62,   485,  1303,  1304,  2569,  2570,  2550,
    2571,  2212,  2213,  2214,  2215,  3511,  3463,  3490,  3512,  3553,
    3591,  3597,  3598,  3531,  3609,  3610,  3616,  3611,  3532,  3593,
    3464,  3317,  3405,  3460,  3407,  3509,  3318,  3505,  3397,  3523,
    3399,  3400,  3506,  3548,  3569,  3487,  3488,  3549,  3590,  3606,
    3319,  3467,  3517,  3413,  3462,  3466,  3538,  3515,  2220,  2555,
    2224,  2559,  3047,  2564,  3214,  3416,  2046,  2379,  3108,  2858,
    1278,  1279,  1280,   390,   391,   392,   493,  2225,  1735,  2226,
    2227,  1737,  1738,  1220,  2527,  2518,  2507,  3243,   393,  2232,
    2531,  2532,  2533,  2534,  2485,  2486,  2133,  2134,  2179,  2542,
    2836,  2989,  3004,  2837,  2838,  2839,  2840,  2841,  2842,  2843,
    2596,  2597,  3167,  3168,  3169,  2593,  3035,  3019,  3020,  3021,
    3183,  2883,  2421,  2422,  2430,  2431,  2467,  2735,  2468,  1283,
    2884,  3029,  3079,  3022,  2541,  2983,  3158,  3284,  3159,  3160,
    3161,  3378,  2135,  2484,  1300,  1301,   814,   394,  1351,  1785,
    3054,  3055,  2475,  2356,  3290,    63,  1286,   849,   851,   850,
    2183,   470,  1739,  1740,  1741,  2778,  2784,  3278,  2137,   111,
    1364,  2538,  2170,    64,  1257,  1252,    65,   825,   820,   821,
    1255,  1256,  1670,  2094,    66,   760,    67,   480,    68,   488,
    1326,    69,  1182,  2038,  2039,  2040,    70,   856,    71,   489,
    1332,  1333,  1334,    72,  1172,   116,    73,   749,  1177,  1179,
    1180,    74,   482,   483,  1295,    75,  1596,  2020,  2021,   861,
     862,  1302,  2693,    76,    77,   461,   435,   766,   436,   437,
    1623,  2058,  3244,   777,   778,   779,  2406,  1199,  1200,  1201,
    2063,  1624,  2411,   973,  2873,  1102,  1549,   710,  1103,  1550,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
    1990,  1993,  3023,   721,  1112,  1560,   722,   723,  1589,   724,
    2645,  2014,  2015,  2016,  2368,  2369,   725,  1852,  2608,  1890,
    1458,  2893,  2629,  1396,  1835,  2270,   511,   512,   901,  1025,
    1026,  1027,  1475,  1091,  2351,  1978,  1979,  2353,  1677,  2108,
    1678,  1679,  1680,  2959,  2958,  2960,  3263,  3131,  3265,  3135,
    2105,  1681,  1682,  3438,  2443,  2749,  2461,  2462,  3141,  2096,
    1683,  2449,  2765,  2965,  3140,  3369,  2185,  3267,  1153,  1154,
    1455,   947,   948,  1397,  1827,  2251,  3115,  3248,  2003,  2932,
    3246,  3348,  2060,  2061,  2465,  2768,  2972,  1223,  3245,  2253,
    1651,  1652,  2867,  3596,  2196,  3429,  3502,  3543,  3544,  3545,
    2402,  2403,  2717,  2718,  2062,  2933,    78,   396,    79,  1797,
     857,   858,   514,   405,    80,   414,  1828,    81,   429,  1611,
     562,   753,  1185,  1186,  2047,  2380,  2387,  2048,  2392,  2925,
    2382,  2696,  2697,  2118,  2119,  2383,  2699,  2922,  2874,  2875,
    2587,  3072,    82,   449,  2760,  2456,  2457,  3420,  3421,   754,
      83,   395,   895,  1789,  1356,  1788,   896,   897,  1358,   509,
     510,    84,   447,    85,   440,   815,  1647,  2434,  2082,   745,
     817,  1658,   818,  1659,  1638,  2077,  1211,    86,   845,   844,
      87,   466,  1274,    88,   523,   923,   924,  1372,  1805,    89,
     430,   758,   759,    90,   424,   746,  1604,    91,   417,    92,
      93,   737,  1165,  2690,  3242,  3474,  1595,  1166,  2565,  3117,
    3254,  3255,  3257,  3359,  3360,  3541,  3561,  3582,  3583,  3586,
     726,   833,   727,  3151,   728,   729,  2388,  2389,  2769,   730,
    3422,   731,  2180,   828,   411,   732,   556,   733,   734,  3321,
     879,   880,   374,   375,    94,   780,   439,  1203,  1204,  1205,
    1633,  1634,   819,  1545,  1635,  1636,  2074,  2069,  2941,  2741,
    2733,    95,   740,   925,  1170,  1171,  2026,    96,   448,    97,
     949,  1388,  1389,  1824,  2250,  1825,    98,   762,    99,   545,
    1382,   546,   927,   547,   548,   939,   934,   942,   936,  3224,
    3064,  3065,  1812,   908,   881,   882,  1375,  1807,  1808,  2869,
    3067,  3230,  3231,   100,   120,   380,   491,   872,  1193,   101,
     102,   103,   104,  1196,  1269,  2054,  1270,  1271,  1272,  1690,
    1621,   735,  1161,   992,  1437,  1562,  2001,   736,  1592,   476,
     477,   478,   498,   499,   112,   113,   501,   885,   886,   887,
    2221,  2545,  2846,  3041,  3203,   888,  3468,   105,   835,   458,
    1267,  1262,  1264,  1686,  2113
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3182
static const int yypact[] =
{
    3359, -3182,   221,   578,   684, -3182,   521, 42404,   463,   684,
     684,  -151,   647, -3182, -3182, -3182, -3182, -3182,   534, 42404,
     578, -3182, 21428, -3182, -3182,   158,   168,   684,   578, 42404,
   -3182,   427,   712,   578, -3182, -3182,   684, -3182,  -151, 42404,
   -3182,   623, -3182,   -90,   621,   361,   393, -3182, -3182, 42404,
     143,  -142,   901,  1103, -3182, -3182,   560, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, 21967, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182,   895, 42404, 42404, -3182,
   42404,   644, -3182,  1022, -3182, -3182,   684, -3182, -3182, -3182,
    -151, 21428, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182,   570, -3182, -3182,   656, -3182, -3182, -3182,
    1130, -3182,   953, -3182, 42404, -3182, -3182, -3182, -3182,   390,
     700, -3182,   730,  1038,   982,   102, -3182,  1017,  1017, 42404,
    1017, -3182, 42404, -3182,  1017,   684, -3182, -3182,  1612, 42404,
     902,   167,   -98, 37580,   703, -3182, -3182, 13729, -3182,  1009,
   21428, -3182,   684,  1074,   224, 42404, -3182, -3182,   684,   195,
     739, -3182,  2293,   114, -3182, -3182, -3182,   333, -3182, -3182,
    4330, -3182, -3182, -3182,   717, -3182, -3182, 21428,   684,  1020,
   -3182, -3182,   109,   109,   109, -3182,   109, -3182,   109, -3182,
    -142,   721, -3182, -3182, 42404,  -120, -3182, -3182,   697,   -10,
   -3182, -3182, -3182, -3182, 21428,  1135,   837, -3182, -3182, -3182,
   21428, -3182,   -13, -3182, -3182,   749, 42404, -3182, 21428, 21428,
     245,   722,   975, 42404, -3182, 34900,   894,   379,  1022,  1304,
   -3182, -3182,   953, -3182, 42404, 42404, -3182, -3182, -3182, 39188,
     102, -3182, 13729,  1170, 42404, 42404,   996, 42404, -3182, 34900,
   21428,  1017,   819,   942,   977,   915,   636, -3182, -3182, -3182,
   -3182,  1003, -3182, -3182,   883, -3182, -3182, -3182,   134, -3182,
     107, -3182, -3182, -3182, -3182, -3182,  1018,   797, -3182, -3182,
     101, -3182, -3182, 42404, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182,  1158,   812,   828,   843,   845,   852, 16539, -3182,
     857,   860,   870,   876,   879,   900,   903,   908,   918,   923,
     930,   951,   959,   964,   974,   974,   978,   980,   984,   986,
     -56,   997, -3182,  1001,  1005,  1014,  1029,  1043,  1048,  1059,
    1064,  1071,  1082, -3182,  1090, -3182,  1094,  1095,  1096,  1097,
    1100,  1104,  1105,  1111,  1113,  1114,  1117,  1118,  1119,  1121,
   -3182,  1122,  1125,  1127, 13729,  1128,  1131,  1132,  1136,  1138,
    1140,  1141, -3182,  1142,  1145,  1146,  1147,  1149,  1150,  1151,
    1152,  1153,  1159,  1161,  1164,  1168,  1169,  1171, -3182, -3182,
   13729,  1175, -3182, -3182,  1176,  1177, -3182,  1181,  1182,  1183,
    1184,  1187,  1188,  1189,  1190,  1192,  1193,  1194,  1195,  1196,
    1197,  1199,  1200,  1202,  1203,  1204,  1205,  1207, -3182,   479,
    1209,  1210,   501,  1211, -3182,  1213, -3182,   133,  1216,  1217,
    1218,   974,   974,   974,  1219,  1220,  1222,  1223,  1227,  1228,
   13729, 16539, 16539, 16539,  9233, -3182, 42404, 23584, 42404, -3182,
     874, -3182, -3182,  1518, -3182,  1134,   893,   888,   770,   170,
     890, 16539,  2768,   199, -3182, -3182,  1026, -3182, -3182, -3182,
   -3182, -3182,  1229, -3182,  1011, -3182, -3182,   201,  1408,  1314,
   21428, -3182,   509, -3182, -3182,  1241, -3182, -3182, 34900, 21428,
   -3182, -3182, -3182, 19262, -3182, -3182,  1484, -3182,  1007, -3182,
   21428,   977, -3182,  1234,  1273,   722,  1191, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182,  1040,   333, -3182,
   -3182,  1363,  1546, -3182,  1291,    27,  1236,  1231,   241,    27,
   37580,  1517, -3182,   112, -3182,  1617, -3182, -3182,  1336, -3182,
   -3182, -3182,  1337,  1338,  1512,  1325, -3182,   138, -3182,   380,
   -3182,   572,  1517,    27,   160, -3182,  1538,  1658,   269,  -149,
   -3182,   399, -3182, -3182,  1722, -3182, -3182, -3182, -3182, -3182,
    1158, -3182, -3182,  1239, -3182,  1463,  1335, -3182, -3182,   554,
   -3182,  1244,   523, -3182,   -65, 35436, -3182, -3182, -3182,   113,
   -3182, -3182, -3182, 35972,  1386,  1279, 21428,   362, -3182, 39724,
   21428, -3182,   198, 13729, -3182,  2372,    87,    80, -3182,  1758,
    1421, -3182, -3182, -3182, -3182,  1662, -3182,  1254,   974,  1249,
    1607,  1257, -3182, -3182, -3182, -3182,  1292, -3182, -3182,   837,
   -3182, 21428, -3182,  -147, 21428, -3182,  1258, -3182,  1255, -3182,
   -3182,  1261, -3182, -3182, -3182, 21428, -3182, -3182,  1262,    49,
   21428,  1260, -3182, -3182, -3182, -3182, -3182, -3182,  1781, -3182,
   -3182, -3182,  1296,  1272, -3182, -3182, -3182, -3182, -3182, -3182,
    1364, -3182, -3182, -3182,  1277, -3182,  1277, -3182, -3182,  1277,
   -3182, -3182,  1277,   383,  2592, -3182, -3182, 42404, -3182, 42940,
   -3182, 19262, 13729, 13729, 13729,   854,   601,  1774,  1826,  1826,
    1826, 13729, 13729, -3182, -3182, 13729, -3182, 13729, 13729, 13729,
   13729,  1013,  1281, -3182, -3182,  9795, -3182,  1283, 13729, 13729,
    1368, 13729,  1026, 13729, 13729, 22506, 13729, 13729, 13729, 13729,
   13729,  1419, -3182, -3182, 13729,  2768, 13729, 13729, 13729,  1286,
   13729, 13729, 13729, 13729, -3182, 13729, 13729,   213, 13729,  1726,
     454, 13729, 13729, 13729, -3182, 10357, 13729, 13729, 13729, -3182,
   13729, 13729, 13729, 13729, -3182,  1841, -3182, 22506,  1016, 13729,
   13729,  1033, 13729, 13729, 13729, 13729, 13729, -3182, -3182, -3182,
   -3182,  9795, -3182, 13729, 13729, 13729, 13729, 13729, -3182, 16539,
   13729, 10919, 13729, 13729, 13729, 13729,  1293, 13729, 13729,  1826,
    1826, 13729, 13729, 13729,  1036,  9795, -3182, 13729,  1026,   153,
     153, 13729,  1026,  8109, 13729, -3182, -3182, -3182,   454, 11481,
    1294, -3182, -3182, -3182,  1826, 22506,  1826, 13729, 13729, 13729,
   -3182,  1320,  1774,  1774,  1774, -3182,   768, 13729,   629,  1425,
    1290, 13729, -3182, -3182, -3182, 16539, -3182, -3182,   559, -3182,
   -3182, -3182, 14291,  1300, 16539, 16539,  1613, 16539, 16539,     5,
   16539, 16539, 16539, 16539, 16539, 16539, 16539, 16539, 16539, 16539,
   16539,  1774, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182,  1315, -3182, 37580, 16539, -3182, -3182, 42404,
   -3182,  1305, -3182,  1584, -3182, -3182,  1618, -3182,  1588,   116,
    1311, -3182, 21428, 37580, -3182, -3182,   136,  1316,  1390,  1321,
   -3182,  1398, 21428, 21428, -3182, -3182, -3182, -3182,   739,    68,
    1323,   580, -3182, 42404, -3182,  1046, -3182, -3182, -3182,  1329,
   -3182, 13729, -3182,  1330, -3182,   758, -3182,  1666, -3182,  1417,
   13729, -3182, -3182,  1341,   953, 42404, 42404, 21428, 21428, -3182,
   -3182, -3182,   574, -3182, -3182, 42404,    27, 34900, -3182, -3182,
   -3182,  1727,   160, 42404,    27, -3182, -3182,   160, -3182, -3182,
   -3182, -3182, -3182, 21428, -3182, -3182,   160, -3182,   160,   160,
      27,    27,  1387, -3182, -3182,  1339, -3182,  1387,  1459,   366,
     109,  1543, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182,    38, -3182, -3182, -3182, -3182, -3182, -3182,   122,
   -3182, -3182, -3182,  1206,   485,   485,  1855,   974,  1334,   194,
   21428,    80,  1417, 21428, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182,  1343, -3182,  1344,  1342, -3182,  1764,  1766,  1767,  1768,
    1771,  1772,  1773,  1775,  1776,  1777,  1779,  1783,  1784,  1785,
    1786,  1355, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182,   723, -3182, -3182, -3182,   113, -3182,
   -3182, 37580,  1885, 34900, 42404, 21428, -3182, -3182,  -130,   145,
     145,  1593,  1258, -3182,    92, 42404,  1761, 25735,   118, 13729,
   -3182, 34900, -3182, -3182, -3182,    49, 37580,  1373, -3182, -3182,
    1555,   942, 21428, -3182, 42404, -3182, -3182, -3182, -3182, 19801,
   19801, -3182, 19801, -3182, -3182,    96,   110,  1303,  1406, -3182,
   -3182,  1378,  1380,   831, -3182,  1826,  1381, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182,  1382,  1384,  1385,  1389,  1924,  1391,
    -173,  1392,  1393,  1394,  1395,  1396,   473,  1397, -3182,  1399,
    1402, -3182,  1400, -3182,  1401,  1403,  1405,  1407,  1409,  1411,
    1412,   861,   863,  1413,  1416,   865, -3182,  1305,  1422,  1790,
    1423,  1424,   867, -3182,  1420,  1426,  1427,   871,  1430,   873,
     880, -3182, -3182, -3182, -3182,  1431,  1432, -3182, -3182,  -154,
    1434,  1436,  1438, -3182,  1440,  1442,  1443,   887,  1441,  1445,
     892,  1448,  1449,  1452,  1388,  1454, -3182,  1826,  1453,  1456,
    1457,  1826,  1458,   896,  1460,  1462,   909,   914,  1464,  1465,
    1467,  1468,  1469,  1470,   919,  1472,   927,  1471,    -9,  1475,
   -3182,  1476,  1478,  1479,  1480,   933, -3182,  1481,  1477,  1485,
    1486,  1487,    75,  1488,  1826,  1490,  1491,   936,  1492,  1493,
    1498, 12043, 12605, 13167,    15,  1499,  -137, -3182,  1501, -3182,
    1502,  1508, -3182,  1412,  1510,   940,   943,  1513, -3182, -3182,
   -3182,  1404,  1505,  1509,  1514, 37580, 13729, 42404, -3182,   834,
    1346, -3182, -3182, -3182, -3182, -3182,   652, -3182,  1410, -3182,
    1064,  1419, -3182, -3182,   219,  1433, 16539,    66,   893,  1414,
   16539, 16539, 16539,   888,   770,   770,   170,  2768,   170,  2768,
     890,   890,   890,   890,   890,  1774, 13729, -3182,  1774,  1522,
     436, -3182, -3182, -3182, -3182,  1735, 21428, -3182,   -27, 21428,
      80, -3182, 13729,  1417, -3182, 34900, 34900, 21428, 21428,   161,
   -3182,   773, -3182,  1417,  1797, 19801, 19801, 19801, -3182, -3182,
   -3182, -3182, -3182,   596, -3182, -3182, -3182,  1519, -3182, -3182,
   -3182, -3182, -3182, 40260,   123, -3182, -3182,  1417,  1801, -3182,
   -3182,  1523, 42404, -3182, -3182, -3182, -3182,    10, -3182, -3182,
   -3182, -3182,   -76, -3182, -3182, -3182, -3182,  1556,    27, 42404,
   -3182, -3182,    27,   160, 21428,    27,    27, -3182, -3182,   970,
   -3182,   399, -3182, -3182, -3182, -3182, 42404,   824,  1597,  1516,
   -3182, -3182, 21428, -3182,  1525, -3182,  1851,  2003,  1517, -3182,
   -3182, -3182,   251,   251,  1417,  1602,  1609,  1624,  1628,  1634,
    1668, -3182, -3182,   214,  2022,   251,   251,  2022,   251,   251,
     251,  1604,  1972,   251,  1860,  1622,   809,  1862,   251, -3182,
    1625,  1978,   251,   251,   251,  2022,   251,   251,   251,   251,
     251,   146,   251,   251,   251, -3182,  2721, -3182, -3182,  1537,
   20340, -3182, -3182, -3182, 37580, -3182, -3182, -3182, -3182, -3182,
   -3182, 40796, -3182, 13729,   601,  1417,  1417,   259,  1417,   601,
    1417,  1417,  1417,  1417,  1417,   601,  1417,  1417,   601,  2372,
   -3182, -3182,   204, -3182,   -49, -3182,   352, -3182,  2234,   603,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, 21428,  1585,  1406,
   25735, -3182,   366, -3182,  1534, -3182, -3182, -3182, -3182, -3182,
   -3182,  1260,  1845, -3182,  1542, -3182, -3182,   946, -3182,  1539,
   -3182,  1540,  1619,  1623,  1626, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182,  1517,   773, 14853,
   -3182, -3182, 13729,  1547, -3182, 13729, 13729, -3182, -3182, -3182,
     222, -3182, 36508, -3182, -3182, -3182, -3182, -3182, 13729, 36508,
     222, 13729, -3182, -3182,  1549, -3182,  1888,  1888, -3182, -3182,
    1026, -3182, 42404, -3182, 13729, -3182, 13729, -3182,  1026, -3182,
   13729, -3182, 13729, 13729, -3182,  1782, -3182, 13729, -3182, 13729,
   13729, -3182, 13729, -3182, -3182, 13729, -3182, 13729, 13729, -3182,
   -3182,  1787, -3182, 13729, 13729, -3182, -3182, 13729, -3182, 13729,
   -3182, 13729, -3182, 13729, -3182, 13729, -3182, 16539, 22506,  1557,
   -3182, -3182, -3182,  1558, -3182, -3182, 13729, 13729, -3182, -3182,
   13729, -3182, 13729, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   13729, 13729, -3182, 13729, -3182, 13729, -3182, -3182, 13729, 13729,
   13729, -3182, 13729, -3182, -3182, -3182, -3182, 15415, 13729, 13729,
   13729,  1560, -3182, -3182, -3182, 13729, 13729, 13729, -3182, 13729,
    1945, 13729,  1950, 13729,  1954, 13729, -3182, 13729,  1794, -3182,
   -3182, -3182, -3182, -3182, 13729, -3182, 13729, -3182,  1582, 13729,
    1569, -3182, -3182, -3182, -3182,  1564, -3182, -3182, -3182, -3182,
   13729, -3182, -3182, 13729, -3182, -3182, -3182, -3182, -3182,  1572,
   -3182,  1305, 16539, -3182,  1433, 16539,  1419, -3182,   219,  1433,
     125, -3182, -3182, -3182,  1573, -3182, -3182,  1522, 42404,  1417,
    1574, -3182, -3182,  1600,  1884, -3182, -3182, -3182, -3182, -3182,
   -3182,  1653, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
     148, -3182, -3182,  1580,  1580, 18179, -3182, -3182, -3182, -3182,
    1798,  1970,  1973,  1976,   -65, -3182,    55,   121,   620,  1920,
    1517, -3182,  1979, 38116, 26273, -3182,  1586,  1923,  1587,   251,
   33292,   130, 24120, 33828, -3182, -3182,   259, -3182,    43, -3182,
   -3182, -3182, -3182,   574,   574,  1621, -3182, -3182, -3182,  1406,
     160, -3182, -3182, -3182,  1598, -3182, -3182,   366,  1929,  1931,
   -3182,  1816,   626,  1816,   366,   366, 22506,   366, -3182,  1313,
   -3182,   601,  1869, -3182, -3182, -3182, -3182, -3182, -3182, 37044,
   34364, -3182, -3182, -3182,  2074, -3182,  2075,   805, -3182, 23045,
     889,   889, -3182,   152,   180, 23045, -3182, -3182, 23045,   259,
     601, 23045,   601,  1417,  1417,  1340,   251,   601, -3182, -3182,
    1938,  1939, 23045, 23045, -3182, 37580, -3182,   251,   151,   259,
     259, 23045,   632,  1417,   601,   601,   630, -3182, -3182, -3182,
   21428,   802, 37580,  1614, -3182,  4509, 17640, 42404,   275,   140,
   -3182,  1608, -3182,  1616, -3182,   948, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182,  1620,  1615, -3182, -3182,  1701, -3182, -3182, -3182,
      79,  1616, 21428, 17101, -3182,   119, -3182,  1511, -3182, -3182,
   -3182, -3182,  1685, 42404, -3182,   366,  1837,   106,  1406,  1630,
     118, -3182, -3182, -3182, 42404,  1631, 26811, 34900, 34900, 34900,
    1627, 13729, -3182, -3182,  1848, 13729,  1629,  1633, -3182, -3182,
    1635,  1637,  1637, -3182, -3182,  1638,  1637,  1963, -3182,  1964,
    1639, -3182,  1641, -3182,  1642,  1643,  1644,  1647,  1648, -3182,
   -3182,  2768,  2768,  1650,  1632,  1651,  1652,  1654,  1657,  1659,
    1661,  1660,  1665,  1667,  1671,  1673,  1674,  1678,  1684,  1687,
    1688,  1691,  1837,  1692,  1693,  1694,  1699,  1700,  1702,   952,
    1703,  1704,   954,   210, -3182, -3182, -3182,  1705,  1707,  1710,
    1711,  1712,  1713,  1714,  1715,  1720,  1721,  1724,  1725,  1731,
   13729,  1732,    24,   956,  1733, -3182,  1742,  1743,  1746,  1749,
   13729,  1755, 13729,  1765, 13729,  1770,  1778,  1760,  1780,  1791,
   13729,  2052,  1672,  1663, -3182, 42404, -3182,   874, -3182, -3182,
   -3182,   199, -3182,  1792, -3182, 16539, -3182, 13729,  1789, -3182,
    1793, -3182, -3182, 21428,  2002, -3182, -3182, 34900, -3182,   333,
   22506, -3182,  1795, -3182,  1795,   713,  1800,   960, -3182, -3182,
   -3182,  1679,  1191,  2057, 34900, 34900, 34900, -3182,  1406,  1406,
    1417,  1417, -3182, 24656,  1723,  2026, -3182, -3182, -3182, -3182,
   41332, -3182, -3182, -3182, -3182,   566, 42404,  2016, 42404,  8671,
   -3182, -3182,  2218, 13729, 34900,   538,   629,   251, -3182, -3182,
   -3182, -3182, -3182, -3182,  1517, -3182, -3182, -3182, -3182,  2017,
   -3182,    27,   970,   320, -3182,   886, -3182, -3182, -3182,  2055,
     366,  1816,  1816,  2062,  1989,   -53,  1796, -3182,   251,   824,
      46, -3182,   333, -3182, -3182, 13729, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, 13729,
    2095,  2098,   889, -3182, 23045, -3182, -3182,  -147,    89, -3182,
   -3182, -3182, -3182, -3182, -3182, 34364,  1417, -3182, 23045, -3182,
   -3182,   203, -3182,  1417, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, 21428,
   -3182,   965, -3182, -3182, -3182, -3182, 42404, -3182, -3182, 21428,
   -3182, -3182,  4017, 42404, 42404,  2314, -3182, 42404, -3182,   577,
   42404, -3182, -3182, -3182, -3182,  1997,  2317, -3182, 21428, -3182,
    1802,   967, -3182, -3182, -3182,  2318,  3033, -3182,  1417,  1803,
    1806, -3182, -3182,  1788,  1406,  2089, -3182, -3182, -3182, -3182,
   -3182,   -89,   -89,   -89, 15977, -3182,  2210, -3182,  2768, -3182,
   -3182, -3182,  2009, -3182,   190,  2011, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, 13729,  1804,  1808,
    1809, -3182, -3182, -3182, -3182, -3182, -3182, 13729, -3182, -3182,
   -3182, -3182, -3182, 13729, -3182, -3182, -3182, -3182, -3182,  1922,
   -3182,  2014, 13729, 13729, -3182, -3182, -3182, -3182, 13729, -3182,
   -3182, -3182, 13729,  2315,  1983,  1811, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, 13729, -3182, -3182, -3182,  2768,
   -3182, 13729, -3182, -3182, 13729, 13729, -3182, 13729, 13729, -3182,
    1812, -3182,  1815, -3182,  1818, -3182, -3182,  2029, -3182, -3182,
   -3182, -3182, 13729, 13729, -3182, -3182, -3182, -3182, -3182, -3182,
      59, -3182,  2134, -3182, -3182,  1040,  1819, -3182,   251, 15977,
    1580,  1959, -3182, -3182,   713, 22506, 26273, -3182, 34900,  1257,
    1257,  1257,  1517,  2189, -3182, -3182, 37580,  1821, -3182, -3182,
   -3182,  1955, -3182, -3182, 27349, -3182,   814, -3182, -3182, 16539,
    1005, -3182, -3182, -3182, 37044, -3182, -3182,   251,  1825,  1827,
   -3182, -3182, 41868, 13729, -3182,  2243, -3182, -3182,  1830,   366,
    2043,   366, -3182,  2161,  2162,   366, -3182, -3182, -3182, 22506,
    1406, 15977,   889,   889,   889, -3182,  1040, -3182,  1834,   301,
   -3182, 23045, -3182, -3182,  -147,  1838,  2290,  2291, 23045,  2218,
   -3182, -3182, -3182, -3182,  4017,   971, -3182, 17640, -3182, -3182,
   -3182,  1842,  1843,  1637, -3182, -3182, -3182, -3182, -3182,  1638,
    2045, -3182,  1638,  1638, -3182, -3182, -3182, -3182, -3182,   190,
     174, -3182, -3182,   190, -3182, -3182, -3182,    82,   664,  1638,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182,  1637,  1637, -3182,
   -3182, -3182,   190,  1849, -3182,  1637,   514, -3182,   169,    74,
    1853,  1854,  1637,  1856,  1844, -3182,   988,   312, -3182, -3182,
   -3182,  4017, 21428,   312,  1847, -3182,  2721, -3182,   340, -3182,
   -3182, -3182, 42404,  4017, 42404, -3182,   574, -3182,    86,  1870,
    1870,  1870,  1005, -3182,   990, -3182, -3182,  1858,  1861,  2382,
     141, -3182,  2382, 36508, -3182,   992,  1863, -3182, -3182, -3182,
     994,  1865,   109,  1866,  1859,  1867,  1868,  1871,  1872,  2124,
    2279, -3182,  1873,  1874,  1875,  1877,  1878,  1880,  1882, -3182,
   -3182, -3182,  1883, -3182,  1897, 38116, -3182,  2222, -3182,  1329,
   22506, 15977,  1887,  1889, -3182,   523, -3182, -3182,  1891,  1257,
   -3182,  2405,  2255,  2389, -3182, 24656,  2154, -3182,   104,  2079,
   -3182, -3182, -3182,   538,  1984,  1985,   251, -3182,  1417,  1689,
    1516,  2231,   884,  1947,   366,   366,  1012,  1949, 13729, 13729,
    1908, -3182,  1837, -3182, -3182, -3182, -3182, -3182,  1329, 13729,
   -3182, -3182, -3182,  1909,  1910, 42404, -3182,   995,   275, -3182,
     514, -3182, -3182,    -8,  2138,  2140, -3182,   488, -3182,  1914,
     488,   488, -3182,  1291, -3182,  1948,   190, -3182, -3182,  1952,
   -3182, -3182, -3182,   488,  1915,   190, -3182, -3182,  2144,   488,
   -3182, 37580,  1417,   939, -3182,  1969, -3182,  2375,  2251, -3182,
     514, -3182,  2252,  2155, -3182,  2160, -3182, -3182,  2163, -3182,
    2164,  2165,   488,  2166, -3182,   488, 42404, -3182, 42404, -3182,
   -3182,  1953,   926, -3182,  2325,  1953, -3182,   523,   119,  1959,
   -3182,  2091, -3182, -3182,   998,   301,  1940, -3182,  2024,  2025,
   -3182, -3182,  2030, -3182, -3182,   115,  1093, -3182, -3182, -3182,
   -3182, 15977,  2269, -3182, -3182, -3182, -3182, -3182, 36508, -3182,
   -3182,  2382, -3182,  2173, -3182, -3182, 13729, -3182, -3182, -3182,
    1826, -3182, 13729, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, 13729, -3182, -3182,   591, -3182,
   -3182, -3182, -3182, 13729, -3182,  1837,   387,  2258, -3182, -3182,
   -3182, -3182, -3182, -3182,  1951,  1956,  8671,  2493, -3182,   366,
   -3182,  1994, -3182, -3182, -3182,  1996, -3182, -3182, 42404,  2089,
    1958,   591,   301, 42404, 42404,  1002,   454,   454,   454,   300,
     300, -3182, -3182, -3182, -3182,    94,    72, 42404, -3182, -3182,
      33, -3182,  1960,  1966, -3182, -3182, -3182, -3182,   488, -3182,
     109, -3182, -3182, -3182, -3182, -3182,   109, -3182,  1968, -3182,
   -3182, -3182,   974, -3182, -3182,  2187,  2001, -3182, -3182, -3182,
   -3182,  1974,  1986,  1987,  1988, -3182,  1957, -3182, -3182, -3182,
   -3182,  -142,   230, -3182, -3182, 31674, -3182, -3182,  2401,  2402,
   -3182, -3182, -3182,  1992,  1191, -3182, -3182, 42404, -3182,  2207,
   -3182, -3182, -3182, -3182,   132,  2212,   601,   601,   601,   601,
    1093, -3182, -3182,  2038, -3182, -3182,  1995,  1015,  1998,  1999,
    2004, -3182,  2084, -3182,   620, -3182,   584,   301, 13729,  1517,
    2513,  2517,  2427,  2519,   387, -3182,  -104, -3182, -3182, -3182,
   -3182,  2294,  1062, 13729,  2007, 13729,  2008,  1019, -3182, -3182,
   40796, -3182, -3182,  1021,  1023, -3182, -3182, -3182,   275, -3182,
   -3182, -3182,   443,   443,  1025, -3182, -3182, -3182, -3182, -3182,
    1030, -3182,  1034, -3182, -3182,   974, -3182,   190,  2382,   190,
    2382, -3182,  2013,  2511,  2232,  2518, 42404,   646,  2369, -3182,
   43476,  2370, 43476, 42404, -3182,  2047, -3182,  3832,    93, -3182,
   -3182,  2012, -3182, -3182,  2167, -3182, -3182,  4017,   301,  2023,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, 22506, -3182, -3182,
   13729, -3182, -3182, -3182, 21428, -3182,   319, 13729, -3182, -3182,
   -3182,  2216,   109,   109,  2540,   109, -3182,  2542,  2544,  -104,
   -3182,  2447, -3182, -3182, 42404, -3182, 42404, -3182, 42404,  2031,
    2032,  2206, -3182, -3182, -3182,  2587, -3182,   635, -3182, -3182,
      33, 42404,   190,   109,   190, -3182, -3182, -3182, -3182, -3182,
     523,  2253, -3182,  2256, -3182, -3182,  2423, 42404, -3182,  2459,
   13729, -3182, -3182, -3182, -3182, 13729, -3182, 13729, -3182, -3182,
   31674, 31674, -3182, -3182, -3182, -3182,   523, -3182, -3182, -3182,
    2039, -3182,   251,  2042, -3182, -3182, -3182,   301, 42404, -3182,
   -3182, -3182,   109, -3182,   109,   109, -3182,   259, 13729,  1045,
    1051, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182,  2376,  2393,  2058, -3182,
   -3182,  2076, -3182, 28969,  2046, 32215, 13729,    93, 31674, -3182,
   -3182, 22506, 15977, -3182,  2389, -3182, -3182, -3182, -3182, -3182,
    2594,  2048, -3182, -3182, -3182, -3182, -3182,  2476, 13729, -3182,
    2509,  2352,  2050, -3182,  2051,  2495, 43476, -3182,   926, -3182,
   -3182,  2258,  2059,  2347, -3182, 42404, 31674,  2078,  2080, -3182,
   38652, 29510,  2060, -3182, -3182, 13729, -3182, -3182, -3182, 31674,
    2418,  2068,  2488,  2070, -3182, 27887, -3182, -3182,  2494, -3182,
   -3182,  2437,  2073,   273, -3182,  2069, -3182,  2497, 31674, -3182,
    2305,  2087, 13729,  2094,  2077, -3182,   601, 42404,    44, 31674,
    2109,  2489, 42404,  4017,  2490,  2491, -3182,  2267, 30051,  2412,
   18718,  2237, -3182, -3182, -3182, -3182, -3182, -3182, 31674, -3182,
   28428, -3182, -3182, -3182,  2556,   791, -3182, -3182,  2132, -3182,
   -3182, 37580,  1053, -3182, -3182, 22506, -3182, -3182, -3182, 30592,
     562, 32756, 13729, -3182,  2145, -3182, -3182, -3182,  3832, -3182,
   -3182, -3182, 20884,  2039, -3182, 31674, -3182, -3182, -3182, 25192,
   -3182, -3182,  2499, -3182, -3182, -3182,  1026, -3182, -3182, -3182,
   31133, 32756, -3182, -3182, -3182, -3182
};

/* YYPGOTO[NTERM-NUM].  */
static const short yypgoto[] =
{
   -3182, -3182, -3182, -3067, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182,   868, -3182, -3182, -3182, -3182, -3182,   897, -1594,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
     363,   -46, -3182, -3182, -3182, -3182, -3182, -3182,  1820,  -800,
   -2902, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,   100,
    -188, -3182, -3182,   126, -3182, -3182, -2258, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182,  -897, -3182,  -942, -3182, -3182,
   -2246, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
    -887, -3182, -3182, -3182, -3182, -3181, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182,  -786, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182,  -364, -3182, -3182, -2016, -3182, -3182, -3182,
    1347, -3182,  1415, -3182,  2295, -3182,  -423,  -170,   955, -2011,
   -1218,  -711,  -693, -1082, -3182, -3182, -3182,  -453, -3182, -3182,
     467,   -95,   957,   993,   516,   567, -3182, -3182,   -85, -3182,
   -2697, -3182, -3182, -3182,  -108, -3182,  -107, -3182, -3182, -3182,
   -1499,  -138, -1639, -3182,  -462, -2181, -3182,  -273, -3182,  -312,
   -3182,  -429, -1816, -1895, -3182, -3182,  -301,   -68,   -22, -3182,
   -2630, -2588, -3182, -3182,  -656, -3182, -3182, -3182,  -664, -3182,
    -441,  -563, -3182, -3182, -1650, -1795, -3182, -3182, -2218,  1371,
   -2163,  -495, -2042, -3182,  -450, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182,   548, -3182, -3182, -3182,  -527,  -128,
   -1334, -2737, -3182, -3182, -3182, -3182, -3182, -3182,   627, -3182,
   -3182,  1058,  1473, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182,   691, -3182, -3182, -3182, -3182, -3182,
   -1073,  1428, -3182, -3182, -3182,  1226, -3182, -3182, -3182, -3182,
    1126, -3182, -3182,  1879, -3182, -3182, -3182, -3182,   359,   716,
   -3182, -3182, -3182,  1890,   687,  -459,  -729, -3182,  2284, -3182,
   -3182, -3182, -1442, -2054, -3182,  1971,  -498, -2369,  1133,  -882,
      61, -3182,  -165,  -581,  4615, -3182, -3182, -1030, -3182, -3182,
    -625, -3182, -3182, -1066,  -955,  1636,  1645,   328,   492,   281,
   -3182, -3182,  -489, -3182, -3182, -3182, -1032,  -551, -3182, -3182,
   -3182,   736, -3182, -3182, -3182,    69, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182,  -911, -3182,   906,  -880, -3182, -3182, -3182,
    1737, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -2040, -3182,
   -1647,    14, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -2035, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -1498,
   -3182, -1677, -3182, -1167, -3182, -3182,  -504, -2098,  -985,   563,
   -3182, -3182, -1160,  1799, -1748, -3182, -3182, -3182,   759, -3182,
   -3182, -3182, -2178, -1227, -3182, -3182, -2336,  -791, -1807,  -772,
   -3182, -2007,  -370,  -950, -2032, -3182, -3182, -3182, -3182,  -792,
   -3182, -3182, -3182,  -162,   719, -3182, -3182, -3182, -3182, -3182,
    -465,  -375,   600, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182,  1828,  1599,   958, -3182, -3182, -2165, -3182, -3182,
     741, -3182,  -133, -2033,   590,    83, -3182, -3182,    90, -2673,
   -3182, -3182, -3182, -3182, -3182, -3182,    31,  -794,  -677,  2343,
   -3182, -3182, -3182, -3182, -3182, -3182,  1901,  1444, -1629,  2286,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,  2358,
   -3182, -1159, -3182,  -645, -3182, -3182,  -715, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182,  1429, -3182, -3182, -3182,
   -3182, -3182,  1640, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,   117,  -672,
   -3182,  -451,  -692, -3182,  -549, -3182, -3182, -3182,  -789, -3182,
    -577,  -811, -1195,  -205, -2640, -1510,   120,  1610, -2703,  -912,
   -1057, -1071, -2006,    21, -3182,    -7,  -679,  -402,  2417, -2510,
    -405,  -501, -3182,   218, -3182, -3182, -3182, -3182,  1208, -3182,
   -3182, -3182, -3182,   389, -3182, -3182, -3182,    76, -3182,  -126,
    -306, -3182, -3182,   801, -3182,  1224, -3182, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182, -3182,
    1649,  2390,  2063, -3182,  1894, -3182, -3182, -3182, -3182, -3182,
    -403, -3182,  -341, -3182, -2044,  1496,   308, -3182,   583,  -938,
   -1224, -3182,  -399, -3182, -3182,   283,  2400,  2081, -3182, -3182,
   -3182, -3182, -3182, -2331,  -750, -3182, -2408, -3182, -3182, -3182,
   -3182, -3182, -3182, -3182, -3182,  -667, -3182,  -570, -1311,   -99,
   -3182, -3182, -3182, -3182,   672, -3182, -3182, -3182,  2359,  1961,
   -3182,   613, -3182,   -12,  -202, -3182, -3182, -3182,   932, -3182,
   -3182, -3182, -3182, -3182, -3182
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1929
static const short yytable[] =
{
     372,   841,  1344,   875,   974,   976,  1404,  1160,   558,  1598,
    1439,   813,   372,   982,  1532,   372,  1197,   957,   907,  1224,
    2252,  1239,   372,   866,   867,  1040,  2272,  1653,  1531,  2386,
     993,  1799,   372,  2276,  1275,  2748,  2419,  2423,  2425,  1551,
    1224,  2236,   372,   410,  2433,  1688,  1559,  1405,  1406,  1407,
     834,   834,   834,  2136,   834,   909,   834,  2445,  2575,  1742,
    1419,  2707,   472,  1175,   473,  2455,  2152,  2459,  1736,  2454,
    1042,  1548,   827,  1429,  1219,  2093,  2437,  2438,  1662,   891,
     372,  2594,  2005,  1410,  1411,  2598,  1413,  2980,  2963,  1665,
    1666,  1577,  1579,  2487,  1498, -1473,  1066,  1362,  1240, -1806,
     372,   372,  1068,   372, -1107,  1072,  3027,  2489,   467, -1474,
    1081,  1082,  1083, -1807,   372,  1476,  -256,  1478, -1870,   945,
    1482,  3409,  -246,  2476,  1448,  -257,  1871,  2508,  2509,  2476,
     490,  3223,  2488,  1327,   945,  2491,   945,  2999,  1281,  1468,
    3206,  2365,   484,   831,  3058,  2238,  2500,  2501,  1509,  1510,
    1092,  1093,  1094,  1515,  3043,  2510,  1282,  1488,  1489,  1490,
    1565,  3076,  1567,  1602,  2167,  2240,  3053,  1075,  1497,  1243,
    1131,   451,  3120,  1530,  1225,  1534,  3567,   783,   784,  2992,
    2997,  2059,  2398,  2998,  3282,  2110,  1965,  2435,  1782,  2879,
    3058,  2552,  2661,   937,  2879,   783,   784,  2479,  1795,   940,
    1233,  2880,  3007,  2581,  2582,  2583,  2880,  2560,  3026,  2479,
    2879,  2762,   452,   859,  2881,  2776,  2567,  1935,  1748,  2881,
    2702,  1277,  2880,   783,   784,  2470,  1119,   551,   783,  2993,
    1277,  1569,   106,  1328,   415,  2881,  1329,  2479,  2023,  1613,
    1324,  3153, -1473,   946,   783,   784,  1948,  1178,  3110,  2400,
    3408,  1362,  1570,  2408,  2261,  1136,   743,  2763,   946,  2083,
     946,   418,  1155,   648,  1436,  2102,  3142,  3279,  2080,  2775,
    2562,  -336,  2116,  1779,  1209,  1162,  3155,  2262,   459,  3303,
    2128,   453,  1155,  2536,  2757,   846,  1222,  3304,  2168, -1107,
     497,  3075,  2129,  1125,  3080,  1189,   868,  1340,  2424,  2553,
   -1349,  2035,  1099,  1745,  2216,   751,  1250,  1451,  2868,   832,
    1452,  2504,   107,   506,  2035,  3059,  2263,  3155,  2480,  2264,
    2970,   433,   678,  1137,  1157,  2695,  2919,  2265,  3528,  3156,
    2562,  1241,  1214,  1076,  1246,  2477,  2478,  3152,   494,   678,
   -1473,  2440,  1783,  1842, -1806,   767,  -337,  1349,  3554,  3357,
    2709,  2710,  2711,  2024, -1474,    40,   518,  3410, -1807,  1141,
    2218,  3059,  3555,  2191,   441,  2002,  3173,   507,   442,  1350,
    3156,  3358,  1163,  3152,  1330,  3177,  1251,   372,  1184,  2219,
    -336, -1107,   419,  1687,   379,  1221,  1242,  1843,  2130,  2505,
    1571,  1291,   372,  2116,  2743,   372,   108,  2968,  3232,   889,
     432,   106,   372,   481,   592,  3425,   372,  1891,  2766,  2399,
    3247,  3060,  1298,   372,  2971,  2752,  1215,   460,   372,  1746,
     678,  2192,  2209,  3619,  1968,  2761,  2453,  2217,  1298,  1780,
    2210,  1299,   109,  1459,   951,  2537,  2643, -1473,  2070, -1349,
     372,   739,  2774,   834,   980,  1365,  3280,  1299,  1288,  1684,
    1363, -1474,  1331,  1145,  2563,   768,  2781,   372,   892,  1325,
     752,  1146,   605,  2758,   847,  2081,  1164,   372,   553,   904,
    2401,   906,  1343,   372,   508,  1674,  2071,  1126,  2476,   372,
    2506,   372,   372,  3305,  1833,  2084,   372,  3411,   372,   848,
    2576,  3374,  2476,  3235,    51,   852, -1107,   372,   372,   475,
    1689,  1526,   372,   981,  2089,   454,   744,   372,   372,  2025,
     372,  1655,   372,   372,  2563,  2777,  2481,  3112,  1736,  1661,
    2036,  2193,  3250,  1147,  2539,   455,  2136,  2028,  3281,   416,
    1639,  3617,  3251,  2036,   769,  1667,  1668,  3010,  3061,  2926,
    1118,  3373,  2266,  1563,  -337,  1156,   372,   552,   860,  3062,
     456,  3157,  1694,  1572,  2211,  2859,  2974,  2117,  1379,  1210,
    1784,  2764,   632,  1564,  1695,  1156,  1909,  1226,  1281,   938,
    1913,  1149,  2436,  2136,   869,  1966,  1184,  3011,  -336,  1585,
    1157,  3012,  1235,  3283,  2662,   678,  1282,   110,  2574,  3568,
    2554,  2194,  2011,  1234,  2012,  3062,  3206,   457,  2444,   764,
    2779,  1664,  3121,  1951,  1363,  1588,  3000,  1216,  2240,  1077,
    1293,  2004,  2986,  1749,  1675,  1118,  2009,  2010,  1676,  1556,
    2409,  1603,  3013,  3063, -1473,   397,  3412,  1281, -1806,  1293,
    3417,  2169,   653,  3028, -1107,   941,  1949,  1247, -1474,  3211,
     420,  1293, -1807,  3077,  3427,  1282,  3005,  3006,  1293, -1870,
    2712,  2713, -1107,  2131,  3009,  2267,  2482,   381,  1790, -1473,
    1980,  3032,  2037, -1806,  2929,  2921,  1157,  3386, -1107,  3388,
    1157,  2882,  2239, -1474,  1118,  2037,  2882, -1807,  2117, -1107,
    -256,  1999, -1870,  1150,  -337,  2386,  -246,  2773,  2072,  -257,
    2360,  1453,  2882,  -564,  1454,  1152,  3024,  2994,  2834,   372,
     372,   372,  1259,  2268,  2943,  1398,  1743,  1600,  2228,   398,
    3387,  2952,  3389,  1217,  1552,  2956,  2953,  1609,  -336,  3218,
    2957,  1696,  1293,  1127,  1128,  1129,  1656,  3426,  3025,  2973,
    3252,  2269,  3039,   372,  1398,   121,  1398,   496,   382,  1248,
    2511,   372,   372,  3445,  2644,   376,   372,  -469,   399,  1380,
    1587,   495,  3449,   372,  3451,  1615,  2195,  -498,  1249,  1118,
    2041,  1169,  2056,  1399,  -142,  2476,   519,  2056,  1601,  1218,
    1181, -1928,  3375,   648,  2753,  2754,  1327,   770,   771,   772,
     773,   774,   775,   372,  3139,  1265,  1674,  1253,  2404,   748,
    1697,  1642,  1399,   776,  1399,  2209,   445,   686,   648,  3500,
    3401,  1400,  3403,  2210,  2188,   119,  3272,  1994,  1184,  2198,
     377,   378,  3145,   559,  1698,  2204,  1542,  3395,  2207,  2057,
     648,   383,  -316,  1195,  2281,  2282,  2865,  2229,   421,   854,
    1400,   114,  1400,   427,  2000,  1236,  1648,   431,   372,  1222,
     873,   874,  3050,   425,  3376,  3014,   372,  1292,  2747,   372,
    1254,  3015,   372,   372,  1693,  1381,  3574,  2450,   834,  3057,
    1798,  -503,  3253,  1401,  1699,   446,  1394,   884, -1928,  3377,
    2451,  3040,  2521,  2522,  2738,  2128,  1328,  2405,  3016,  1329,
   -1925,   484,  1543,  3326,   372,   873,   874,   372,  1653,  1653,
    1553,  2739,  1401,  1998,  1401,  1398,   -55,  2115,   372,  3049,
     400,   462,  2007,   372,   560,  2930,  1649,  1804,   115,  2098,
    2523,  3349,  1347,  3126,  2473,  1353,  1224,   479,  1750,  3132,
    3133,  3164,   464,  1293,  2030,  1675,  1360,  2211,   656,  1676,
     678,  2441,  2524,  1402,  2049,  1700,  1773,  3249,  3017,  2362,
     372,  1687,   372,  2086,   372,  1629,  1616,  2088,  1742,  2460,
    2091,  2092,  2313,  1399,   980,   678,  1266,  1736,  2075,  3316,
    2357,  1800,  1402,  2525,  1402,   438,  3446,  2274,   561,  2098,
    3396,  2098,  2279,   569,  1532,  2150,  1395,   678,   372,   980,
    3273,  3274,  3452,  1995,  2230,   555,  3518,  2287,  2390,  1849,
    1563,  1400,  3418,  1694,  2292,  2017,  2314,  3165,   515,  1563,
     517,   980,  2018,  2516,   520,  1695,  2517,   401,  3469,  2301,
    2302,  1630,  2962,   384,  2740,  2121,  2306,  1330,  3018,  2008,
     372,   755,   402,  1298,  2311,  1394,  1195,  1237,  1394,   569,
    2474,  3166,  2452,  3213,  1850,  1532,  3146,   469,  1067,  1813,
    2099,  1814,  1299,   592,  3204,  1394,   929,   403,  1394,  2458,
    1554,   870,  1381,  1401,  1544,  2100,   443,  1157,  1619,   913,
    1071,   500,   404,  2329,  2231,  1238,  1555,  3081,  2101,   822,
     823,  1650,   826,  2502,  1173,  2630,  2189,  2190,   372,  2197,
    2577,  2199,  2200,  2201,  2202,  2203,   385,  2205,  2206,  3262,
    2528,  3475,  3146,  3604,   603,  1331,  1631,  2098,  1403,   592,
    2099,   605,  2099,  1298,  2031,  2032,   463,  3605,   444,   930,
     756,   871,  2964,  2964,  2964,  2100,   474,  2100,  3346,  -262,
     386,   910,  1299,  1402,  1157,  2017,  2363,  1403,  2101,  1403,
    2750,   475,  2724,  2041,  2367,  1418,   486,  2136,  1477,   620,
    1985,   487,  2102,  1996,   914,  3347,   490,  2098,   372,   931,
     603,   387,   372,  3465,   117,  1481,   118,   605,  1514,  1997,
     388,  2463,  1696,   492,   932,   372,   372,  2782,  1620,  1643,
    1644,   890,   502,  2151,   757,   372,   372,  2138,  1988,  1654,
    2141,  1989,   117,  1632,   118,  2526,   372,  1660,  3001,  2153,
    2490,  3002,  2492,  2041,  2938,   620,   505,  2497,  2161,  2042,
     915,   632,  2102,   386,  2102,  2073,   521,  2939,   372,   372,
     372,   372,  2512,   504,  2514,  2515,  2519,  3492,   372,  3492,
     372,  3130,  3497,   741,   916,   426,   372,   513,  2099,   750,
    2103,  1697,   738,  3594,  2043,  2044,   372,  2940,  1645,  1646,
    1308,  1309,   550,  2100,  1376,   742,   407,  1377,  3525,   829,
    1378,   824,   873,   874,   422,  1698,  2101,   632,   648,   428,
     783,   784,  3234,   553,  1663,  3535,  3439,  3182,  3440,  1692,
     652,   653,  2701,  3539,  2051,  2052,  2053,   853,  2099,  3492,
    3558,   842,  3225,   372,  2104,   752,   372,   854,  1403,   883,
    2103,  3570,  2103,  2100,  2043,  2044,  2609,  2610,  1776,  2686,
    2987,   873,   874,  2990,  2991,  1699,  2101,   917,   863,  1532,
    3589,  1747,  3492,   918,   648,   106, -1107,  1121,  1122,   902,
    3003,  1123,  1124,  2698,  3492,   928,   652,   653,  1539,  1540,
    2102,   945,  2045,   905,   372,   911,   372,   372,   372,  2182,
    2372,   919,   926,  3492,  2104,   933,  2104,  3620,   372,  3134,
     372,  3171,  3172,   935,   372,   943,  1319,  1320,   944,   372,
    1113,  1991,  1992,  3622,  3175,   372,  1777,   372,  2358,   109,
    3179,   952,   372,   372,  3492,   372,  1700,   920,  3226,  3227,
    2102,  1114,  3228,  3229,  2412,   836,   837,   953,   838,  3472,
     839,  1831,  1832,  3195,   783,   784,  3197,   921, -1107,  3362,
    1810,  1810,   954,  1810,   955,  3480,  1580,  1581,  1582,  1583,
    1584,   956,   922,  1101,   118,   678,   958,  3147,  2103,   959,
    3148,  1863,  1864,  1865,  1866,  1869,  1870,  1876,  1877,   960,
     684,  1881,  1882,  1884,  1885,   961,   686,  2273,   962,   687,
    1886,  1887,  3351,  1120,  2273,  1815,  1130,  1898,  1899,  1574,
    1575,  2361,  1902,  1903,  1167,   946,  1915,  1916,  2283,   963,
     873,   874,   964,  1816,  2493,  2494,  2288,   965,  2103,  1919,
    1920,   678,  2104,  3147,  1921,  1922,  3148,   966, -1107,  1929,
    1930, -1107,   967,  1817,  2513,  1168,   684,  1932,  1933,   968,
    3149,  3150,   686,  1941,  1942,   687,  1954,  1955,  1818,  1176,
    1973,  1974,   678,  1975,  1976, -1107,  2243,  2244,  2546,  2547,
     969, -1107,  2637,  2638,  2641,  2642,  2663,  2664,   970,  1115,
    2704,  2705,  2104,   971, -1107,  2786,  2787,  2856,  2787, -1107,
    1187,  2981,  1293,   972,  1705,  1706, -1107,   975,   372,   977,
     372,  1819,  1820,   978, -1107,   979,  3149,  3150,  3037,  3038,
    3070,  3071,  3082,  3083,  3085,  3086,   983, -1107,  3216,  3217,
     984, -1107,  3275,  3217,   985,  -455,  -455,  1708,  1188,  1821,
   -1107,  1191,  1116,   986,  -455,  3339,  3340,  1159,  1709,  3367,
    3368,  3371,  3217,  3372,  3217,  3380,  3381,  1710,   987,   372,
    3382,  3383,   372,  1198,  3384,  3383,  2966,  2967,   372,   372,
     372,   372,   988,  2877,  1712,  3482,  3368,   989,   372,   372,
     372,  3483,  3368,  3601,  3602,  1576,  1578,  2022,   990,  1277,
    1169,  1206,  1713,   991,   524,   525,   372,  1822,  1181,  2034,
     994, -1107,  1518,  1519,  1532,   372,  1810,  1810,  1810,  3276,
    3277,   995,  1197,  2744,  2870,  2871,  3068,  3069,  2390,   996,
   -1107,  1718,   372,   997,   998,   999,  1000,   372, -1107,  1001,
    1104,  1105,  1224,  1002,  1003,  2273,  1823,  2427,  2432,   372,
    1004,  1653,  1005,  1006,  2903,   372,  1007,  1008,  1009, -1107,
    1010,  1011,  1117,  1118,  1012,  2090,  1013,  1015,  1532,  1192,
    1016,  1017, -1107,  1207,  1195,  1018,   526,  1019,  1106,  1020,
    1021,  1022,  2458,  2109,  1023,  1024,  1028,   945,  1029,  1030,
    1031,  1032,  1033,  1107,  2469,  2273,  2495,  1208,  1034, -1107,
    1035,  2714,  2715,  1036,   527,  1721,  2746,  1037,  1038,  1212,
    1039,  2722,  1722,   372,  1041,  1043,  1044,   372,   528, -1107,
    1045,  1046,  1047,  1048,   372,  1108,  1049,  1050,  1051,  1052,
    1221,  1053,  1054,  1055,  1056,  1057,  1058,  1109,  1059,  1060,
     529,  1061,  1062,  1063,  1064,  1222,  1065,  1221,  1069,  1070,
    1073,   530,  1074, -1107, -1107,  1078,  1079,  1080,  1084,  1085,
     372,  1086,  1087,   372,  1110,  1227,  1088,  1089,  1158,  3128,
    1213,  1228,  1229,  1230,  1231,  1232,  1244,  1245,  1723,  1258,
    1260,   531,  1261,  1263,  1268,  1289,  2367,  1290,  2234,  1335,
    1336,  1337,  1724,  1339,  1341,  1342, -1107,  2780,  1343,  1355,
    1345,  1357,  1359,  1361,  2783,  1366,   532,  1369, -1107, -1107,
    1370,   946,   533,  1371,  1373,   372,  1374,  1155,  1394,  1095,
    1111,  1421,   372,  1423,  1077, -1107,  1443, -1107,  1457,  1532,
    1474,  1538,  1546,  1506,  1529,   372,  1547, -1107,  -535,  1561,
    1566,  1703,  1726,  2698,  1727,  1591,  1593,  1586,  1704,   534,
    1597,  1594,  1599, -1107, -1107,  1606,  2694,  1605,  1705,  1706,
   -1107, -1107,  1607,  1608,  1614,  1728,  1729, -1107,  1730,  2860,
    1622,  1628,  1637,   555,  1641,  1657,  1673,  1669,  1685,  1744,
    1671,   372,  1751,  1753,  1752, -1107,  1754,  1707,  1755,  1756,
    1757,  1708, -1107,  1758,  1759,  1760,  1769,  1761,  1762,  1763,
   -1107,  1764,  1709,  2737,  1732,  1765,  1766,  1767,  1768,  1774,
    1787,  1710,  1792, -1107,  1801,  1802,  1711, -1107,  1826,  1829,
    1830,  1834,  1840,  1836,  1837,  1838, -1107,  1907,  1712,  1839,
    2019,  1841,  1844,  1845,  1846,  1854,  1847,  1848,  1851,  1853,
    1855,  1873,  1856,  1277,  1857,  1858,  1713,  1859,  1981,  -777,
    1860,  1861,  2076,  2006,  1867,  1714,  1715,  1868,  1862,   535,
    1878,  1716,  1118,  1872,  1874,  1875,  2050,  1879,  1880,  1717,
    1883,  2085,  1888,  1889,  1892,  1718,   536,  1893,  2719,  1894,
    1895,  1900,   537,  1896,  1897,  1733,  1901, -1107,   538,  1904,
    1905,   372,  1906,  1910,  1734,  1908,  1911,  1912,  1914,  2112,
    1719,  1917,  1918,  2106,  1923,  1924, -1107,  1925,  1926,  1927,
    1928,  1934,   539,  1931, -1107,  1936,  1937,  1944,   372,  1938,
    1939,  1940,  1943,   540,   541,  1945,  1946,  2114,  1947,  1950,
    1952,  1953,  2122,  1956,  1957, -1107,   372,   372,  1958,  2123,
    1967,  1969,  1970,   372,  2785,   372,   372,  1720,  1971,  1721,
    1972,  1982,  2566,  1977,  2124,  1983,  1722,  2107,  2125,   542,
    1984,  3088,  -955,  2078,  2126,  2064,  2111,  2127,  2128,  2145,
    2273,  2146,  2148,  2149,  2154, -1107,  2156,  2157,  2175,   372,
    2239,  2235,  2242,  1293,  2247,  2245,  2246,  2258,  2248,  2280,
     624,  2249,   372,   372,  2293, -1107,  2340,  2315,  2316,  2303,
    2335,  2342,   372,   543,   544,  2344,  2347,  2350,   372,  2354,
    2355,   372,  2359,  2366,   372,  2373,  2375,  2376,  2377,  2381,
    2393,  2394,  1723,  2057,  2395,   372,   372,  2396,   372, -1107,
    2056,  2417,  2416,  2418,   372,  2439,  1724,  3200,  3201,  2442,
    2446,  1725,  2447,   372,  2448,   372,  2464,  2471,  2472,   372,
     372,  2498,  2499,  2529,  2543,  2544,  2549,  2551,   957,  3238,
    2548,  2568,  1687,  1793,  2579,  2586,  2584,  2599,  2600,  2589,
    2681,  2520, -1107,  2590,  2683,  2591,  2592,  2595,  2018,  2601,
    1687,  2602,  2603,  2604,  2605, -1107,  1726,  2606,  1727,  2607,
    2611,  2612,  2613,  2692,  2614,   372,   372,  2615,  2682,  2616,
    2618, -1107,  2617, -1107,  3240,  2619,   372,  2620,  2708,  1728,
    1729,  2621,  1730,  2622,  2720,  2623,  2412,   372,  2624,   372,
     372,   372,   372,  2557,  2625,  2706,  1731,  2626,  2627, -1107,
   -1107,  2628,  2721,  2631,  2632,  2633, -1107,  1705,  1706,  2634,
    2635,  2726,  2636,  2639,  2640,  2646,  1532,  2647,  1732,  3127,
    2648,  2649,  2650,  2651,  2652,  2653,  3332,  3333,  3334,  3335,
    2654,  2734,  2655,  2120,  2656,  2657,  2751,  2745,  -455,  -455,
    1708,  2658,  2660,  2755,  2665,  2139,  2140,  -455,  2142,  2143,
    2144,  1709,  2666,  2147,  2667,   761,   525,  2668,  2155,  2669,
    1710,  2934,  2158,  2159,  2160,  2671,  2162,  2163,  2164,  2165,
    2166,  2677,  2171,  2172,  2173,  2673,  2756,  1712,  2771,  2469,
    2675,  2772,  2847,  3181,  2852,  2853,  2857,  2866,  2676,  2876,
    2678,  2878,  1277,  2885,  2892,  1713,  2894,  2864,   372,  1733,
    2688,  2679,  2685,  2689,  2900,  2899,  2700,  2759,  1734,  3291,
    2703,  2912,  2855,  2861,  2887,  3291,   372,  2862,  2888,  2889,
     372,  2901,  2909,   372,  1718,  2910,  2918,   526,  2911,  2041,
    2920,  2931,  2935,  2936,  2944,  2948,  2945,   372,   372,   372,
    2949,  2951,  2954,  2955,  2022,  2969,   372,  2975,  2976,  2977,
    1532,  2984,  2985,   372,  3066,   527,  2988,  3046,  3008,   372,
    3036,   372,  3030,  3031,  3027,  3033,  -535,   372,  3073,   528,
    3090,  3074,  -535,  3084,   373,  3087,  3089,  3091,  3095,  3092,
    3096,  3093,  3094,  3097,  3098,  3099,   406,  3100,  3101,   412,
    3102,   529,  3103,  3105,  3104,  3107,   423,  3111,  1721,  3113,
    3071,  3078,   530,  3114,  3116,  1722,   434,  2724,  3119,  3122,
    3124,  3125,  3129, -1039,  1197, -1044,   450,  3138,  3143,  3144,
    3162,  3301,  3163,  3170,  3176,  3024,  3178,   372,  2273,  3174,
    3185,  2222,   531,  3186,  3187,  3189,  3190,  3202,   372,  1532,
     834,   372,  3191,  3209,  3215,  3192,  3193,  3194,  3196,  3219,
    3220,  3221,  3233,  3584,   468,  3236,  3222,   532,  3256,  3261,
    3264,  3258,  3266,   533,  1532,  3295,  3259,  3270,  3083,  3323,
    3287,  1723,   372,  3296,   471,   373,  3288,   373,  3293,   372,
    2719,  1532,   372,  3324,  3297,  1724,   372,   372,   468,  3329,
     372,  3430,  3431,   372,  3433,  3584,  3298,  3299,  3300,  3337,
     534,   372,  3325,  3208,  3331,  3338,  3344,  3352,  3341,  3342,
    2789,  3353,  3354,  3355,  3343,  3361,  3364,  3366,  3391,   982,
    1068,  1072,  3450,  3390,  3392,  3393,  3398,  3402,  3406,  2854,
    3414,  3415,  3428,  3419,  3432,  1726,  3434,  1727,  3435,  3437,
    2539,  3442,  3444,  2547,  3455,  3453,  3565,  3457,  3454,  3484,
    3471,  3294,  3473,  3485,  3486,   525,  2469,  3489,  1728,  1729,
    3503,  1730,  3504,  3493,  3507,  3510,  3513,  3514,  3521, -1728,
    3516,  3477,  3522,  3478,  3479,  3526,  3527,  3536, -1163,  3540,
    3546,  3547,  3550,  3551,  3552,  3557,  3556,  3559,  3564,  3542,
    1306,  1307,  1308,  1309,  1310,  1311,  3560,  1732,  1312,  1313,
    1314,  1315,  1316,  1317,  3563,  1318,  3571,  3572,  3575,  3576,
     535,  3577,  3579,  3585,  3592,  3599,  2208,  3615,  3623,  2241,
    3498,  1285,  2863,  2273,  3052,  2850,   526,   536,  3595,  3625,
    3588,  3496,  3542,   537,  3212,  1771,  3048,   503,  3271,   538,
    2561,  2174,  2982,  2978,  1691,  2540,  2132,  2178,   372,   372,
    2483,   372,  2995,  2996,   527,  3034,  3289,  3154,  3188,   372,
    3180,  2979,  2942,   539,  3385,  3443,  3447,   372,   528,  3286,
    3379,  1786,  3328,  2530,   540,   541,  3292,   372,  1733,  2095,
    1672,  2378,  2691,  2033,  1273,   372,  2496,  1734,  2374,  1297,
     529,  2397,  3302,   840,  1705,  1706,  3345,  2503,  2915,  1202,
    3106,   530,   372,  2370,  1568,  2055,  2277,  2916,  1319,  1320,
     542,  1473,  1770,  2950,   372,  1573,  3370,  2364,   834,  3269,
    1420,   372,  3587,  3118,   834,  -455,  -455,  1708,  2407,  1390,
     372,   531,  1610,  2924,  -455,  2384,  2254,  3109,  1709,  2923,
    2961,  3603,   830,  2223,  3499,  1352,   899,  1710,   816,  1791,
    1803,   373,  3501,  3356,   543,   544,   532,  2917,  3184,  3520,
    3436,  1626,   533,  3618,  1712,  2742,   516,  3123,  2946,   373,
    3260,  3330,   763,  2027,  1190,  2927,   549,  2578,  1612,  1277,
     557,  3336,  1713,   765,  2556,   855,  2065,   468,  1383,  1775,
    1617,  3045,   747,  3210,     0,   372,  1194,     0,     0,   534,
    1346,     0,     0,     0,     0,   372,     0,   372,     0,     0,
       0,  1718,     0,     0,   468,     0,  1132,  1133,  1134,  1135,
    1136,     0,     0,  3044,     0,     0,   372,     0,     0,     0,
       0,   843,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   468,     0,     0,     0,     0,     0,   468,     0,     0,
       0,     0,     0,   864,     0,   468,   468,     0,   372,     0,
     876,     0,   557,   372,     0,     0,     0,     0,     0,     0,
       0,   373,   893,     0,     0,     0,   898,     0,   372,     0,
       0,   903,   373,     0,   373,  1721,   557,   468,  1137,     0,
       0,     0,  1722,     0,     0,     0,     0,     0,     0,     0,
     834,   834,     0,   834,     0,     0,     0,     0,     0,   535,
       0,     0,     0,     0,     0,     0,     0,     0,   372,     0,
     950,  1138,  1139,  1140,  1141,     0,   536,     0,     0,     0,
       0,   834,   537,     0,     0,     0,     0,     0,   538,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   372,     0,     0,     0,  1723,  3208,
       0,     0,   539,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1724,   540,   541,     0,     0,     0,     0,   372,
     834,   372,   834,   834,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1705,  1706,     0,   542,
       0,     0,     0,     0,  1142,     0,  1143,  1144,  1145,     0,
       0,   372,  1726,     0,  1727,     0,  1146,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1708,
       0,     0,     0,     0,     0,  1728,  1729,     0,  1730,     0,
    1709,     0,  3612,   543,   544,     0,     0,     0,     0,  1710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1097,   557,  1100,  1712,     0,     0,     0,
       0,   372,  3612,     0,  1732,     0,   372,   372,  1147,     0,
       0,  1277,     0,     0,  1713,     0,     0,     0,     0,     0,
     372,     0,     0,     0,     0,     0,     0,   468,     0,     0,
       0,     0,     0,     0,     0,   557,   468,     0,     0,     0,
     468,     0,     0,  1718,     0,     0,  3600,   468,     0,     0,
       0,     0,     0,     0,     0,  1148,  1149,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3320,     0,
       0,     0,     0,     0,     0,     0,     0,   557,     0,     0,
     372,     0,     0,     0,  3624,  1733,     0,     0,     0,     0,
       0,     0,     0,     0,  1734,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1721,     0,     0,
       0,     0,     0,     0,  1722,     0,     0,     0,     0,     0,
       0,     0,  1276,   372,     0,     0,     0,     0,     0,     0,
     557,     0,     0,   468,     0,     0,  1296,   468,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1150,   372,
       0,     0,     0,  3320,     0,  3320,   372,     0,   468,  1151,
    1152,  1354,     0,     0,     0,     0,     0,     0,     0,     0,
    1723,     0,   468,     0,     0,     0,     0,   468,     0,     0,
     372,     0,     0,     0,  1724,     0,     0,   372,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   372,     0,   372,
       0,   372,     1,     0,  1384,  3424,  1387,     0,   468,     0,
       0,     0,     2,     3,   372,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1726,     4,  1727,     5,     0,     0,
     372,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1430,  3320,  3320,     6,     7,  1728,  1729,     0,
    1730,     8,     0,     0,     0,     9,    10,     0,     0,     0,
       0,   372,     0,  3322,     0,     0,     0,     0,    11,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    12,  1430,     0,  1732,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3320,     0,  3320,     0,
       0,  3320,    13,     0,   372,     0,     0,     0,     0,     0,
       0,    14,    15,    16,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    17,    18,     0,     0,     0,  3320,
       0,     0,     0,     0,     0,     0,     0,     0,   372,  3320,
       0,     0,  1533,   372,  3320,     0,     0,    19,     0,     0,
       0,     0,  3320,     0,     0,     0,     0,     0,  3320,     0,
       0,     0,     0,    20,     0,     0,     0,  1733,  3322,     0,
    3322,  3320,     0,     0,     0,     0,  1734,     0,     0,     0,
     372,     0,  3320,     0,     0,   372,     0,     0,    21,     0,
       0,  3320,     0,   372,     0,    22,     0,     0,    23,     0,
       0,  3320,     0,  3320,     0,     0,     0,     0,     0,     0,
       0,     0,   557,     0,   372,     0,  1590,     0,   372,    24,
       0,     0,  3320,     0,   372,     0,     0,     0,     0,   468,
     557,     0,     0,    25,     0,   372,     0,     0,  3320,   468,
     468,     0,  3320,     0,     0,     0,     0,     0,     0,     0,
    1618,    26,     0,  3320,   372,     0,    27,     0,  1627,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3322,  3322,
       0,     0,   373,   373,   468,   468,     0,     0,     0,     0,
       0,     0,   373,     0,   557,     0,     0,     0,     0,     0,
     373,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     468,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3322,     0,  3322,     0,     0,  3322,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     468,     0,     0,     0,  3322,     0,     0,     0,     0,     0,
       0,    29,     0,     0,  3322,     0,     0,     0,    30,  3322,
       0,     0,     0,     0,     0,     0,     0,  3322,     0,     0,
       0,     0,     0,  3322,     0,     0,     0,     0,    31,     0,
      32,    33,     0,     0,    34,     0,  3322,    35,   557,    36,
     557,   373,   468,     0,    37,     0,    38,  3322,     0,     0,
       0,     0,   898,     0,  1794,    39,  3322,     0,   557,    40,
       0,     0,     0,   557,     0,    41,  3322,     0,  3322,   468,
      42,  1806,     0,     0,    43,     0,  1811,  1811,     0,  1811,
       0,     0,     0,     0,     0,     0,     0,  3322,     0,     0,
       0,     0,     0,    44,     0,     0,     0,    45,     0,     0,
       0,     0,     0,  3322,     0,     0,     0,  3322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3322,     0,
       0,     0,     0,     0,     0,     2,     3,     0,     0,     0,
       0,    46,     0,     0,     0,     0,     0,     0,     4,     0,
       0,     0,     0,     0,     0,     0,     0,    47,     0,     0,
      48,     0,     0,     0,    49,     0,     0,     0,     6,     7,
       0,     0,     0,     0,     8,     0,     0,     0,     9,    10,
       0,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,    11,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    12,     0,    51,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,    14,    15,    16,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    17,    18,     0,
       0,     0,   557,     0,  1987,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   468,     0,     0,     0,
       0,    21,   557,   557,   468,   468,     0,     0,    22,     0,
       0,    23,  1811,  1811,  1811,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2790,  2791,
    2068,     0,    24,     0,  2792,     0,  2793,  2794,  2795,  2079,
       0,     0,     0,     0,     0,     0,    25,     0,     0,     0,
       0,     0,  2796,     0,     0,     0,  2087,     0,     0,     0,
       0,   468,     0,     0,    26,     0,     0,     0,     0,    27,
       0,     0,     0,  2097,     0,     0,     0,     0,     0,   468,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2797,     0,     0,  2798,     0,     0,     0,     0,     0,
       0,     0,  2799,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2800,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2181,  2801,     0,
       0,   557,     0,     0,     0,     0,     0,     0,  2186,     0,
       0,     0,     0,    28,     0,     0,     0,     0,  2802,     0,
    2803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,  2804,
    2805,    30,     0,     0,   468,     0,     0,  2237,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,    32,    33,     0,     0,    34,     0,     0,
      35,     0,    36,     0,     0,     0,     0,    37,     0,    38,
       0,  2806,     0,     0,     0,     0,     0,     0,    39,     0,
       0,     0,    40,     0,     0,     0,     0,     0,    41,   557,
       0,     0,     0,    42,     0,     0,   557,    43,  2807,     0,
       0,     0,     0,     0,     0,     0,     0,  2808,  2809,  2284,
    2810,     0,     0,     0,     0,     0,    44,     0,     0,     0,
      45,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2811,  2812,
    2813,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,  1430,     0,     0,  2814,  2815,
    2816,     0,     0,     0,  2817,     0,     0,  2818,     0,     0,
      47,     0,     0,    48,     0,     0,     0,    49,     0,     0,
    2819,  2820,     0,     0,     0,     0,     0,     0,     0,     0,
     781,     0,   743,   782,     0,     0,     0,     0,     0,     0,
      50,     0,     0,     0,  2821,     0,  2822,     0,     0,     0,
       0,     0,     0,     0,   783,   784,     0,     0,     0,     0,
       0,    51,     0,     0,   785,     0,   786,     0,  2823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   787,   788,     0,     0,     0,     0,     0,
       0,     0,   789,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2371,     0,     0,     0,     0,
       0,  2824,     0,  2825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2826,     0,     0,     0,     0,     0,     0,
       0,     0,  2391,     0,     0,     0,     0,     0,     0, -1327,
     790,     0,     0,     0,   791,     0,     0,     0,     0,     0,
    2413,  2415,     0,     0,     0,     0,     0,   557,     0,   557,
     557,     0,     0,     0,  2827,  2828,     0,     0,  2829,  2830,
    2831,  2832,     0,   792,     0,   793,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1703,     0,   794,     0,     0,
     795,     0,  1704,  1533,     0,     0,     0,     0,     0,     0,
       0,     0,  1705,  1706,     0,     0,   557,   557,     0,     0,
    2833,  2834,     0,   796,   797,     0,  2181,   798,     0,     0,
       0,     0,  2181,     0,     0,  2181,     0,     0,  2181,  2835,
       0,  1707,   799,     0,     0,  1708,     0,     0,     0,  2181,
    2181,     0,   557,     0,     0,     0,  1709,     0,  2181,     0,
       0,     0,     0,   800,     0,  1710,     0,   468,   801,   557,
    1711,     0,     0,  2181,  2535,     0,     0,     0,     0,     0,
       0,     0,  1712,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   802,     0,     0,     0,     0,  1277,     0,     0,
    1713,     0,     0,     0,     0,     0,     0,     0,     0,  1714,
       0,     0,     0,     0,     0,  1716,     0,     0,     0,   468,
    2181,     0,     0,  1717,   803,     0,     0,     0,     0,  1718,
    2572,     0,     0,   804,     0,     0,     0,     0,     0,     0,
       0,  1806,     0,   950,   557,   557,   557,     0,     0,     0,
     805,     0,     0,     0,  1719,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,   807,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1721,     0,     0,     0,     0,     0,     0,
    1722,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   809,     0,     0,     0,     0,
       0,     0,  2684,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1753,     0,     0,     0,   810,
     468,     0,     0,     0,   557,     0,  1723,  1533,     0,     0,
       0,     0,   811,     0,     0,     0,     0,     0,     0,     0,
    1724,   557,   557,   557,     0,  1725,     0,     0,     0,     0,
     557,     0,     0,     0,     0,     0,     0,  2723,     0,     0,
       0,     0,     0,  2725,     0,  2727,     0,     0,     0,     0,
       0,   557,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1687, -1753,     0,     0,     0,   812,
    1726,     0,  1727,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1728,  1729,     0,  1730,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1731,  2181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   557,     0,     0,  2181,     0,     0,     0,     0,
       0,     0,  1732,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   468,     0,     0,     0,
       0,     0,     0,  2788,     0,     0,   468,     0,     0,     0,
    2844,  2845,     0,     0,  2848,     0,     0,  2851,     0,     0,
       0,     0,     0,     0,     0,   468,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1733,     0,     0,     0,     0,     0,     0,
       0,     0,  1734,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   709,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2391,  2928,     0,   557,     0,   900,     0,     0,
       0,     0,     0,   557,     0,     0,     0,     0,     0,     0,
       0,  2371,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   557,     0,     0,     0,     0,     0,     0,     0,  2068,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1533,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2181,     0,
       0,     0,     0,     0,     0,  2181,     0,     0,     0,     0,
       0,     0,     0,     0,  2181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   468,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2572,
       0,  3056,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     557,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1090,     0,     0,     0,  1096,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2413,     0,     0,     0,     0,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   557,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3056,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   557,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3198,     0,  3199,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1305,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   557,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3268,     0,     0,     0,     0,
    3056,  3056,     0,     0,     0,     0,     0,  1391,  1392,  1393,
       0,     0,     0,     0,  3285,     0,  1408,  1409,     0,     0,
    1412,     0,  1414,  1415,  1416,  1417,     0,     0,     0,     0,
    1422,     0,     0,  1424,  1425,     0,  1426,     0,  1427,  1428,
       0,  1431,  1432,  1433,  1434,  1435,     0,     0,     0,  1438,
       0,  1440,  1441,  1442,     0,  1444,  1445,  1446,  1447,     0,
    1449,  1450,     0,  1456,     0,     0,  1460,  1461,  1462,     0,
    1464,  1465,  1466,  1467,  3056,  1469,  1470,  1471,  1472,     0,
       0,     0,     0,     0,  1479,  1480,     0,  1483,  1484,  1485,
    1486,  1487,     0,     0,     0,     0,  1491,     0,  1492,  1493,
    1494,  1495,  1496,     0,     0,  1499,  1501,  1502,  1503,  1504,
    1505,     0,  1507,  1508,     0,     0,  1511,  1512,  1513,     0,
    1516,     0,  1517,     0,     0,     0,  1520,  2186,  1524,  1525,
       0,     0,     0,     0,  1528,     0,     0,     0,     0,     0,
       0,     0,  1535,  1536,  1537,     0,     0,     0,     0,     0,
       0,     0,  1541,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3394,     0,     0,     0,     0,     0,     0,
    3404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1533,     0,     0,     0,     0,     0,
       0,   468,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3268,     0,  3268,     0,  3441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3448,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3456,     0,  1625,     0,     0,     0,
       0,     0,     0,     0,     0,  1640,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3476,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1533,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3524,     0,     0,     0,     0,  3533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3566,     0,     0,     0,     0,  3573,
       0,     0,     0,     0,  1796,     0,     0,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   557,     0,
       0,     0,  1533,     0,     0,     0,     0,     0,  3613,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1533,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3613,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1960,  1962,  1964,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1986,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2013,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2029,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2187,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2256,     0,     0,  2257,     0,     0,
    2259,  2260,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2275,     0,     0,  2278,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2285,
       0,  2286,     0,     0,     0,  2289,     0,  2290,  2291,     0,
       0,     0,  2294,     0,  2295,  2296,     0,  2297,     0,     0,
    2298,     0,  2299,  2300,     0,     0,     0,     0,  2304,  2305,
       0,     0,  2307,     0,  2308,     0,  2309,     0,  2310,     0,
    2312,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2317,  2318,     0,     0,  2319,     0,  2320,     0,     0,
       0,     0,     0,     0,     0,  2321,  2322,     0,  2323,     0,
    2324,     0,     0,  2325,  2326,  2327,     0,  2328,     0,     0,
       0,     0,  2331,  2332,  2333,  2334,     0,     0,     0,     0,
    2336,  2337,  2338,     0,  2339,     0,  2341,     0,  2343,     0,
    2345,     0,  2346,     0,     0,     0,     0,     0,     0,  2348,
       0,  2349,     0,     0,  2352,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2585,     0,     0,     0,
    2588,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2659,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2670,     0,  2672,     0,  2674,
       0,     0,     0,     0,     0,  2680,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2687,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2732,     0,     0,     0,  2736,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2767,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2770,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2886,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2890,     0,     0,     0,     0,     0,  2891,     0,
       0,     0,     0,     0,     0,     0,     0,  2895,  2896,     0,
       0,     0,     0,  2897,     0,     0,     0,  2898,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2902,     0,     0,     0,     0,     0,  2904,     0,     0,  2905,
    2906,     0,  2907,  2908,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2913,  2914,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2947,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3136,  3137,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2767,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3237,     0,     0,     0,     0,     0,  3239,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3241,     0,     0,     0,     0,     0,     0,     0,  2767,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2732,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3350,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3363,     0,
    3365,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3423,     0,     0,     0,     0,
       0,     0,  2767,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3458,     0,     0,     0,     0,
    3459,     0,  3461,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3481,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3495,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3508,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   122,     0,   563,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   564,
    3537,   565,   130,   131,   566,   133,     0,   134,   567,   135,
       0,   568,   136,   569,   570,   571,   137,   572,     0,   138,
     139,  1521,   140,     0,   141,   142,     0,  3562,   143,   573,
     144,     0,   145,   574,   575,   147,     0,   148,   149,   150,
     576,   151,     0,   577,   153,     0,   154,   155,   156,   157,
     158,   578,   579,   159,     0,     0,   160,     0,   580,     0,
     581,   582,   583,     0,     0,   162,   584,   585,     0,   586,
     587,     0,   163,   164,   588,   589,   590,  3614,     0,     0,
       0,   591,   167,   592,     0,     0,   593,   594,   168,     0,
     169,     0,     0,     0,   595,   596,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   597,   178,     0,   598,   599,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   600,     0,
     187,   601,   188,   602,   603,   189,     0,   604,   190,   191,
     192,   605,     0,   193,     0,     0,   606,     0,   194,   195,
       0,   607,   196,     0,   197,   608,   609,   610,   611,     0,
     612,   613,   199,   614,   615,   616,   201,     0,     0,   202,
     617,     0,   618,   619,     0,   203,   204,     0,   205,   620,
       0,   206,     0,     0,     0,   621,   208,   209,   210,   622,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   623,
     214,   624,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   625,   219,     0,  1522,
     626,   220,     0,   627,   221,     0,     0,     0,   628,     0,
     629,     0,   223,   630,     0,   224,     0,   225,   631,     0,
       0,   632,     0,     0,     0,     0,   633,   226,   227,   228,
     229,   230,   231,   634,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   635,   241,   242,   243,   636,   244,   245,
       0,     0,     0,   246,   247,   637,   249,     0,     0,   638,
     251,   639,   640,   252,     0,   253,   641,   642,   643,   644,
     645,   646,   647,   258,   259,   260,   261,     0,   648,   262,
     263,     0,   264,   265,   266,   649,   650,   651,   267,     0,
     652,   653,     0,   268,   269,   654,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   655,   656,   277,   657,   658,   659,   660,   661,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   662,
     286,   287,   288,   289,   290,   291,   292,   663,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   664,   665,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   666,   307,   308,   667,   309,
     310,   668,   311,   669,   313,   314,     0,   670,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   671,   672,   333,   334,     0,
     335,   673,   337,   674,   675,   676,   338,   339,   677,   340,
     341,     0,   342,   343,     0,   678,   344,   679,   680,   681,
     682,     0,     0,     0,     0,  1523,   349,     0,   350,   683,
     684,   685,   352,   353,   354,     0,   686,   355,   356,   687,
       0,   357,     0,     0,   688,   689,   358,     0,     0,   359,
       0,     0,   690,   361,     0,     0,   691,   692,   693,   694,
     695,   362,     0,     0,   363,   696,     0,   364,   365,   697,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   698,
       0,   699,     0,     0,     0,     0,   700,     0,     0,     0,
     701,   702,     0,     0,     0,     0,   703,     0,   704,     0,
       0,   705,   706,     0,   707,   708,   122,     0,   563,   124,
     125,   126,   127,  2728,     0,     0,     0,     0,   128,     0,
       0,   564,     0,   565,   130,   131,   566,   133,     0,   134,
     567,   135,     0,  2729,   136,   569,   570,   571,   137,   572,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   573,   144,     0,   145,   574,   575,   147,     0,   148,
     149,   150,   576,   151,     0,   577,   153,     0,   154,   155,
     156,   157,   158,   578,   579,   159,     0,     0,   160,     0,
     580,     0,   581,   582,   583,     0,     0,   162,   584,   585,
       0,   586,   587,     0,   163,   164,   588,   589,   590,     0,
       0,     0,     0,   591,   167,   592,     0,     0,   593,  2730,
     168,     0,   169,     0,     0,     0,   595,   596,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   597,   178,     0,   598,   599,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     600,     0,   187,   601,   188,   602,   603,   189,     0,   604,
     190,   191,   192,   605,     0,   193,     0,     0,   606,     0,
     194,   195,     0,   607,   196,     0,   197,   608,   609,   610,
     611,     0,   612,   613,   199,   614,   615,   616,   201,     0,
       0,   202,   617,     0,   618,   619,     0,   203,   204,     0,
     205,   620,     0,   206,     0,     0,     0,   621,   208,   209,
     210,   622,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   623,   214,   624,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   625,   219,
       0,     0,   626,   220,     0,   627,   221,     0,     0,     0,
     628,     0,   629,     0,   223,   630,     0,   224,     0,   225,
     631,     0,     0,   632,     0,     0,     0,     0,   633,   226,
     227,   228,   229,   230,   231,   634,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   635,   241,   242,   243,   636,
     244,   245,     0,     0,     0,   246,   247,   637,   249,     0,
       0,   638,   251,   639,   640,   252,     0,   253,   641,   642,
     643,   644,   645,   646,   647,   258,   259,   260,   261,     0,
     648,   262,   263,     0,   264,   265,   266,   649,   650,   651,
     267,     0,   652,   653,     0,   268,   269,   654,  2731,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   655,   656,   277,   657,   658,   659,
     660,   661,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   662,   286,   287,   288,   289,   290,   291,   292,   663,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   664,   665,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   666,   307,   308,
     667,   309,   310,   668,   311,   669,   313,   314,     0,   670,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   671,   672,   333,
     334,     0,   335,   673,   337,   674,   675,   676,   338,   339,
     677,   340,   341,     0,   342,   343,     0,   678,   344,   679,
     680,   681,   682,     0,     0,     0,     0,     0,   349,     0,
     350,   683,   684,   685,   352,   353,   354,     0,   686,   355,
     356,   687,     0,   357,     0,     0,   688,   689,   358,     0,
       0,   359,     0,     0,   690,   361,     0,     0,   691,   692,
     693,   694,   695,   362,     0,     0,   363,   696,     0,   364,
     365,   697,     0,     0,     0,     0,   367,     0,   368,   369,
       0,   698,     0,   699,     0,     0,     0,     0,   700,     0,
       0,     0,   701,   702,     0,     0,     0,     0,   703,     0,
     704,     0,     0,   705,   706,     0,   707,   708,   122,     0,
     563,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   564,     0,   565,   130,   131,   566,   133,
       0,   134,   567,   135,     0,   568,   136,   569,   570,   571,
     137,   572,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   573,   144,     0,   145,   574,   575,   147,
       0,   148,   149,   150,   576,   151,     0,   577,   153,     0,
     154,   155,   156,   157,   158,   578,   579,   159,     0,     0,
     160,     0,   580,     0,   581,   582,   583,     0,     0,   162,
     584,   585,     0,   586,   587,     0,   163,   164,   588,   589,
     590,     0,     0,     0,     0,   591,   167,   592,     0,     0,
     593,   594,   168,     0,   169,     0,     0,     0,   595,   596,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   597,   178,     0,   598,
     599,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   600,     0,   187,   601,   188,   602,   603,   189,
       0,   604,   190,   191,   192,   605,     0,   193,     0,     0,
     606,     0,   194,   195,     0,   607,   196,     0,   197,   608,
     609,   610,   611,     0,   612,   613,   199,   614,   615,   616,
     201,     0,     0,   202,   617,     0,   618,   619,     0,   203,
     204,     0,   205,   620,     0,   206,     0,     0,     0,   621,
     208,   209,   210,   622,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   623,   214,   624,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     625,   219,     0,     0,   626,   220,     0,   627,   221,     0,
       0,     0,   628,     0,   629,     0,   223,   630,     0,   224,
       0,   225,   631,     0,     0,   632,     0,     0,     0,     0,
     633,   226,   227,   228,   229,   230,   231,   634,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   635,   241,   242,
     243,   636,   244,   245,     0,     0,     0,   246,   247,   637,
     249,     0,     0,   638,   251,   639,   640,   252,     0,   253,
     641,   642,   643,   644,   645,   646,   647,   258,   259,   260,
     261,     0,   648,   262,   263,     0,   264,   265,   266,   649,
     650,   651,   267,     0,   652,   653,     0,   268,   269,   654,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   655,   656,   277,   657,
     658,   659,   660,   661,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   662,   286,   287,   288,   289,   290,   291,
     292,   663,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   664,   665,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   666,
     307,   308,   667,   309,   310,   668,   311,   669,   313,   314,
       0,   670,   316,  1095,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   671,
     672,   333,   334,     0,   335,   673,   337,   674,   675,   676,
     338,   339,   677,   340,   341,     0,   342,   343,     0,   678,
     344,   679,   680,   681,   682,     0,     0,     0,     0,     0,
     349,     0,   350,   683,   684,   685,   352,   353,   354,     0,
     686,   355,   356,   687,     0,   357,     0,     0,   688,   689,
     358,     0,     0,   359,     0,     0,   690,   361,     0,     0,
     691,   692,   693,   694,   695,   362,     0,     0,   363,   696,
       0,   364,   365,   697,     0,     0,     0,     0,   367,     0,
     368,   369,     0,   698,     0,   699,     0,     0,     0,     0,
     700,     0,     0,     0,   701,   702,     0,     0,     0,     0,
     703,     0,   704,     0,     0,   705,   706,     0,   707,   708,
     122,     0,   563,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   564,     0,   565,   130,   131,
     566,   133,     0,   134,   567,   135,     0,   568,   136,   569,
     570,   571,   137,   572,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   573,   144,     0,   145,   574,
     575,   147,     0,   148,   149,   150,   576,   151,     0,   577,
     153,     0,   154,   155,   156,   157,   158,   578,   579,   159,
       0,     0,   160,     0,   580,     0,   581,   582,   583,     0,
       0,   162,   584,   585,     0,   586,   587,     0,   163,   164,
     588,   589,   590,     0,     0,     0,     0,   591,   167,   592,
       0,     0,   593,   594,   168,     0,   169,     0,     0,     0,
     595,   596,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   597,   178,
       0,   598,   599,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   600,     0,   187,   601,   188,   602,
     603,   189,     0,   604,   190,   191,   192,   605,     0,   193,
       0,     0,   606,     0,   194,   195,     0,   607,   196,     0,
     197,   608,   609,   610,   611,     0,   612,   613,   199,   614,
     615,   616,   201,     0,     0,   202,   617,     0,   618,   619,
       0,   203,   204,     0,   205,   620,     0,   206,     0,     0,
       0,   621,   208,   209,   210,   622,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   623,   214,   624,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   625,   219,     0,     0,   626,   220,     0,   627,
     221,     0,     0,     0,   628,     0,   629,     0,   223,   630,
       0,   224,     0,   225,   631,     0,     0,   632,     0,     0,
       0,     0,   633,   226,   227,   228,   229,   230,   231,   634,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   635,
     241,   242,   243,   636,   244,   245,     0,     0,     0,   246,
     247,   637,   249,     0,     0,   638,   251,   639,   640,   252,
       0,   253,   641,   642,   643,   644,   645,   646,   647,   258,
     259,   260,   261,     0,   648,   262,   263,     0,   264,   265,
     266,   649,   650,   651,   267,     0,   652,   653,     0,   268,
     269,   654,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   655,   656,
     277,   657,   658,   659,   660,   661,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   662,   286,   287,   288,   289,
     290,   291,   292,   663,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   664,
     665,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   666,   307,   308,   667,   309,   310,   668,   311,   669,
     313,   314,     0,   670,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   671,   672,   333,   334,     0,   335,   673,   337,   674,
     675,   676,   338,   339,   677,   340,   341,     0,   342,   343,
       0,   678,   344,   679,   680,   681,   682,     0,     0,     0,
       0,     0,   349,     0,   350,   683,   684,   685,   352,   353,
     354,     0,   686,   355,   356,   687,     0,   357,     0,     0,
     688,   689,   358,     0,     0,   359,     0,     0,   690,   361,
       0,     0,   691,   692,   693,   694,   695,   362,     0,     0,
     363,   696,     0,   364,   365,   697,     0,     0,     0,     0,
     367,     0,   368,   369,     0,   698,     0,   699,     0,     0,
       0,     0,   700,     0,     0,     0,   701,   702,     0,     0,
       0,     0,   703,     0,   704,  1421,     0,   705,   706,     0,
     707,   708,   122,     0,   563,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   564,     0,   565,
     130,   131,   566,   133,     0,   134,   567,   135,     0,   568,
     136,   569,   570,   571,   137,   572,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   573,   144,     0,
     145,   574,   575,   147,     0,   148,   149,   150,   576,   151,
       0,   577,   153,     0,   154,   155,   156,   157,   158,   578,
     579,   159,     0,     0,   160,     0,   580,     0,   581,   582,
     583,     0,     0,   162,   584,   585,     0,   586,   587,     0,
     163,   164,   588,   589,   590,     0,     0,     0,     0,   591,
     167,   592,     0,     0,   593,   594,   168,     0,   169,     0,
       0,     0,   595,   596,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     597,   178,     0,   598,   599,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   600,     0,   187,   601,
     188,   602,   603,   189,     0,   604,   190,   191,   192,   605,
       0,   193,     0,     0,   606,     0,   194,   195,     0,   607,
     196,     0,   197,   608,   609,   610,   611,     0,   612,   613,
     199,   614,   615,   616,   201,     0,     0,   202,   617,     0,
     618,   619,     0,   203,   204,     0,   205,   620,     0,   206,
       0,     0,     0,   621,   208,   209,   210,   622,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   623,   214,   624,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   625,   219,     0,     0,   626,   220,
       0,   627,   221,     0,     0,     0,   628,     0,   629,     0,
     223,   630,     0,   224,     0,   225,   631,     0,     0,   632,
       0,     0,     0,     0,   633,   226,   227,   228,   229,   230,
     231,   634,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   635,   241,   242,   243,   636,   244,   245,     0,     0,
       0,   246,   247,   637,   249,     0,     0,   638,   251,   639,
     640,   252,     0,   253,   641,   642,   643,   644,   645,   646,
     647,   258,   259,   260,   261,     0,   648,   262,   263,     0,
     264,   265,   266,   649,   650,   651,   267,     0,   652,   653,
       0,   268,   269,   654,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     655,   656,   277,   657,   658,   659,   660,   661,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   662,   286,   287,
     288,   289,   290,   291,   292,   663,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   664,   665,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   666,   307,   308,   667,   309,   310,   668,
     311,   669,   313,   314,     0,   670,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   671,   672,   333,   334,     0,   335,   673,
     337,   674,   675,   676,   338,   339,   677,   340,   341,     0,
     342,   343,     0,   678,   344,   679,   680,   681,   682,     0,
       0,     0,     0,     0,   349,     0,   350,   683,   684,   685,
     352,   353,   354,     0,   686,   355,   356,   687,     0,   357,
       0,     0,   688,   689,   358,     0,     0,   359,     0,     0,
     690,   361,     0,     0,   691,   692,   693,   694,   695,   362,
       0,     0,   363,   696,     0,   364,   365,   697,     0,     0,
       0,     0,   367,     0,   368,   369,     0,   698,     0,   699,
       0,     0,     0,     0,   700,     0,     0,     0,   701,   702,
       0,     0,     0,     0,   703,     0,   704,  1463,     0,   705,
     706,     0,   707,   708,   122,     0,   563,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   564,
       0,   565,   130,   131,   566,   133,     0,   134,   567,   135,
       0,   568,   136,   569,   570,   571,   137,   572,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   573,
     144,     0,   145,   574,   575,   147,     0,   148,   149,   150,
     576,   151,     0,   577,   153,     0,   154,   155,   156,   157,
     158,   578,   579,   159,     0,     0,   160,     0,   580,     0,
     581,   582,   583,     0,     0,   162,   584,   585,     0,   586,
     587,     0,   163,   164,   588,   589,   590,     0,     0,     0,
       0,   591,   167,   592,     0,     0,   593,   594,   168,     0,
     169,     0,     0,     0,   595,   596,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   597,   178,     0,   598,   599,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   600,     0,
     187,   601,   188,   602,   603,   189,     0,   604,   190,   191,
     192,   605,     0,   193,     0,     0,   606,     0,   194,   195,
       0,   607,   196,     0,   197,   608,   609,   610,   611,     0,
     612,   613,   199,   614,   615,   616,   201,     0,     0,   202,
     617,     0,   618,   619,     0,   203,   204,     0,   205,   620,
       0,   206,     0,     0,     0,   621,   208,   209,   210,   622,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   623,
     214,   624,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   625,   219,     0,     0,
     626,   220,     0,   627,   221,     0,     0,     0,   628,     0,
     629,     0,   223,   630,     0,   224,     0,   225,   631,     0,
       0,   632,     0,     0,     0,     0,   633,   226,   227,   228,
     229,   230,   231,   634,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   635,   241,   242,   243,   636,   244,   245,
       0,     0,     0,   246,   247,   637,   249,     0,     0,   638,
     251,   639,   640,   252,     0,   253,   641,   642,   643,   644,
     645,   646,   647,   258,   259,   260,   261,     0,   648,   262,
     263,     0,   264,   265,   266,   649,   650,   651,   267,     0,
     652,   653,     0,   268,   269,   654,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   655,   656,   277,   657,   658,   659,   660,   661,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   662,
     286,   287,   288,   289,   290,   291,   292,   663,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   664,   665,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   666,   307,   308,   667,   309,
     310,   668,   311,   669,   313,   314,     0,   670,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   671,   672,   333,   334,     0,
     335,   673,   337,   674,   675,   676,   338,   339,   677,   340,
     341,     0,   342,   343,     0,   678,   344,   679,   680,   681,
     682,     0,     0,     0,     0,     0,   349,     0,   350,   683,
     684,   685,   352,   353,   354,     0,   686,   355,   356,   687,
       0,   357,     0,     0,   688,   689,   358,     0,     0,   359,
       0,     0,   690,   361,     0,     0,   691,   692,   693,   694,
     695,   362,     0,     0,   363,   696,     0,   364,   365,   697,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   698,
       0,   699,     0,     0,     0,     0,   700,     0,     0,     0,
     701,   702,     0,     0,     0,     0,   703,     0,   704,  1500,
       0,   705,   706,     0,   707,   708,   122,     0,   563,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   564,     0,   565,   130,   131,   566,   133,     0,   134,
     567,   135,     0,   568,   136,   569,   570,   571,   137,   572,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   573,   144,     0,   145,   574,   575,   147,     0,   148,
     149,   150,   576,   151,     0,   577,   153,     0,   154,   155,
     156,   157,   158,   578,   579,   159,     0,     0,   160,     0,
     580,     0,   581,   582,   583,     0,     0,   162,   584,   585,
       0,   586,   587,     0,   163,   164,   588,   589,   590,     0,
       0,     0,     0,   591,   167,   592,     0,     0,   593,   594,
     168,     0,   169,     0,     0,     0,   595,   596,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   597,   178,     0,   598,   599,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     600,     0,   187,   601,   188,   602,   603,   189,     0,   604,
     190,   191,   192,   605,     0,   193,     0,     0,   606,     0,
     194,   195,     0,   607,   196,     0,   197,   608,   609,   610,
     611,     0,   612,   613,   199,   614,   615,   616,   201,     0,
       0,   202,   617,     0,   618,   619,     0,   203,   204,     0,
     205,   620,     0,   206,     0,     0,     0,   621,   208,   209,
     210,   622,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   623,   214,   624,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   625,   219,
       0,     0,   626,   220,     0,   627,   221,     0,     0,     0,
     628,     0,   629,     0,   223,   630,     0,   224,     0,   225,
     631,     0,     0,   632,     0,     0,     0,     0,   633,   226,
     227,   228,   229,   230,   231,   634,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   635,   241,   242,   243,   636,
     244,   245,     0,     0,     0,   246,   247,   637,   249,     0,
       0,   638,   251,   639,   640,   252,     0,   253,   641,   642,
     643,   644,   645,   646,   647,   258,   259,   260,   261,     0,
     648,   262,   263,     0,   264,   265,   266,   649,   650,   651,
     267,     0,   652,   653,     0,   268,   269,   654,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   655,   656,   277,   657,   658,   659,
     660,   661,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   662,   286,   287,   288,   289,   290,   291,   292,   663,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   664,   665,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   666,   307,   308,
     667,   309,   310,   668,   311,   669,   313,   314,     0,   670,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   671,   672,   333,
     334,     0,   335,   673,   337,   674,   675,   676,   338,   339,
     677,   340,   341,     0,   342,   343,     0,   678,   344,   679,
     680,   681,   682,     0,     0,     0,     0,     0,   349,     0,
     350,   683,   684,   685,   352,   353,   354,     0,   686,   355,
     356,   687,     0,   357,     0,     0,   688,   689,   358,     0,
       0,   359,     0,     0,   690,   361,     0,     0,   691,   692,
     693,   694,   695,   362,     0,     0,   363,   696,     0,   364,
     365,   697,     0,     0,     0,     0,   367,     0,   368,   369,
       0,   698,     0,   699,     0,     0,     0,     0,   700,     0,
       0,     0,   701,   702,     0,     0,     0,     0,   703,     0,
     704,  1527,     0,   705,   706,     0,   707,   708,   122,     0,
     563,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   564,     0,   565,   130,   131,   566,   133,
       0,   134,   567,   135,     0,   568,   136,   569,   570,   571,
     137,   572,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   573,   144,     0,   145,   574,   575,   147,
       0,   148,   149,   150,   576,   151,     0,   577,   153,     0,
     154,   155,   156,   157,   158,   578,   579,   159,     0,     0,
     160,     0,   580,     0,   581,   582,   583,     0,     0,   162,
     584,   585,     0,   586,   587,     0,   163,   164,   588,   589,
     590,     0,     0,     0,     0,   591,   167,   592,     0,     0,
     593,   594,   168,     0,   169,     0,     0,     0,   595,   596,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   597,   178,     0,   598,
     599,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   600,     0,   187,   601,   188,   602,   603,   189,
       0,   604,   190,   191,   192,   605,     0,   193,     0,     0,
     606,     0,   194,   195,  1959,   607,   196,     0,   197,   608,
     609,   610,   611,     0,   612,   613,   199,   614,   615,   616,
     201,     0,     0,   202,   617,     0,   618,   619,     0,   203,
     204,     0,   205,   620,     0,   206,     0,     0,     0,   621,
     208,   209,   210,   622,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   623,   214,   624,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     625,   219,     0,     0,   626,   220,     0,   627,   221,     0,
       0,     0,   628,     0,   629,     0,   223,   630,     0,   224,
       0,   225,   631,     0,     0,   632,     0,     0,     0,     0,
     633,   226,   227,   228,   229,   230,   231,   634,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   635,   241,   242,
     243,   636,   244,   245,     0,     0,     0,   246,   247,   637,
     249,     0,     0,   638,   251,   639,   640,   252,     0,   253,
     641,   642,   643,   644,   645,   646,   647,   258,   259,   260,
     261,     0,   648,   262,   263,     0,   264,   265,   266,   649,
     650,   651,   267,     0,   652,   653,     0,   268,   269,   654,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   655,   656,   277,   657,
     658,   659,   660,   661,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   662,   286,   287,   288,   289,   290,   291,
     292,   663,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   664,   665,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   666,
     307,   308,   667,   309,   310,   668,   311,   669,   313,   314,
       0,   670,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   671,
     672,   333,   334,     0,   335,   673,   337,   674,   675,   676,
     338,   339,   677,   340,   341,     0,   342,   343,     0,   678,
     344,   679,   680,   681,   682,     0,     0,     0,     0,     0,
     349,     0,   350,   683,   684,   685,   352,   353,   354,     0,
     686,   355,   356,   687,     0,   357,     0,     0,   688,   689,
     358,     0,     0,   359,     0,     0,   690,   361,     0,     0,
     691,   692,   693,   694,   695,   362,     0,     0,   363,   696,
       0,   364,   365,   697,     0,     0,     0,     0,   367,     0,
     368,   369,     0,   698,     0,   699,     0,     0,     0,     0,
     700,     0,     0,     0,   701,   702,     0,     0,     0,     0,
     703,     0,   704,     0,     0,   705,   706,     0,   707,   708,
     122,     0,   563,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   564,     0,   565,   130,   131,
     566,   133,     0,   134,   567,   135,     0,   568,   136,   569,
     570,   571,   137,   572,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   573,   144,     0,   145,   574,
     575,   147,     0,   148,   149,   150,   576,   151,     0,   577,
     153,     0,   154,   155,   156,   157,   158,   578,   579,   159,
       0,     0,   160,     0,   580,     0,   581,   582,   583,     0,
       0,   162,   584,   585,     0,   586,   587,     0,   163,   164,
     588,   589,   590,     0,     0,     0,     0,   591,   167,   592,
       0,     0,   593,   594,   168,     0,   169,     0,     0,     0,
     595,   596,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   597,   178,
       0,   598,   599,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   600,     0,   187,   601,   188,   602,
     603,   189,     0,   604,   190,   191,   192,   605,     0,   193,
       0,     0,   606,     0,   194,   195,  1961,   607,   196,     0,
     197,   608,   609,   610,   611,     0,   612,   613,   199,   614,
     615,   616,   201,     0,     0,   202,   617,     0,   618,   619,
       0,   203,   204,     0,   205,   620,     0,   206,     0,     0,
       0,   621,   208,   209,   210,   622,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   623,   214,   624,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   625,   219,     0,     0,   626,   220,     0,   627,
     221,     0,     0,     0,   628,     0,   629,     0,   223,   630,
       0,   224,     0,   225,   631,     0,     0,   632,     0,     0,
       0,     0,   633,   226,   227,   228,   229,   230,   231,   634,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   635,
     241,   242,   243,   636,   244,   245,     0,     0,     0,   246,
     247,   637,   249,     0,     0,   638,   251,   639,   640,   252,
       0,   253,   641,   642,   643,   644,   645,   646,   647,   258,
     259,   260,   261,     0,   648,   262,   263,     0,   264,   265,
     266,   649,   650,   651,   267,     0,   652,   653,     0,   268,
     269,   654,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   655,   656,
     277,   657,   658,   659,   660,   661,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   662,   286,   287,   288,   289,
     290,   291,   292,   663,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   664,
     665,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   666,   307,   308,   667,   309,   310,   668,   311,   669,
     313,   314,     0,   670,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   671,   672,   333,   334,     0,   335,   673,   337,   674,
     675,   676,   338,   339,   677,   340,   341,     0,   342,   343,
       0,   678,   344,   679,   680,   681,   682,     0,     0,     0,
       0,     0,   349,     0,   350,   683,   684,   685,   352,   353,
     354,     0,   686,   355,   356,   687,     0,   357,     0,     0,
     688,   689,   358,     0,     0,   359,     0,     0,   690,   361,
       0,     0,   691,   692,   693,   694,   695,   362,     0,     0,
     363,   696,     0,   364,   365,   697,     0,     0,     0,     0,
     367,     0,   368,   369,     0,   698,     0,   699,     0,     0,
       0,     0,   700,     0,     0,     0,   701,   702,     0,     0,
       0,     0,   703,     0,   704,     0,     0,   705,   706,     0,
     707,   708,   122,     0,   563,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   564,     0,   565,
     130,   131,   566,   133,     0,   134,   567,   135,     0,   568,
     136,   569,   570,   571,   137,   572,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   573,   144,     0,
     145,   574,   575,   147,     0,   148,   149,   150,   576,   151,
       0,   577,   153,     0,   154,   155,   156,   157,   158,   578,
     579,   159,     0,     0,   160,     0,   580,     0,   581,   582,
     583,     0,     0,   162,   584,   585,     0,   586,   587,     0,
     163,   164,   588,   589,   590,     0,     0,     0,     0,   591,
     167,   592,     0,     0,   593,   594,   168,     0,   169,     0,
       0,     0,   595,   596,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     597,   178,     0,   598,   599,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   600,     0,   187,   601,
     188,   602,   603,   189,     0,   604,   190,   191,   192,   605,
       0,   193,     0,     0,   606,     0,   194,   195,  1963,   607,
     196,     0,   197,   608,   609,   610,   611,     0,   612,   613,
     199,   614,   615,   616,   201,     0,     0,   202,   617,     0,
     618,   619,     0,   203,   204,     0,   205,   620,     0,   206,
       0,     0,     0,   621,   208,   209,   210,   622,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   623,   214,   624,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   625,   219,     0,     0,   626,   220,
       0,   627,   221,     0,     0,     0,   628,     0,   629,     0,
     223,   630,     0,   224,     0,   225,   631,     0,     0,   632,
       0,     0,     0,     0,   633,   226,   227,   228,   229,   230,
     231,   634,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   635,   241,   242,   243,   636,   244,   245,     0,     0,
       0,   246,   247,   637,   249,     0,     0,   638,   251,   639,
     640,   252,     0,   253,   641,   642,   643,   644,   645,   646,
     647,   258,   259,   260,   261,     0,   648,   262,   263,     0,
     264,   265,   266,   649,   650,   651,   267,     0,   652,   653,
       0,   268,   269,   654,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     655,   656,   277,   657,   658,   659,   660,   661,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   662,   286,   287,
     288,   289,   290,   291,   292,   663,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   664,   665,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   666,   307,   308,   667,   309,   310,   668,
     311,   669,   313,   314,     0,   670,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   671,   672,   333,   334,     0,   335,   673,
     337,   674,   675,   676,   338,   339,   677,   340,   341,     0,
     342,   343,     0,   678,   344,   679,   680,   681,   682,     0,
       0,     0,     0,     0,   349,     0,   350,   683,   684,   685,
     352,   353,   354,     0,   686,   355,   356,   687,     0,   357,
       0,     0,   688,   689,   358,     0,     0,   359,     0,     0,
     690,   361,     0,     0,   691,   692,   693,   694,   695,   362,
       0,     0,   363,   696,     0,   364,   365,   697,     0,     0,
       0,     0,   367,     0,   368,   369,     0,   698,     0,   699,
       0,     0,     0,     0,   700,     0,     0,     0,   701,   702,
       0,     0,     0,     0,   703,     0,   704,     0,     0,   705,
     706,     0,   707,   708,   122,     0,   563,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   564,
       0,   565,   130,   131,   566,   133,     0,   134,   567,   135,
       0,   568,   136,   569,   570,   571,   137,   572,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   573,
     144,     0,   145,   574,   575,   147,     0,   148,   149,   150,
     576,   151,     0,   577,   153,     0,   154,   155,   156,   157,
     158,   578,   579,   159,     0,     0,   160,     0,   580,     0,
     581,   582,   583,     0,     0,   162,   584,   585,     0,   586,
     587,     0,   163,   164,   588,   589,   590,     0,     0,     0,
       0,   591,   167,   592,     0,     0,   593,   594,   168,     0,
     169,     0,     0,     0,   595,   596,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   597,   178,     0,   598,   599,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   600,     0,
     187,   601,   188,   602,   603,   189,     0,   604,   190,   191,
     192,   605,     0,   193,     0,     0,   606,     0,   194,   195,
       0,   607,   196,     0,   197,   608,   609,   610,   611,     0,
     612,   613,   199,   614,   615,   616,   201,     0,     0,   202,
     617,     0,   618,   619,     0,   203,   204,     0,   205,   620,
       0,   206,     0,     0,     0,   621,   208,   209,   210,   622,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   623,
     214,   624,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   625,   219,     0,     0,
     626,   220,     0,   627,   221,     0,     0,     0,   628,     0,
     629,     0,   223,   630,     0,   224,     0,   225,   631,     0,
       0,   632,     0,     0,     0,     0,   633,   226,   227,   228,
     229,   230,   231,   634,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   635,   241,   242,   243,   636,   244,   245,
       0,     0,     0,   246,   247,   637,   249,     0,     0,   638,
     251,   639,   640,   252,     0,   253,   641,   642,   643,   644,
     645,   646,   647,   258,   259,   260,   261,     0,   648,   262,
     263,     0,   264,   265,   266,   649,   650,   651,   267,     0,
     652,   653,     0,   268,   269,   654,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   655,   656,   277,   657,   658,   659,   660,   661,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   662,
     286,   287,   288,   289,   290,   291,   292,   663,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   664,   665,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   666,   307,   308,   667,   309,
     310,   668,   311,   669,   313,   314,     0,   670,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   671,   672,   333,   334,     0,
     335,   673,   337,   674,   675,   676,   338,   339,   677,   340,
     341,     0,   342,   343,     0,   678,   344,   679,   680,   681,
     682,     0,     0,     0,     0,     0,   349,     0,   350,   683,
     684,   685,   352,   353,   354,     0,   686,   355,   356,   687,
       0,   357,     0,     0,   688,   689,   358,     0,     0,   359,
       0,     0,   690,   361,     0,     0,   691,   692,   693,   694,
     695,   362,     0,     0,   363,   696,     0,   364,   365,   697,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   698,
       0,   699,     0,     0,     0,     0,   700,     0,     0,     0,
     701,   702,     0,     0,     0,     0,   703,     0,   704,     0,
       0,   705,   706,     0,   707,   708,   122,     0,   563,   124,
     125,   126,   127,  1557,     0,     0,     0,     0,  1558,     0,
       0,   564,     0,   565,   130,   131,   566,   133,     0,   134,
     567,   135,     0,   568,   136,   569,   570,   571,   137,   572,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,   573,   144,     0,   145,   574,   575,   147,     0,   148,
     149,   150,   576,   151,     0,   577,   153,     0,   154,   155,
     156,   157,   158,   578,   579,   159,     0,     0,   160,     0,
     580,     0,   581,   582,   583,     0,     0,   162,   584,   585,
       0,   586,   587,     0,   163,   164,   588,   589,   590,     0,
       0,     0,     0,   591,   167,   592,     0,     0,   593,   594,
     168,     0,   169,     0,     0,     0,   595,   596,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,   597,   178,     0,   598,   599,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
     600,     0,   187,   601,   188,   602,   603,   189,     0,   604,
     190,   191,   192,   605,     0,   193,     0,     0,   606,     0,
     194,   195,     0,   607,   196,     0,   197,   608,   609,   610,
     611,     0,   612,   613,   199,   614,   615,   616,   201,     0,
       0,   202,   617,     0,   618,   619,     0,   203,   204,     0,
     205,   620,     0,   206,     0,     0,     0,   621,   208,   209,
     210,   622,     0,   211,   212,     0,     0,     0,   213,     0,
       0,   623,   214,   624,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,   625,   219,
       0,     0,   626,   220,     0,   627,   221,     0,     0,     0,
     628,     0,   629,     0,   223,   630,     0,   224,     0,   225,
     631,     0,     0,   632,     0,     0,     0,     0,   633,   226,
     227,   228,   229,   230,   231,   634,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   635,   241,   242,   243,   636,
     244,   245,     0,     0,     0,   246,   247,   637,   249,     0,
       0,   638,   251,   639,   640,   252,     0,   253,   641,   642,
     643,   644,   645,   646,   647,   258,   259,   260,   261,     0,
     648,   262,   263,     0,   264,   265,   266,   649,     0,   651,
     267,     0,   652,   653,     0,   268,   269,   654,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   655,   656,   277,   657,   658,   659,
     660,   661,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   662,   286,   287,   288,   289,   290,   291,   292,   663,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,   664,   665,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,   666,   307,   308,
     667,   309,   310,   668,   311,   669,   313,   314,     0,   670,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,   671,   672,   333,
     334,     0,   335,   673,   337,   674,   675,   676,   338,   339,
     677,   340,   341,     0,   342,   343,     0,   678,   344,   679,
     680,   681,   682,     0,     0,     0,     0,     0,   349,     0,
     350,   683,   684,   685,   352,   353,   354,     0,   686,   355,
     356,   687,     0,   357,     0,     0,   688,   689,   358,     0,
       0,   359,     0,     0,   690,   361,     0,     0,   691,   692,
     693,   694,   695,   362,     0,     0,   363,   696,     0,   364,
     365,   697,     0,     0,     0,     0,   367,     0,   368,   369,
       0,   698,     0,   699,     0,     0,     0,     0,   700,     0,
       0,     0,   701,   702,     0,     0,     0,     0,   703,     0,
     704,     0,     0,   705,   706,     0,   707,   708,   122,     0,
     563,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,   564,     0,   565,   130,   131,   566,   133,
       0,   134,   567,   135,     0,   568,   136,   569,   570,   571,
     137,   572,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,   573,   144,     0,   145,   574,   575,   147,
       0,   148,   149,   150,   576,   151,     0,   577,   153,     0,
     154,   155,   156,   157,   158,   578,   579,   159,     0,     0,
     160,     0,   580,     0,   581,   582,   583,     0,     0,   162,
     584,   585,     0,   586,   587,     0,   163,   164,   588,   589,
     590,     0,     0,     0,     0,   591,   167,   592,     0,     0,
     593,   594,   168,     0,   169,     0,     0,     0,   595,   596,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,   597,   178,     0,   598,
     599,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,   600,     0,   187,   601,   188,   602,   603,   189,
       0,   604,   190,   191,   192,   605,     0,   193,     0,     0,
     606,     0,   194,   195,     0,   607,   196,     0,   197,   608,
     609,   610,   611,     0,   612,   613,   199,   614,   615,   616,
     201,     0,     0,   202,   617,     0,   618,   619,     0,   203,
     204,     0,   205,   620,     0,   206,     0,     0,     0,   621,
     208,   209,   210,   622,     0,   211,   212,     0,     0,     0,
     213,     0,     0,   623,   214,  2255,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
     625,   219,     0,     0,   626,   220,     0,   627,   221,     0,
       0,     0,   628,     0,   629,     0,   223,   630,     0,   224,
       0,   225,   631,     0,     0,   632,     0,     0,     0,     0,
     633,   226,   227,   228,   229,   230,   231,   634,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   635,   241,   242,
     243,   636,   244,   245,     0,     0,     0,   246,   247,   637,
     249,     0,     0,   638,   251,   639,   640,   252,     0,   253,
     641,   642,   643,   644,   645,   646,   647,   258,   259,   260,
     261,     0,   648,   262,   263,     0,   264,   265,   266,   649,
     650,   651,   267,     0,   652,   653,     0,   268,   269,   654,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   655,   656,   277,   657,
     658,   659,   660,   661,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   662,   286,   287,   288,   289,   290,   291,
     292,   663,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,   664,   665,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,   666,
     307,   308,   667,   309,   310,   668,   311,   669,   313,   314,
       0,   670,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,   671,
     672,   333,   334,     0,   335,   673,   337,   674,   675,   676,
     338,   339,   677,   340,   341,     0,   342,   343,     0,   678,
     344,   679,   680,   681,   682,     0,     0,     0,     0,     0,
     349,     0,   350,   683,   684,   685,   352,   353,   354,     0,
     686,   355,   356,   687,     0,   357,     0,     0,   688,   689,
     358,     0,     0,   359,     0,     0,   690,   361,     0,     0,
     691,   692,   693,   694,   695,   362,     0,     0,   363,   696,
       0,   364,   365,   697,     0,     0,     0,     0,   367,     0,
     368,   369,     0,   698,     0,   699,     0,     0,     0,     0,
     700,     0,     0,     0,   701,   702,     0,     0,     0,     0,
     703,     0,   704,     0,     0,   705,   706,     0,   707,   708,
     122,     0,   563,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   564,     0,   565,   130,   131,
     566,   133,     0,   134,   567,   135,     0,   568,   136,   569,
     570,   571,   137,   572,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,   573,   144,     0,   145,   574,
     575,   147,     0,   148,   149,   150,   576,   151,     0,   577,
     153,     0,   154,   155,   156,   157,   158,   578,   579,   159,
       0,     0,   160,     0,   580,     0,   581,   582,   583,     0,
       0,   162,   584,   585,     0,   586,   587,     0,   163,   164,
     588,   589,   590,     0,     0,     0,     0,   591,   167,   592,
       0,     0,   593,   594,   168,     0,   169,     0,     0,     0,
     595,   596,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,   597,   178,
       0,   598,   599,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,   600,     0,   187,   601,   188,   602,
     603,   189,     0,   604,   190,   191,   192,   605,     0,   193,
       0,     0,   606,     0,   194,   195,     0,   607,   196,     0,
     197,   608,   609,   610,   611,     0,   612,   613,   199,   614,
     615,   616,   201,     0,     0,   202,   617,     0,   618,   619,
       0,   203,   204,     0,   205,   620,     0,   206,     0,     0,
       0,   621,   208,   209,   210,   622,     0,   211,   212,     0,
       0,     0,   213,     0,     0,   623,   214,  2330,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,   625,   219,     0,     0,   626,   220,     0,   627,
     221,     0,     0,     0,   628,     0,   629,     0,   223,   630,
       0,   224,     0,   225,   631,     0,     0,   632,     0,     0,
       0,     0,   633,   226,   227,   228,   229,   230,   231,   634,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   635,
     241,   242,   243,   636,   244,   245,     0,     0,     0,   246,
     247,   637,   249,     0,     0,   638,   251,   639,   640,   252,
       0,   253,   641,   642,   643,   644,   645,   646,   647,   258,
     259,   260,   261,     0,   648,   262,   263,     0,   264,   265,
     266,   649,   650,   651,   267,     0,   652,   653,     0,   268,
     269,   654,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   655,   656,
     277,   657,   658,   659,   660,   661,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   662,   286,   287,   288,   289,
     290,   291,   292,   663,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,   664,
     665,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,   666,   307,   308,   667,   309,   310,   668,   311,   669,
     313,   314,     0,   670,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,   671,   672,   333,   334,     0,   335,   673,   337,   674,
     675,   676,   338,   339,   677,   340,   341,     0,   342,   343,
       0,   678,   344,   679,   680,   681,   682,     0,     0,     0,
       0,     0,   349,     0,   350,   683,   684,   685,   352,   353,
     354,     0,   686,   355,   356,   687,     0,   357,     0,     0,
     688,   689,   358,     0,     0,   359,     0,     0,   690,   361,
       0,     0,   691,   692,   693,   694,   695,   362,     0,     0,
     363,   696,     0,   364,   365,   697,     0,     0,     0,     0,
     367,     0,   368,   369,     0,   698,     0,   699,     0,     0,
       0,     0,   700,     0,     0,     0,   701,   702,     0,     0,
       0,     0,   703,     0,   704,     0,     0,   705,   706,     0,
     707,   708,   122,     0,   563,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   564,     0,   565,
     130,   131,   566,   133,     0,   134,   567,   135,     0,   568,
     136,   569,   570,   571,   137,   572,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,   573,   144,     0,
     145,   574,   575,   147,     0,   148,   149,   150,   576,   151,
       0,   577,   153,     0,   154,   155,   156,   157,   158,   578,
     579,   159,     0,     0,   160,     0,   580,     0,   581,   582,
     583,     0,     0,   162,   584,   585,     0,   586,   587,     0,
     163,   164,   588,   589,   590,     0,     0,     0,     0,   591,
     167,   592,     0,     0,   593,  2872,   168,     0,   169,     0,
       0,     0,   595,   596,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
     597,   178,     0,   598,   599,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,   600,     0,   187,   601,
     188,   602,   603,   189,     0,   604,   190,   191,   192,   605,
       0,   193,     0,     0,   606,     0,   194,   195,     0,   607,
     196,     0,   197,   608,   609,   610,   611,     0,   612,   613,
     199,   614,   615,   616,   201,     0,     0,   202,   617,     0,
     618,   619,     0,   203,   204,     0,   205,   620,     0,   206,
       0,     0,     0,   621,   208,   209,   210,   622,     0,   211,
     212,     0,     0,     0,   213,     0,     0,   623,   214,   624,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,   625,   219,     0,     0,   626,   220,
       0,   627,   221,     0,     0,     0,   628,     0,   629,     0,
     223,   630,     0,   224,     0,   225,   631,     0,     0,   632,
       0,     0,     0,     0,   633,   226,   227,   228,   229,   230,
     231,   634,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   635,   241,   242,   243,   636,   244,   245,     0,     0,
       0,   246,   247,   637,   249,     0,     0,   638,   251,   639,
     640,   252,     0,   253,   641,   642,   643,   644,   645,   646,
     647,   258,   259,   260,   261,     0,   648,   262,   263,     0,
     264,   265,   266,   649,   650,   651,   267,     0,   652,   653,
       0,   268,   269,   654,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     655,   656,   277,   657,   658,   659,   660,   661,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   662,   286,   287,
     288,   289,   290,   291,   292,   663,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,   664,   665,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,   666,   307,   308,   667,   309,   310,   668,
     311,   669,   313,   314,     0,   670,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,   671,   672,   333,   334,     0,   335,   673,
     337,   674,   675,   676,   338,   339,   677,   340,   341,     0,
     342,   343,     0,   678,   344,   679,   680,   681,   682,     0,
       0,     0,     0,     0,   349,     0,   350,   683,   684,   685,
     352,   353,   354,     0,   686,   355,   356,   687,     0,   357,
       0,     0,   688,   689,   358,     0,     0,   359,     0,     0,
     690,   361,     0,     0,   691,   692,   693,   694,   695,   362,
       0,     0,   363,   696,     0,   364,   365,   697,     0,     0,
       0,     0,   367,     0,   368,   369,     0,   698,     0,   699,
       0,     0,     0,     0,   700,     0,     0,     0,   701,   702,
       0,     0,     0,     0,   703,     0,   704,     0,     0,   705,
     706,     0,   707,   708,   122,     0,   563,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   564,
       0,   565,   130,   131,   566,   133,     0,   134,   567,   135,
       0,   568,   136,   569,   570,   571,   137,   572,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,   573,
     144,     0,   145,   574,   575,   147,     0,   148,   149,   150,
     576,   151,     0,   577,   153,     0,   154,   155,   156,   157,
     158,   578,   579,   159,     0,     0,   160,     0,   580,     0,
     581,   582,   583,     0,     0,   162,   584,   585,     0,   586,
     587,     0,   163,   164,   588,   589,   590,     0,     0,     0,
       0,   591,   167,   592,     0,     0,   593,   594,   168,     0,
     169,     0,     0,     0,   595,   596,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,   597,   178,     0,   598,   599,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,   600,     0,
     187,   601,   188,   602,   603,   189,     0,   604,   190,   191,
     192,   605,     0,   193,     0,     0,   606,     0,   194,   195,
       0,   607,   196,     0,   197,   608,   609,   610,   611,     0,
     612,   613,   199,   614,   615,   616,   201,     0,     0,   202,
     617,     0,   618,   619,     0,   203,   204,     0,   205,   620,
       0,   206,     0,     0,     0,   621,   208,   209,   210,   622,
       0,   211,   212,     0,     0,     0,   213,     0,     0,   623,
     214,   624,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,   625,   219,     0,     0,
     626,   220,     0,   627,   221,     0,     0,     0,   628,     0,
     629,     0,   223,   630,     0,   224,     0,   225,   631,     0,
       0,   632,     0,     0,     0,     0,   633,   226,   227,   228,
     229,   230,   231,   634,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   635,   241,   242,   243,   636,   244,   245,
       0,     0,     0,   246,   247,   637,   249,     0,     0,   638,
     251,   639,   640,   252,     0,   253,   641,   642,   643,   644,
     645,   646,   647,   258,   259,   260,   261,     0,   648,   262,
     263,     0,   264,   265,   266,   649,     0,   651,   267,     0,
     652,   653,     0,   268,   269,   654,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   655,   656,   277,   657,   658,   659,   660,   661,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   662,
     286,   287,   288,   289,   290,   291,   292,   663,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,   664,   665,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,   666,   307,   308,   667,   309,
     310,   668,   311,   669,   313,   314,     0,   670,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,   671,   672,   333,   334,     0,
     335,   673,   337,   674,   675,   676,   338,   339,   677,   340,
     341,     0,   342,   343,     0,   678,   344,   679,   680,   681,
     682,     0,     0,     0,     0,     0,   349,     0,   350,   683,
     684,   685,   352,   353,   354,     0,   686,   355,   356,   687,
       0,   357,     0,     0,   688,   689,   358,     0,     0,   359,
       0,     0,   690,   361,     0,     0,   691,   692,   693,   694,
     695,   362,     0,     0,   363,   696,     0,   364,   365,   697,
       0,     0,     0,     0,   367,     0,   368,   369,     0,   698,
       0,   699,     0,     0,     0,     0,   700,     0,     0,     0,
     701,   702,     0,     0,     0,     0,   703,     0,   704,     0,
       0,   705,   706,     0,   707,   708,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,  2129,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,  2130,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,  1298,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,  1299,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,     0,  2558,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,  2041,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
    2131,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,     0,   370,     0,   122,     0,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,  2177,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,  2129,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,  2130,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,  1298,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,  1299,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,  2131,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,     0,   370,     0,   122,     0,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,  2177,   134,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,  2041,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,     0,     0,   367,     0,   368,   369,     0,     0,
       0,   370,     0,   122,     0,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,  2385,
       0,   130,   131,   132,   133,   708,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,     0,
     370,     0,     0,     0,     0,     0,     0,   122,     0,   123,
     124,   125,   126,   127,     0,     0,     0,     0,  3580,   128,
       0,     0,   129,  3581,   708,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,  1183,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,     0,   370,     0,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,   409,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,     0,   370,     0,   122,     0,   123,   124,   125,
     126,   127,     0,     0,  1809,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,   409,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,     0,   370,     0,     0,     0,     0,     0,     0,   122,
       0,   123,   124,   125,   126,   127,     0,     0,     0,  2176,
       0,   128,     0,     0,   129,     0,  2177,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,     0,   370,     0,     0,     0,
       0,     0,     0,   122,     0,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,  3581,
     708,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,     0,
     370,     0,   122,     0,   123,   124,   125,   126,   127,     0,
       0,     0,     0,     0,   128,     0,     0,   129,     0,     0,
     130,   131,   132,   133,   409,   134,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,   141,   142,     0,     0,   143,     0,   144,     0,
     145,   146,     0,   147,     0,   148,   149,   150,     0,   151,
       0,   152,   153,     0,   154,   155,   156,   157,   158,     0,
       0,   159,     0,     0,   160,     0,   161,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
     167,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,   174,     0,     0,   175,   176,   177,     0,     0,
       0,   178,     0,     0,     0,   179,   180,   181,   182,     0,
       0,   183,     0,   184,   185,   186,     0,     0,   187,     0,
     465,     0,     0,   189,     0,     0,   190,   191,   192,     0,
       0,   193,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,     0,     0,   202,     0,     0,
       0,     0,     0,   203,   204,     0,   205,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,     0,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,     0,     0,     0,
       0,     0,     0,   218,     0,   219,     0,     0,     0,   220,
       0,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,   267,     0,     0,     0,
       0,   268,   269,   270,     0,   271,   272,   273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,   280,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,   299,
     300,     0,     0,   301,     0,   302,   303,   304,     0,   305,
     306,     0,     0,     0,   307,   308,     0,   309,   310,     0,
     311,   312,   313,   314,     0,   315,   316,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
     322,   323,   324,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,   331,   332,     0,     0,   333,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,   351,
     352,   353,   354,     0,     0,   355,   356,     0,     0,   357,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
       0,     0,   367,     0,   368,   369,     0,     0,     0,   370,
       0,   122,     0,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,   409,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,     0,   370,     0,
     122,     0,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,   129,     0,     0,   130,   131,
     132,   133,   708,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,     0,   360,   361,
       0,     0,     0,     0,     0,     0,     0,   362,     0,     0,
     363,     0,     0,   364,   365,   366,     0,     0,     0,     0,
     367,     0,   368,   369,     0,     0,     0,   370,     0,   122,
       0,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,  2177,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
     554,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
     555,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,  1098,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   554,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   555,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,  2426,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,   554,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   555,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,     0,     0,     0,   130,   131,   132,     0,     0,
    -193,  2716,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,     0,     0,     0,
       0,   143,     0,   144,     0,   145,     0,     0,     0,     0,
     148,   149,  3306,     0,   151,     0,   152,   153,     0,     0,
     155,     0,   157,   158,     0,     0,   159,     0,     0,   160,
       0,     0,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,     0,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,     0,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
       0,   180,   181,   182,     0,     0,   183,     0,   184,   185,
       0,     0,     0,   187,     0,   188,     0,     0,   189,  3307,
       0,   190,   191,   192,     0,     0,     0,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
    3308,     0,   202,     0,     0,     0,     0,     0,     0,   204,
       0,     0,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,  3309,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,  3310,     0,     0,     0,     0,  3311,     0,     0,
     219,     0,     0,     0,   220,  3312,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,  -193,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,     0,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,  3313,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,     0,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,     0,   300,  -193,     0,   301,     0,
       0,   303,     0,     0,   305,   306,  3314,     0,     0,     0,
     308,     0,   309,   310,     0,   311,   312,   313,     0,     0,
     315,     0,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,     0,   323,     0,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,     0,   332,     0,     0,
       0,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,     0,   352,   353,   354,     0,     0,
     355,   356,     0,     0,     0,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,  -193,     0,   367,     0,   368,
       0,     0,     0,     0,   370,     0,     0,     0,     0,  3315,
     122,     0,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,  3621,     0,   129,     0,     0,   130,   131,
     132,   133,     0,   134,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
     141,   142,     0,     0,   143,     0,   144,     0,   145,   146,
       0,   147,     0,   148,   149,   150,     0,   151,     0,   152,
     153,     0,   154,   155,   156,   157,   158,     0,     0,   159,
       0,     0,   160,     0,   161,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,   167,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
     174,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,   179,   180,   181,   182,     0,     0,   183,
       0,   184,   185,   186,     0,     0,   187,     0,   188,     0,
       0,   189,     0,     0,   190,   191,   192,     0,     0,   193,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,     0,     0,   202,     0,     0,     0,     0,
       0,   203,   204,     0,   205,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,     0,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,     0,     0,     0,     0,     0,
       0,   218,     0,   219,     0,     0,     0,   220,     0,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,   267,     0,     0,     0,     0,   268,
     269,   270,     0,   271,   272,   273,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,   280,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,   299,   300,     0,
       0,   301,     0,   302,   303,   304,     0,   305,   306,     0,
       0,     0,   307,   308,     0,   309,   310,     0,   311,   312,
     313,   314,     0,   315,   316,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,   322,   323,
     324,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,   331,
     332,     0,     0,   333,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,   351,   352,   353,
     354,     0,     0,   355,   356,     0,     0,   357,     0,     0,
       0,     0,   358,     0,     0,   359,     0,     0,   360,   361,
       0,     0,     0,     0,     0,     0,     0,   362,     0,     0,
     363,     0,     0,   364,   365,   366,     0,     0,     0,     0,
     367,     0,   368,   369,     0,     0,     0,   370,   122,     0,
     123,   124,   125,   126,   127,     0,     0,     0,  1793,     0,
     128,     0,     0,   129,     0,     0,   130,   131,   132,   133,
       0,   134,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,   141,   142,
       0,     0,   143,     0,   144,     0,   145,   146,     0,   147,
       0,   148,   149,   150,     0,   151,     0,   152,   153,     0,
     154,   155,   156,   157,   158,     0,     0,   159,     0,     0,
     160,     0,   161,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,   167,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,   174,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,   179,   180,   181,   182,     0,     0,   183,     0,   184,
     185,   186,     0,     0,   187,     0,   188,     0,     0,   189,
       0,     0,   190,   191,   192,     0,     0,   193,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,     0,     0,   202,     0,     0,     0,     0,     0,   203,
     204,     0,   205,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,     0,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,     0,     0,     0,     0,     0,     0,   218,
       0,   219,     0,     0,     0,   220,     0,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,   267,     0,     0,     0,     0,   268,   269,   270,
       0,   271,   272,   273,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,   280,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,   299,   300,     0,     0,   301,
       0,   302,   303,   304,     0,   305,   306,     0,     0,     0,
     307,   308,     0,   309,   310,     0,   311,   312,   313,   314,
       0,   315,   316,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,   322,   323,   324,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,   331,   332,     0,
       0,   333,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,   351,   352,   353,   354,     0,
       0,   355,   356,     0,     0,   357,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,   360,   361,     0,     0,
       0,     0,     0,     0,     0,   362,     0,     0,   363,     0,
       0,   364,   365,   366,     0,     0,     0,     0,   367,     0,
     368,   369,     0,     0,     0,   370,   122,     0,   123,   124,
     125,   126,   127,     0,     0,     0,  2414,     0,   128,     0,
       0,   129,     0,     0,   130,   131,   132,   133,     0,   134,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,   141,   142,     0,     0,
     143,     0,   144,     0,   145,   146,     0,   147,     0,   148,
     149,   150,     0,   151,     0,   152,   153,     0,   154,   155,
     156,   157,   158,     0,     0,   159,     0,     0,   160,     0,
     161,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,   167,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,   174,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,   179,
     180,   181,   182,     0,     0,   183,     0,   184,   185,   186,
       0,     0,   187,     0,   188,     0,     0,   189,     0,     0,
     190,   191,   192,     0,     0,   193,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,     0,
       0,   202,     0,     0,     0,     0,     0,   203,   204,     0,
     205,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,     0,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,     0,     0,     0,     0,     0,     0,   218,     0,   219,
       0,     0,     0,   220,     0,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
     267,     0,     0,     0,     0,   268,   269,   270,     0,   271,
     272,   273,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,   280,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,   299,   300,     0,     0,   301,     0,   302,
     303,   304,     0,   305,   306,     0,     0,     0,   307,   308,
       0,   309,   310,     0,   311,   312,   313,   314,     0,   315,
     316,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,   322,   323,   324,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,   331,   332,     0,     0,   333,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,   351,   352,   353,   354,     0,     0,   355,
     356,     0,     0,   357,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,     0,     0,   367,     0,   368,   369,
       0,     0,     0,   370,   122,     0,   123,   124,   125,   126,
     127,     0,     0,     0,  2580,     0,   128,     0,     0,   129,
       0,     0,   130,   131,   132,   133,     0,   134,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,   141,   142,     0,     0,   143,     0,
     144,     0,   145,   146,     0,   147,     0,   148,   149,   150,
       0,   151,     0,   152,   153,     0,   154,   155,   156,   157,
     158,     0,     0,   159,     0,     0,   160,     0,   161,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,   167,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,   174,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,   179,   180,   181,
     182,     0,     0,   183,     0,   184,   185,   186,     0,     0,
     187,     0,   188,     0,     0,   189,     0,     0,   190,   191,
     192,     0,     0,   193,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,     0,     0,   202,
       0,     0,     0,     0,     0,   203,   204,     0,   205,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,     0,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,     0,
       0,     0,     0,     0,     0,   218,     0,   219,     0,     0,
       0,   220,     0,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,   267,     0,
       0,     0,     0,   268,   269,   270,     0,   271,   272,   273,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,   280,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,   299,   300,     0,     0,   301,     0,   302,   303,   304,
       0,   305,   306,     0,     0,     0,   307,   308,     0,   309,
     310,     0,   311,   312,   313,   314,     0,   315,   316,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,   322,   323,   324,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,   331,   332,     0,     0,   333,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,   351,   352,   353,   354,     0,     0,   355,   356,     0,
       0,   357,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,     0,     0,   367,     0,   368,   369,     0,     0,
       0,   370,   122,     0,   123,   124,   125,   126,   127,     0,
       0,     0,  2937,     0,   128,     0,     0,     0,     0,     0,
     130,   131,   132,     0,     0,  -193,     0,   135,     0,     0,
     136,     0,     0,     0,   137,     0,     0,   138,   139,     0,
     140,     0,     0,     0,     0,     0,   143,     0,   144,     0,
     145,     0,     0,     0,     0,   148,   149,  3306,     0,   151,
       0,   152,   153,     0,     0,   155,     0,   157,   158,     0,
       0,   159,     0,     0,   160,     0,     0,     0,     0,     0,
       0,     0,     0,   162,     0,     0,     0,     0,     0,     0,
     163,   164,     0,     0,   165,     0,     0,     0,     0,   166,
       0,     0,     0,     0,     0,     0,   168,     0,   169,     0,
       0,     0,     0,     0,   170,     0,   171,   172,   173,     0,
       0,     0,     0,     0,     0,   175,   176,   177,     0,  -210,
       0,   178,     0,     0,     0,  -210,   180,   181,   182,     0,
       0,   183,     0,   184,   185,     0,     0,     0,   187,     0,
     188,     0,     0,   189,  3307,     0,   190,   191,   192,     0,
       0,     0,     0,     0,     0,     0,   194,   195,     0,     0,
     196,     0,   197,     0,     0,     0,     0,     0,     0,   198,
     199,     0,     0,   200,   201,  3308,     0,   202,     0,     0,
       0,     0,     0,     0,   204,     0,     0,     0,     0,   206,
       0,     0,     0,   207,   208,   209,   210,  3309,     0,   211,
     212,     0,     0,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,  3310,     0,     0,
       0,     0,  3311,     0,     0,   219,     0,     0,     0,   220,
    3312,     0,   221,     0,     0,     0,     0,     0,   222,     0,
     223,     0,     0,   224,     0,   225,     0,     0,     0,     0,
       0,  -193,     0,     0,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
     240,     0,   241,   242,   243,     0,   244,   245,     0,     0,
       0,   246,   247,   248,   249,     0,     0,   250,   251,     0,
       0,   252,     0,   253,     0,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,     0,     0,   262,   263,     0,
     264,   265,   266,     0,     0,     0,     0,     0,     0,     0,
       0,   268,   269,   270,     0,   271,   272,  3313,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,   277,     0,   278,     0,   279,     0,     0,     0,
     281,     0,   282,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,     0,     0,     0,   293,
     294,     0,     0,   295,   296,   297,     0,   298,     0,     0,
     300,  -193,     0,   301,     0,     0,   303,     0,     0,   305,
     306,  3314,     0,     0,     0,   308,     0,   309,   310,     0,
     311,   312,   313,     0,     0,   315,     0,     0,     0,     0,
     317,   318,   319,     0,     0,   320,     0,     0,     0,   321,
       0,   323,     0,     0,   325,   326,     0,     0,     0,     0,
       0,     0,   327,   328,     0,   329,     0,     0,   330,     0,
       0,     0,   332,     0,     0,     0,   334,     0,   335,   336,
     337,     0,     0,     0,   338,   339,     0,   340,   341,     0,
     342,   343,     0,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,   349,     0,   350,     0,     0,     0,
     352,   353,   354,     0,     0,   355,   356,     0,     0,     0,
       0,     0,     0,     0,   358,     0,     0,   359,     0,     0,
     360,   361,     0,     0,     0,     0,     0,     0,     0,   362,
       0,     0,   363,     0,     0,   364,   365,   366,     0,     0,
    -193,     0,   367,     0,   368,     0,     0,     0,     0,   370,
       0,     0,  -210,   122,  3315,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,     0,     0,
       0,   130,   131,   132,     0,     0,  -193,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,     0,     0,     0,     0,   143,     0,   144,
       0,   145,     0,     0,     0,     0,   148,   149,  3306,     0,
     151,     0,   152,   153,     0,     0,   155,     0,   157,   158,
       0,     0,   159,     0,     0,   160,     0,     0,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,     0,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,     0,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,  -217,   180,   181,   182,
       0,     0,   183,     0,   184,   185,     0,     0,     0,   187,
       0,   188,     0,     0,   189,  3307,     0,   190,   191,   192,
       0,     0,     0,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,  3308,     0,   202,     0,
       0,     0,     0,     0,     0,   204,     0,     0,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,  3309,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,  3310,     0,
       0,     0,     0,  3311,     0,     0,   219,     0,     0,     0,
     220,  3312,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,  -193,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,     0,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,  3313,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
       0,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
       0,   300,  -193,     0,   301,     0,     0,   303,     0,     0,
     305,   306,  3314,     0,     0,     0,   308,     0,   309,   310,
       0,   311,   312,   313,     0,     0,   315,     0,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,     0,   323,     0,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,     0,   332,     0,     0,     0,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
       0,   352,   353,   354,     0,     0,   355,   356,     0,     0,
       0,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,  -217,
       0,  -193,     0,   367,     0,   368,     0,     0,     0,     0,
     370,     0,     0,  -217,   122,  3315,   123,   124,   125,   126,
     127,     0,     0,     0,     0,     0,   128,     0,     0,     0,
       0,     0,   130,   131,   132,     0,     0,  -193,     0,   135,
       0,     0,   136,     0,     0,     0,   137,     0,     0,   138,
     139,     0,   140,     0,     0,     0,     0,     0,   143,     0,
     144,     0,   145,     0,     0,     0,     0,   148,   149,  3306,
       0,   151,     0,   152,   153,     0,     0,   155,     0,   157,
     158,     0,     0,   159,     0,     0,   160,     0,     0,     0,
       0,     0,     0,     0,     0,   162,     0,     0,     0,     0,
       0,     0,   163,   164,     0,     0,   165,     0,     0,     0,
       0,   166,     0,     0,     0,     0,     0,     0,   168,     0,
     169,     0,     0,     0,     0,     0,   170,     0,   171,   172,
     173,     0,     0,     0,     0,     0,     0,   175,   176,   177,
       0,     0,     0,   178,     0,     0,     0,  3491,   180,   181,
     182,     0,     0,   183,     0,   184,   185,     0,     0,     0,
     187,     0,   188,     0,     0,   189,  3307,     0,   190,   191,
     192,     0,     0,     0,     0,     0,     0,     0,   194,   195,
       0,     0,   196,     0,   197,     0,     0,     0,     0,     0,
       0,   198,   199,     0,     0,   200,   201,  3308,     0,   202,
       0,     0,     0,     0,     0,     0,   204,     0,     0,     0,
       0,   206,     0,     0,     0,   207,   208,   209,   210,  3309,
       0,   211,   212,     0,     0,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,  3310,
       0,     0,     0,     0,  3311,     0,     0,   219,     0,     0,
       0,   220,  3312,     0,   221,     0,     0,     0,     0,     0,
     222,     0,   223,     0,     0,   224,     0,   225,     0,     0,
       0,     0,     0,  -193,     0,     0,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,   234,   235,   236,   237,
     238,   239,   240,     0,   241,   242,   243,     0,   244,   245,
       0,     0,     0,   246,   247,   248,   249,     0,     0,   250,
     251,     0,     0,   252,     0,   253,     0,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,     0,     0,   262,
     263,     0,   264,   265,   266,     0,     0,     0,     0,     0,
       0,     0,     0,   268,   269,   270,     0,   271,   272,  3313,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,   277,     0,   278,     0,   279,     0,
       0,     0,   281,     0,   282,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   291,   292,     0,     0,     0,
       0,   293,   294,     0,     0,   295,   296,   297,     0,   298,
       0,     0,   300,  -193,     0,   301,     0,     0,   303,     0,
       0,   305,   306,  3314,     0,     0,     0,   308,     0,   309,
     310,     0,   311,   312,   313,     0,     0,   315,     0,     0,
       0,     0,   317,   318,   319,     0,     0,   320,     0,     0,
       0,   321,     0,   323,     0,     0,   325,   326,     0,     0,
       0,     0,     0,     0,   327,   328,     0,   329,     0,     0,
     330,     0,     0,     0,   332,     0,     0,     0,   334,     0,
     335,   336,   337,     0,     0,     0,   338,   339,     0,   340,
     341,     0,   342,   343,     0,     0,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,   349,     0,   350,     0,
       0,     0,   352,   353,   354,     0,     0,   355,   356,     0,
       0,     0,     0,     0,     0,     0,   358,     0,     0,   359,
       0,     0,   360,   361,     0,     0,     0,     0,     0,     0,
       0,   362,     0,     0,   363,     0,     0,   364,   365,   366,
       0,     0,  -193,     0,   367,     0,   368,     0,     0,     0,
       0,   370,     0,     0,     0,   122,  3315,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
       0,     0,     0,   130,   131,   132,     0,     0,  -193,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,     0,     0,     0,     0,   143,
       0,   144,     0,   145,     0,     0,     0,     0,   148,   149,
    3306,     0,   151,     0,   152,   153,     0,     0,   155,     0,
     157,   158,     0,     0,   159,     0,     0,   160,     0,     0,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,     0,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,     0,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,  3534,   180,
     181,   182,     0,     0,   183,     0,   184,   185,     0,     0,
       0,   187,     0,   188,     0,     0,   189,  3307,     0,   190,
     191,   192,     0,     0,     0,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,  3308,     0,
     202,     0,     0,     0,     0,     0,     0,   204,     0,     0,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
    3309,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
    3310,     0,     0,     0,     0,  3311,     0,     0,   219,     0,
       0,     0,   220,  3312,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,  -193,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,     0,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
    3313,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,     0,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,     0,   300,  -193,     0,   301,     0,     0,   303,
       0,     0,   305,   306,  3314,     0,     0,     0,   308,     0,
     309,   310,     0,   311,   312,   313,     0,     0,   315,     0,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,     0,   323,     0,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,     0,   332,     0,     0,     0,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,     0,   352,   353,   354,     0,     0,   355,   356,
       0,     0,     0,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,  -193,     0,   367,     0,   368,     0,     0,
       0,     0,   370,     0,     0,     0,   122,  3315,   123,   124,
     125,   126,   127,     0,     0,     0,     0,     0,   128,     0,
       0,     0,     0,     0,   130,   131,   132,     0,     0,  -193,
       0,   135,     0,     0,   136,     0,     0,     0,   137,     0,
       0,   138,   139,     0,   140,     0,     0,     0,     0,     0,
     143,     0,   144,     0,   145,     0,     0,     0,     0,   148,
     149,  3306,     0,   151,     0,   152,   153,     0,     0,   155,
       0,   157,   158,     0,     0,   159,     0,     0,   160,     0,
       0,     0,     0,     0,     0,     0,     0,   162,     0,     0,
       0,     0,     0,     0,   163,   164,     0,     0,   165,     0,
       0,     0,     0,   166,     0,     0,     0,     0,     0,     0,
     168,     0,   169,     0,     0,     0,     0,     0,   170,     0,
     171,   172,   173,     0,     0,     0,     0,     0,     0,   175,
     176,   177,     0,     0,     0,   178,     0,     0,     0,  3578,
     180,   181,   182,     0,     0,   183,     0,   184,   185,     0,
       0,     0,   187,     0,   188,     0,     0,   189,  3307,     0,
     190,   191,   192,     0,     0,     0,     0,     0,     0,     0,
     194,   195,     0,     0,   196,     0,   197,     0,     0,     0,
       0,     0,     0,   198,   199,     0,     0,   200,   201,  3308,
       0,   202,     0,     0,     0,     0,     0,     0,   204,     0,
       0,     0,     0,   206,     0,     0,     0,   207,   208,   209,
     210,  3309,     0,   211,   212,     0,     0,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,  3310,     0,     0,     0,     0,  3311,     0,     0,   219,
       0,     0,     0,   220,  3312,     0,   221,     0,     0,     0,
       0,     0,   222,     0,   223,     0,     0,   224,     0,   225,
       0,     0,     0,     0,     0,  -193,     0,     0,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,   234,   235,
     236,   237,   238,   239,   240,     0,   241,   242,   243,     0,
     244,   245,     0,     0,     0,   246,   247,   248,   249,     0,
       0,   250,   251,     0,     0,   252,     0,   253,     0,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,     0,
       0,   262,   263,     0,   264,   265,   266,     0,     0,     0,
       0,     0,     0,     0,     0,   268,   269,   270,     0,   271,
     272,  3313,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,   277,     0,   278,     0,
     279,     0,     0,     0,   281,     0,   282,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   291,   292,     0,
       0,     0,     0,   293,   294,     0,     0,   295,   296,   297,
       0,   298,     0,     0,   300,  -193,     0,   301,     0,     0,
     303,     0,     0,   305,   306,  3314,     0,     0,     0,   308,
       0,   309,   310,     0,   311,   312,   313,     0,     0,   315,
       0,     0,     0,     0,   317,   318,   319,     0,     0,   320,
       0,     0,     0,   321,     0,   323,     0,     0,   325,   326,
       0,     0,     0,     0,     0,     0,   327,   328,     0,   329,
       0,     0,   330,     0,     0,     0,   332,     0,     0,     0,
     334,     0,   335,   336,   337,     0,     0,     0,   338,   339,
       0,   340,   341,     0,   342,   343,     0,     0,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,   349,     0,
     350,     0,     0,     0,   352,   353,   354,     0,     0,   355,
     356,     0,     0,     0,     0,     0,     0,     0,   358,     0,
       0,   359,     0,     0,   360,   361,     0,     0,     0,     0,
       0,     0,     0,   362,     0,     0,   363,     0,     0,   364,
     365,   366,     0,     0,  -193,     0,   367,     0,   368,     0,
       0,     0,     0,   370,     0,     0,     0,   122,  3315,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,     0,     0,     0,   130,   131,   132,     0,     0,
    -193,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,     0,     0,     0,
       0,   143,     0,   144,     0,   145,     0,     0,     0,     0,
     148,   149,  3306,     0,   151,     0,   152,   153,     0,     0,
     155,     0,   157,   158,     0,     0,   159,     0,     0,   160,
       0,     0,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,     0,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,     0,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
    -214,   180,   181,   182,     0,     0,   183,     0,   184,   185,
       0,     0,     0,   187,     0,   188,     0,     0,   189,  3307,
       0,   190,   191,   192,     0,     0,     0,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
    3308,     0,   202,     0,     0,     0,     0,     0,     0,   204,
       0,     0,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,  3309,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,  3310,     0,     0,     0,     0,  3311,     0,     0,
     219,     0,     0,     0,   220,  3312,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,  -193,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,     0,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,  3313,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,     0,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,     0,   300,  -193,     0,   301,     0,
       0,   303,     0,     0,   305,   306,  3314,     0,     0,     0,
     308,     0,   309,   310,     0,   311,   312,   313,     0,     0,
     315,     0,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,     0,   323,     0,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,     0,   332,     0,     0,
       0,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,     0,   352,   353,   354,     0,     0,
     355,   356,     0,     0,     0,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,  -193,     0,   367,     0,   368,
       0,     0,     0,     0,   370,     0,     0,     0,   122,  3315,
     123,   124,   125,   126,   127,     0,     0,     0,     0,     0,
     128,     0,     0,     0,     0,     0,   130,   131,   132,     0,
       0,  -193,     0,   135,     0,     0,   136,     0,     0,     0,
     137,     0,     0,   138,   139,     0,   140,     0,     0,     0,
       0,     0,   143,     0,   144,     0,   145,     0,     0,     0,
       0,   148,   149,  3306,     0,   151,     0,   152,   153,     0,
       0,   155,     0,   157,   158,     0,     0,   159,     0,     0,
     160,     0,     0,     0,     0,     0,     0,     0,     0,   162,
       0,     0,     0,     0,     0,     0,   163,   164,     0,     0,
     165,     0,     0,     0,     0,   166,     0,     0,     0,     0,
       0,     0,   168,     0,   169,     0,     0,     0,     0,     0,
     170,     0,   171,   172,   173,     0,     0,     0,     0,     0,
       0,   175,   176,   177,     0,     0,     0,   178,     0,     0,
       0,  -220,   180,   181,   182,     0,     0,   183,     0,   184,
     185,     0,     0,     0,   187,     0,   188,     0,     0,   189,
    3307,     0,   190,   191,   192,     0,     0,     0,     0,     0,
       0,     0,   194,   195,     0,     0,   196,     0,   197,     0,
       0,     0,     0,     0,     0,   198,   199,     0,     0,   200,
     201,  3308,     0,   202,     0,     0,     0,     0,     0,     0,
     204,     0,     0,     0,     0,   206,     0,     0,     0,   207,
     208,   209,   210,  3309,     0,   211,   212,     0,     0,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,  3310,     0,     0,     0,     0,  3311,     0,
       0,   219,     0,     0,     0,   220,  3312,     0,   221,     0,
       0,     0,     0,     0,   222,     0,   223,     0,     0,   224,
       0,   225,     0,     0,     0,     0,     0,  -193,     0,     0,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
     234,   235,   236,   237,   238,   239,   240,     0,   241,   242,
     243,     0,   244,   245,     0,     0,     0,   246,   247,   248,
     249,     0,     0,   250,   251,     0,     0,   252,     0,   253,
       0,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,     0,     0,   262,   263,     0,   264,   265,   266,     0,
       0,     0,     0,     0,     0,     0,     0,   268,   269,   270,
       0,   271,   272,  3313,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,   277,     0,
     278,     0,   279,     0,     0,     0,   281,     0,   282,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,     0,     0,     0,   293,   294,     0,     0,   295,
     296,   297,     0,   298,     0,     0,   300,  -193,     0,   301,
       0,     0,   303,     0,     0,   305,   306,  3314,     0,     0,
       0,   308,     0,   309,   310,     0,   311,   312,   313,     0,
       0,   315,     0,     0,     0,     0,   317,   318,   319,     0,
       0,   320,     0,     0,     0,   321,     0,   323,     0,     0,
     325,   326,     0,     0,     0,     0,     0,     0,   327,   328,
       0,   329,     0,     0,   330,     0,     0,     0,   332,     0,
       0,     0,   334,     0,   335,   336,   337,     0,     0,     0,
     338,   339,     0,   340,   341,     0,   342,   343,     0,     0,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
     349,     0,   350,     0,     0,     0,   352,   353,   354,     0,
       0,   355,   356,     0,     0,     0,     0,     0,     0,     0,
     358,     0,     0,   359,     0,     0,   360,   361,     0,     0,
       0,     0,     0,     0,     0,   362,     0,     0,   363,     0,
       0,   364,   365,   366,     0,     0,  -193,     0,   367,     0,
     368,     0,     0,     0,     0,   370,     0,     0,     0,   122,
    3315,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,     0,     0,     0,   130,   131,   132,
       0,     0,  -193,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,     0,
       0,     0,     0,   143,     0,   144,     0,   145,     0,     0,
       0,     0,   148,   149,  3306,     0,   151,     0,   152,   153,
       0,     0,   155,     0,   157,   158,     0,     0,   159,     0,
       0,   160,     0,     0,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,     0,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,     0,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,     0,   180,   181,   182,     0,     0,   183,     0,
     184,   185,     0,     0,     0,   187,     0,   188,     0,     0,
     189,  3307,     0,   190,   191,   192,     0,     0,     0,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,  3308,     0,   202,     0,     0,     0,     0,     0,
       0,   204,     0,     0,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,  3309,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,  3310,     0,     0,     0,     0,  3311,
       0,     0,   219,     0,     0,     0,   220,  3312,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,  -193,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,     0,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,  3313,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,     0,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,     0,   300,  -193,     0,
     301,     0,     0,   303,     0,     0,   305,   306,  3314,     0,
       0,     0,   308,     0,   309,   310,     0,   311,   312,   313,
       0,     0,   315,     0,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,     0,   323,     0,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,     0,   332,
       0,     0,     0,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,     0,   352,   353,   354,
       0,     0,   355,   356,     0,     0,     0,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,  -193,     0,   367,
       0,   368,     0,     0,     0,     0,   370,     0,     0,     0,
     122,  3315,   123,   124,   125,   126,   127,     0,     0,     0,
       0,     0,   128,     0,     0,     0,     0,     0,   130,   131,
     132,     0,     0,  -193,     0,   135,     0,     0,   136,     0,
       0,     0,   137,     0,     0,   138,   139,     0,   140,     0,
       0,     0,     0,     0,   143,     0,   144,     0,   145,     0,
       0,     0,     0,   148,   149,  3306,     0,   151,     0,   152,
     153,     0,     0,   155,     0,   157,   158,     0,     0,   159,
       0,     0,   160,     0,     0,     0,     0,     0,     0,     0,
       0,   162,     0,     0,     0,     0,     0,     0,   163,   164,
       0,     0,   165,     0,     0,     0,     0,   166,     0,     0,
       0,     0,     0,     0,   168,     0,   169,     0,     0,     0,
       0,     0,   170,     0,   171,   172,   173,     0,     0,     0,
       0,     0,     0,   175,   176,   177,     0,     0,     0,   178,
       0,     0,     0,     0,   180,   181,   182,     0,     0,   183,
       0,   184,   185,     0,     0,     0,   187,     0,   188,     0,
       0,   189,  3307,     0,   190,   191,   192,     0,     0,     0,
       0,     0,     0,     0,   194,   195,     0,     0,   196,     0,
     197,     0,     0,     0,     0,     0,     0,   198,   199,     0,
       0,   200,   201,  3308,     0,   202,     0,     0,     0,     0,
       0,     0,   204,     0,     0,     0,     0,   206,     0,     0,
       0,   207,   208,   209,   210,  3309,     0,   211,   212,     0,
       0,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,  3310,     0,     0,     0,     0,
    3311,     0,     0,   219,     0,     0,     0,   220,  3312,     0,
     221,     0,     0,     0,     0,     0,   222,     0,   223,     0,
       0,   224,     0,   225,     0,     0,     0,     0,     0,  -193,
       0,     0,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,   234,   235,   236,   237,   238,   239,   240,     0,
     241,   242,   243,     0,   244,   245,     0,     0,     0,   246,
     247,   248,   249,     0,     0,   250,   251,     0,     0,   252,
       0,   253,     0,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,     0,     0,   262,   263,     0,   264,   265,
     266,     0,     0,     0,     0,     0,     0,     0,     0,   268,
     269,   270,     0,   271,   272,  3313,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
     277,     0,   278,     0,   279,     0,     0,     0,   281,     0,
     282,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,     0,     0,     0,   293,   294,     0,
       0,   295,   296,   297,     0,   298,     0,     0,   300,  -193,
       0,   301,     0,     0,   303,     0,     0,   305,   306,  3314,
       0,     0,     0,   308,     0,   309,   310,     0,   311,   312,
     313,     0,     0,   315,     0,     0,     0,     0,   317,   318,
     319,     0,     0,   320,     0,     0,     0,   321,     0,   323,
       0,     0,   325,   326,     0,     0,     0,     0,     0,     0,
     327,   328,     0,   329,     0,     0,   330,     0,     0,     0,
     332,     0,     0,     0,   334,     0,   335,   336,   337,     0,
       0,     0,   338,   339,     0,   340,   341,     0,   342,   343,
       0,     0,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,   349,     0,   350,     0,     0,     0,   352,   353,
     354,     0,     0,   355,   356,     0,     0,     0,     0,     0,
       0,     0,   358,     0,     0,  3494,     0,     0,   360,   361,
       0,     0,     0,     0,     0,     0,     0,   362,     0,     0,
     363,     0,     0,   364,   365,   366,     0,     0,  -193,     0,
     367,     0,   368,     0,     0,     0,     0,   370,     0,     0,
       0,   122,  3315,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
    1398,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,  1399,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,  1400,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,  1401,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,   873,   874,     0,   267,     0,     0,  1402,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,  3607,  3594,  3608,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,  1403,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,  2271,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
    2420,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,  2116,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,   554,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,  2117,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,   555,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
    2428,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,  2429,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,   554,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,   555,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,  2271,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,  2420,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
     554,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
     555,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,   878,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   554,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   555,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
     831,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,   832,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   678,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
    1287,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,   554,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,   555,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
    2271,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,   554,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,   555,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,  2466,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
     554,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
     555,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,   554,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,   555,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,  2410,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,   555,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,  3529,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,  3530,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,     0,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,     0,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,   894,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,  1294,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,  2066,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
     191,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,   265,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,  2067,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,   129,     0,     0,   130,
     131,   132,   133,     0,   134,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,   141,   142,     0,     0,   143,     0,   144,     0,   145,
     146,     0,   147,     0,   148,   149,   150,     0,   151,     0,
     152,   153,     0,   154,   155,   156,   157,   158,     0,     0,
     159,     0,     0,   160,     0,   161,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,   167,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,   174,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,   179,   180,   181,   182,     0,     0,
     183,     0,   184,   185,   186,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
     193,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,   203,   204,     0,   205,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,   218,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,   267,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,   273,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,   280,   281,
    2184,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,   299,   300,
       0,     0,   301,     0,   302,   303,   304,     0,   305,   306,
       0,     0,     0,   307,   308,     0,   309,   310,     0,   311,
     312,   313,   314,     0,   315,   316,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,   322,
     323,   324,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
     331,   332,     0,     0,   333,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,   351,   352,
     353,   354,     0,     0,   355,   356,     0,     0,   357,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,   369,     0,     0,   122,   370,   123,
     124,   125,   126,   127,     0,     0,     0,     0,     0,   128,
       0,     0,   129,     0,     0,   130,   131,   132,   133,     0,
     134,     0,   135,     0,     0,   136,     0,     0,     0,   137,
       0,     0,   138,   139,     0,   140,     0,   141,   142,     0,
       0,   143,     0,   144,     0,   145,   146,     0,   147,     0,
     148,   149,   150,     0,   151,     0,   152,   153,     0,   154,
     155,   156,   157,   158,     0,     0,   159,     0,     0,   160,
       0,   161,     0,     0,     0,     0,     0,     0,   162,     0,
       0,     0,     0,     0,     0,   163,   164,     0,     0,   165,
       0,     0,     0,     0,   166,   167,     0,     0,     0,     0,
       0,   168,     0,   169,     0,     0,     0,     0,     0,   170,
       0,   171,   172,   173,     0,     0,     0,   174,     0,     0,
     175,   176,   177,     0,     0,     0,   178,     0,     0,     0,
     179,   180,   181,   182,     0,     0,   183,     0,   184,   185,
     186,     0,     0,   187,     0,   188,     0,     0,   189,     0,
       0,   190,   191,   192,     0,     0,   193,     0,     0,     0,
       0,   194,   195,     0,     0,   196,     0,   197,     0,     0,
       0,     0,     0,     0,   198,   199,     0,     0,   200,   201,
       0,     0,   202,     0,     0,     0,     0,     0,   203,   204,
       0,   205,     0,     0,   206,     0,     0,     0,   207,   208,
     209,   210,     0,     0,   211,   212,     0,     0,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,     0,     0,     0,     0,     0,     0,   218,     0,
     219,     0,     0,     0,   220,     0,     0,   221,     0,     0,
       0,     0,     0,   222,     0,   223,     0,     0,   224,     0,
     225,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,   234,
     235,   236,   237,   238,   239,   240,     0,   241,   242,   243,
       0,   244,   245,     0,     0,     0,   246,   247,   248,   249,
       0,     0,   250,   251,     0,     0,   252,     0,   253,     0,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
       0,     0,   262,   263,     0,   264,   265,   266,     0,     0,
       0,   267,     0,     0,     0,     0,   268,   269,   270,     0,
     271,   272,   273,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,   277,     0,   278,
       0,   279,     0,     0,   280,   281,     0,   282,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   291,   292,
       0,     0,     0,     0,   293,   294,     0,     0,   295,   296,
     297,     0,   298,     0,   299,   300,     0,     0,   301,     0,
     302,   303,   304,     0,   305,   306,     0,     0,     0,   307,
     308,     0,   309,   310,     0,   311,   312,   313,   314,     0,
     315,   316,     0,     0,     0,   317,   318,   319,     0,     0,
     320,     0,     0,     0,   321,   322,   323,   324,     0,   325,
     326,     0,     0,     0,     0,     0,     0,   327,   328,     0,
     329,     0,     0,   330,     0,     0,   331,   332,     0,     0,
     333,   334,     0,   335,   336,   337,     0,     0,     0,   338,
     339,     0,   340,   341,     0,   342,   343,     0,   555,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,   349,
       0,   350,     0,     0,   351,   352,   353,   354,     0,     0,
     355,   356,     0,     0,   357,     0,     0,     0,     0,   358,
       0,     0,   359,     0,     0,   360,   361,     0,     0,     0,
       0,     0,     0,     0,   362,     0,     0,   363,     0,     0,
     364,   365,   366,     0,     0,     0,     0,   367,     0,   368,
     369,     0,     0,   122,   370,   123,   124,   125,   126,   127,
       0,     0,     0,     0,     0,   128,     0,     0,   129,     0,
       0,   130,   131,   132,   133,     0,   134,     0,   135,     0,
       0,   136,     0,     0,     0,   137,     0,     0,   138,   139,
       0,   140,     0,   141,   142,     0,     0,   143,     0,   144,
       0,   145,   146,     0,   147,     0,   148,   149,   150,     0,
     151,     0,   152,   153,     0,   154,   155,   156,   157,   158,
       0,     0,   159,     0,     0,   160,     0,   161,     0,     0,
       0,     0,     0,     0,   162,     0,     0,     0,     0,     0,
       0,   163,   164,     0,     0,   165,     0,     0,     0,     0,
     166,   167,     0,     0,     0,     0,  2066,   168,     0,   169,
       0,     0,     0,     0,     0,   170,     0,   171,   172,   173,
       0,     0,     0,   174,     0,     0,   175,   176,   177,     0,
       0,     0,   178,     0,     0,     0,   179,   180,   181,   182,
       0,     0,   183,     0,   184,   185,   186,     0,     0,   187,
       0,   188,     0,     0,   189,     0,     0,   190,   191,   192,
       0,     0,   193,     0,     0,     0,     0,   194,   195,     0,
       0,   196,     0,   197,     0,     0,     0,     0,     0,     0,
     198,   199,     0,     0,   200,   201,     0,     0,   202,     0,
       0,     0,     0,     0,   203,   204,     0,   205,     0,     0,
     206,     0,     0,     0,   207,   208,   209,   210,     0,     0,
     211,   212,     0,     0,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,     0,     0,
       0,     0,     0,     0,   218,     0,   219,     0,     0,     0,
     220,     0,     0,   221,     0,     0,     0,     0,     0,   222,
       0,   223,     0,     0,   224,     0,   225,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,   234,   235,   236,   237,   238,
     239,   240,     0,   241,   242,   243,     0,   244,   245,     0,
       0,     0,   246,   247,   248,   249,     0,     0,   250,   251,
       0,     0,   252,     0,   253,     0,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,     0,     0,   262,   263,
       0,   264,   265,   266,     0,     0,     0,   267,     0,     0,
       0,     0,   268,   269,   270,     0,   271,   272,   273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,   277,     0,   278,     0,   279,     0,     0,
     280,   281,     0,   282,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   291,   292,     0,     0,     0,     0,
     293,   294,     0,     0,   295,   296,   297,     0,   298,     0,
     299,   300,     0,     0,   301,     0,   302,   303,   304,     0,
     305,   306,     0,     0,     0,   307,   308,     0,   309,   310,
       0,   311,   312,   313,   314,     0,   315,   316,     0,     0,
       0,   317,   318,   319,     0,     0,   320,     0,     0,     0,
     321,   322,   323,   324,     0,   325,   326,     0,     0,     0,
       0,     0,     0,   327,   328,     0,   329,     0,     0,   330,
       0,     0,   331,   332,     0,     0,   333,   334,     0,   335,
     336,   337,     0,     0,     0,   338,   339,     0,   340,   341,
       0,   342,   343,     0,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,   349,     0,   350,     0,     0,
     351,   352,   353,   354,     0,     0,   355,   356,     0,     0,
     357,     0,     0,     0,     0,   358,     0,     0,   359,     0,
       0,   360,   361,     0,     0,     0,     0,     0,     0,     0,
     362,     0,     0,   363,     0,     0,   364,   365,   366,     0,
       0,     0,     0,   367,     0,   368,   369,     0,     0,   122,
     370,   123,   124,   125,   126,   127,     0,     0,     0,     0,
       0,   128,     0,     0,   129,     0,     0,   130,   131,   132,
     133,     0,   134,     0,   135,     0,     0,   136,     0,     0,
       0,   137,     0,     0,   138,   139,     0,   140,     0,   141,
     142,     0,     0,   143,     0,   144,     0,   145,   146,     0,
     147,     0,   148,   149,   150,     0,   151,     0,   152,   153,
       0,   154,   155,   156,   157,   158,     0,     0,   159,     0,
       0,   160,     0,   161,     0,     0,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,   163,   164,     0,
       0,   165,     0,     0,     0,     0,   166,   167,     0,     0,
       0,     0,     0,   168,     0,   169,     0,     0,     0,     0,
       0,   170,     0,   171,   172,   173,     0,     0,     0,   174,
       0,     0,   175,   176,   177,     0,     0,     0,   178,     0,
       0,     0,   179,   180,   181,   182,     0,     0,   183,     0,
     184,   185,   186,     0,     0,   187,     0,   188,     0,     0,
     189,     0,     0,   190,   191,   192,     0,     0,   193,     0,
       0,     0,     0,   194,   195,     0,     0,   196,     0,   197,
       0,     0,     0,     0,     0,     0,   198,   199,     0,     0,
     200,   201,     0,     0,   202,     0,     0,     0,     0,     0,
     203,   204,     0,   205,     0,     0,   206,     0,     0,     0,
     207,   208,   209,   210,     0,     0,   211,   212,     0,     0,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,     0,     0,     0,     0,     0,     0,
     218,     0,   219,     0,     0,     0,   220,     0,     0,   221,
       0,     0,     0,     0,     0,   222,     0,   223,     0,     0,
     224,     0,   225,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,   234,   235,   236,   237,   238,   239,   240,     0,   241,
     242,   243,     0,   244,   245,     0,     0,     0,   246,   247,
     248,   249,     0,     0,   250,   251,     0,     0,   252,     0,
     253,     0,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,     0,     0,   262,   263,     0,   264,   265,   266,
       0,     0,     0,   267,     0,     0,     0,     0,   268,   269,
     270,     0,   271,   272,   273,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,   277,
       0,   278,     0,   279,     0,     0,   280,   281,     0,   282,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,     0,     0,     0,   293,   294,     0,     0,
     295,   296,   297,     0,   298,     0,   299,   300,     0,     0,
     301,     0,   302,   303,   304,     0,   305,   306,     0,     0,
       0,   307,   308,     0,   309,   310,     0,   311,   312,   313,
     314,     0,   315,   316,     0,     0,     0,   317,   318,   319,
       0,     0,   320,     0,     0,     0,   321,   322,   323,   324,
       0,   325,   326,     0,     0,     0,     0,     0,     0,   327,
     328,     0,   329,     0,     0,   330,     0,     0,   331,   332,
       0,     0,   333,   334,     0,   335,   336,   337,     0,     0,
       0,   338,   339,     0,   340,   341,     0,   342,   343,     0,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,   349,     0,   350,     0,     0,   351,   352,   353,   354,
       0,     0,   355,   356,     0,     0,   357,     0,     0,     0,
       0,   358,     0,     0,   359,     0,     0,   360,   361,     0,
       0,     0,     0,     0,     0,     0,   362,     0,     0,   363,
       0,     0,   364,   365,   366,     0,     0,     0,     0,   367,
       0,   368,   369,     0,     0,   122,   370,   123,   124,   125,
     126,   127,     0,     0,     0,     0,     0,   128,     0,     0,
     129,     0,     0,   130,   131,   132,   133,     0,   134,     0,
     135,     0,     0,   136,     0,     0,     0,   137,     0,     0,
     138,   139,     0,   140,     0,   141,   142,     0,     0,   143,
       0,   144,     0,   145,   146,     0,   147,     0,   148,   149,
     150,     0,   151,     0,   152,   153,     0,   154,   155,   156,
     157,   158,     0,     0,   159,     0,     0,   160,     0,   161,
       0,     0,     0,     0,     0,     0,   162,     0,     0,     0,
       0,     0,     0,   163,   164,     0,     0,   165,     0,     0,
       0,     0,   166,   167,     0,     0,     0,     0,     0,   168,
       0,   169,     0,     0,     0,     0,     0,   170,     0,   171,
     172,   173,     0,     0,     0,   174,     0,     0,   175,   176,
     177,     0,     0,     0,   178,     0,     0,     0,   179,   180,
     181,   182,     0,     0,   183,     0,   184,   185,   186,     0,
       0,   187,     0,   188,     0,     0,   189,     0,     0,   190,
    1385,   192,     0,     0,   193,     0,     0,     0,     0,   194,
     195,     0,     0,   196,     0,   197,     0,     0,     0,     0,
       0,     0,   198,   199,     0,     0,   200,   201,     0,     0,
     202,     0,     0,     0,     0,     0,   203,   204,     0,   205,
       0,     0,   206,     0,     0,     0,   207,   208,   209,   210,
       0,     0,   211,   212,     0,     0,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
       0,     0,     0,     0,     0,     0,   218,     0,   219,     0,
       0,     0,   220,     0,     0,   221,     0,     0,     0,     0,
       0,   222,     0,   223,     0,     0,   224,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,   234,   235,   236,
     237,   238,   239,   240,     0,   241,   242,   243,     0,   244,
     245,     0,     0,     0,   246,   247,   248,   249,     0,     0,
     250,   251,     0,     0,   252,     0,   253,     0,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,     0,     0,
     262,   263,     0,   264,  1386,   266,     0,     0,     0,   267,
       0,     0,     0,     0,   268,   269,   270,     0,   271,   272,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,   277,     0,   278,     0,   279,
       0,     0,   280,   281,     0,   282,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,     0,
       0,     0,   293,   294,     0,     0,   295,   296,   297,     0,
     298,     0,   299,   300,     0,     0,   301,     0,   302,   303,
     304,     0,   305,   306,     0,     0,     0,   307,   308,     0,
     309,   310,     0,   311,   312,   313,   314,     0,   315,   316,
       0,     0,     0,   317,   318,   319,     0,     0,   320,     0,
       0,     0,   321,   322,   323,   324,     0,   325,   326,     0,
       0,     0,     0,     0,     0,   327,   328,     0,   329,     0,
       0,   330,     0,     0,   331,   332,     0,     0,   333,   334,
       0,   335,   336,   337,     0,     0,     0,   338,   339,     0,
     340,   341,     0,   342,   343,     0,     0,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,   349,     0,   350,
       0,     0,   351,   352,   353,   354,     0,     0,   355,   356,
       0,     0,   357,     0,     0,     0,     0,   358,     0,     0,
     359,     0,     0,   360,   361,     0,     0,     0,     0,     0,
       0,     0,   362,     0,     0,   363,     0,     0,   364,   365,
     366,     0,     0,     0,     0,   367,     0,   368,   369,     0,
       0,   122,   370,   123,   124,   125,   126,   127,     0,     0,
       0,     0,     0,   128,     0,     0,     0,     0,     0,   130,
     131,   132,     0,     0,     0,     0,   135,     0,     0,   136,
       0,     0,     0,   137,     0,     0,   138,   139,     0,   140,
       0,     0,     0,     0,     0,   143,     0,   144,     0,   145,
       0,     0,     0,     0,   148,   149,     0,     0,   151,     0,
     152,   153,     0,     0,   155,     0,   157,   158,     0,     0,
     159,     0,     0,   160,     0,     0,     0,     0,     0,     0,
       0,     0,   162,     0,     0,     0,     0,     0,     0,   163,
     164,     0,     0,   165,     0,     0,     0,     0,   166,     0,
       0,     0,     0,     0,     0,   168,     0,   169,     0,     0,
       0,     0,     0,   170,     0,   171,   172,   173,     0,     0,
       0,     0,     0,     0,   175,   176,   177,     0,     0,     0,
     178,     0,     0,     0,     0,   180,   181,   182,     0,     0,
     183,     0,   184,   185,     0,     0,     0,   187,     0,   188,
       0,     0,   189,     0,     0,   190,   191,   192,     0,     0,
       0,     0,     0,     0,     0,   194,   195,     0,     0,   196,
       0,   197,     0,     0,     0,     0,     0,     0,   198,   199,
       0,     0,   200,   201,     0,     0,   202,     0,     0,     0,
       0,     0,     0,   204,     0,     0,     0,     0,   206,     0,
       0,     0,   207,   208,   209,   210,     0,     0,   211,   212,
       0,     0,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,     0,     0,     0,     0,
       0,     0,     0,     0,   219,     0,     0,     0,   220,     0,
       0,   221,     0,     0,     0,     0,     0,   222,     0,   223,
       0,     0,   224,     0,   225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
       0,   241,   242,   243,     0,   244,   245,     0,     0,     0,
     246,   247,   248,   249,     0,     0,   250,   251,     0,     0,
     252,     0,   253,     0,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,     0,     0,   262,   263,     0,   264,
     265,   266,     0,     0,     0,     0,     0,     0,     0,     0,
     268,   269,   270,     0,   271,   272,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,   277,     0,   278,     0,   279,     0,     0,     0,   281,
       0,   282,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   291,   292,     0,     0,     0,     0,   293,   294,
       0,     0,   295,   296,   297,     0,   298,     0,     0,   300,
       0,     0,   301,     0,     0,   303,     0,     0,   305,   306,
       0,     0,     0,     0,   308,     0,   309,   310,     0,   311,
     312,   313,     0,     0,   315,     0,     0,     0,     0,   317,
     318,   319,     0,     0,   320,     0,     0,     0,   321,     0,
     323,     0,     0,   325,   326,     0,     0,     0,     0,     0,
       0,   327,   328,     0,   329,     0,     0,   330,     0,     0,
       0,   332,     0,     0,     0,   334,     0,   335,   336,   337,
       0,     0,     0,   338,   339,     0,   340,   341,     0,   342,
     343,     0,     0,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,   349,     0,   350,     0,     0,     0,   352,
     353,   354,     0,     0,   355,   356,     0,     0,     0,     0,
       0,     0,     0,   358,     0,     0,   359,     0,     0,   360,
     361,     0,     0,     0,     0,     0,     0,     0,   362,     0,
       0,   363,     0,     0,   364,   365,   366,     0,     0,     0,
       0,   367,     0,   368,     0,     0,     0,     0,   370
};

static const short yycheck[] =
{
       7,   460,   884,   492,   585,   586,   956,   736,   413,  1169,
     995,   440,    19,   590,  1085,    22,   766,   568,   519,   791,
    1827,   812,    29,   488,   489,   650,  1842,  1222,  1085,  2045,
     600,  1365,    39,  1849,   845,  2443,  2069,  2070,  2071,  1105,
     812,  1789,    49,    22,  2076,  1272,  1112,   958,   959,   960,
     452,   453,   454,  1703,   456,   520,   458,  2097,  2236,  1286,
     971,  2392,   108,   742,   110,  2105,  1716,  2107,  1286,  2104,
     651,  1101,   447,   985,   789,  1669,  2083,  2084,  1237,   502,
      87,  2262,    16,   963,   964,  2266,   966,  2784,  2761,  1248,
    1249,  1123,  1124,  2135,  1049,     3,   677,    48,   813,     3,
     107,   108,   679,   110,     3,   682,    32,  2139,    87,     3,
     691,   692,   693,     3,   121,  1027,     3,  1028,     3,    18,
    1031,    28,     3,  2129,  1004,     3,  1437,  2159,  2160,  2135,
      16,    16,  2138,    53,    18,  2141,    18,    55,   849,  1019,
    3042,    16,   121,    34,    58,  1792,  2152,  2153,  1059,  1060,
     701,   702,   703,  1064,  2851,  2161,   849,  1037,  1038,  1039,
    1115,    20,  1117,    27,    18,  1794,  2863,    34,  1048,   814,
     721,    28,    68,  1084,    62,  1086,   132,    54,    55,  2809,
    2810,  1623,   127,  2813,   112,  1683,   171,   144,    43,    20,
      58,   112,   168,    59,    20,    54,    55,    57,  1358,    92,
      62,    32,  2832,  2247,  2248,  2249,    32,  2223,  2838,    57,
      20,   165,    69,   226,    45,   126,  2227,   226,  1291,    45,
    2385,   108,    32,    54,    55,  2120,   715,    60,    54,    55,
     108,   226,    11,   153,    76,    45,   156,    57,   265,   171,
     153,  2978,   340,   142,    54,    55,   171,   748,  2921,   128,
    3317,    48,   247,  2060,    32,   102,    32,   211,   142,   335,
     142,    93,    63,   319,   993,   318,  2969,   173,   258,  2487,
     211,    57,   142,   403,   247,    74,   284,    55,   420,    49,
      66,   138,    63,     8,   337,   295,   248,    57,   142,   171,
     389,  2879,    78,   123,  2882,   760,    51,   878,   168,   220,
     420,   153,   707,   109,   353,   110,   455,    94,   397,   200,
      97,   160,    91,   211,   153,   229,    94,   284,   166,    97,
      19,    38,   476,   170,   726,  2379,  2695,   105,  3509,   337,
     211,   171,    91,   200,    65,  2130,  2131,  2977,   384,   476,
     248,  2089,   197,   516,   248,    12,   166,   494,    75,   453,
    2394,  2395,  2396,   380,   248,   420,   402,   264,   248,   206,
       8,   229,    89,   104,   454,   146,  2996,   265,   458,   516,
     337,   475,   171,  3013,   294,  3005,   525,   384,   753,    27,
     166,   265,   214,   345,   535,   790,   226,   560,   174,   238,
     385,   856,   399,   142,  2427,   402,   175,  2766,  3071,   498,
      37,    11,   409,   120,   104,    86,   413,   561,  2462,  2056,
    3113,   325,   214,   420,   113,  2450,   175,   559,   425,   225,
     476,   162,   218,  3604,   561,  2458,  2103,   476,   214,   559,
     226,   233,   211,  1010,   562,   160,   226,   345,   315,   559,
     447,   420,  2484,   845,   500,   910,   352,   233,   853,  1260,
     401,   345,   372,   300,   395,   122,  2498,   464,   504,   372,
     265,   308,   162,   516,   474,   455,   265,   474,   566,   515,
     349,   517,   561,   480,   372,   420,   353,   307,  2484,   486,
     329,   488,   489,   253,  1395,   561,   493,   394,   495,   499,
    2238,    48,  2498,  3081,   559,   474,   380,   504,   505,   109,
    1272,  1078,   509,   559,  1663,   362,   282,   514,   515,   536,
     517,  1226,   519,   520,   395,   426,   364,  2925,  1736,  1234,
     372,   262,   135,   370,   384,   382,  2176,  1600,   434,   371,
    1209,  3598,   145,   372,   201,  1250,  1251,    23,   452,  2704,
     549,  3278,   320,  1113,   364,   346,   553,   380,   561,   463,
     407,   559,    67,   548,   350,  2566,  2774,   427,   175,   532,
     415,   515,   262,  1114,    79,   346,  1477,   455,  1279,   435,
    1481,   418,   529,  2223,   329,   560,   951,    63,   364,  1130,
     982,    67,   202,   511,   560,   476,  1279,   366,  2235,   545,
     511,   332,  1577,   455,  1579,   463,  3498,   454,  2096,   485,
    2495,  1246,   498,  1514,   401,  1156,   524,   366,  2237,   476,
     561,  1566,  2793,  1292,   559,   549,  1571,  1572,   563,  1108,
    2062,   485,   108,   537,   532,    91,   533,  1338,   532,   561,
    3327,   485,   332,   559,   516,   528,   561,   368,   532,  3047,
     472,   561,   532,   502,  3347,  1338,  2827,  2828,   561,   534,
    2398,  2399,   536,   439,  2835,   433,   504,    10,   566,   567,
    1540,  2842,   514,   567,  2708,  2698,  1068,  3297,   567,  3299,
    1072,   502,   566,   567,   549,   514,   502,   567,   427,   561,
     567,  1561,   567,   530,   504,  2701,   567,  2482,   565,   567,
    2001,   478,   502,   472,   481,   542,   527,   523,   524,   706,
     707,   708,   830,   481,  2737,   104,  1287,  1172,   105,   175,
    3298,  2751,  3300,   472,   155,  2755,  2751,  1182,   504,  3055,
    2755,   236,   561,   553,   554,   555,  1227,   408,   559,  2771,
     343,   509,   420,   740,   104,   214,   104,   347,    91,   470,
     108,   748,   749,   108,   534,   282,   753,   233,   214,   366,
    1155,   388,  3382,   760,  3384,   175,   497,   559,   489,   549,
     420,   740,   171,   162,   560,  2771,   403,   171,  1173,   528,
     749,   248,   329,   319,  2451,  2452,    53,   444,   445,   446,
     447,   448,   449,   790,  2962,   231,   420,   388,   168,   426,
     305,  1214,   162,   460,   162,   218,   435,   497,   319,  3472,
    3310,   200,  3312,   226,  1754,     4,  3142,   155,  1183,  1759,
       9,    10,  2975,   110,   329,  1765,   187,   171,  1768,   223,
     319,   174,   175,   503,  1856,  1857,  2574,   224,    27,   450,
     200,   253,   200,    32,  1563,   455,   262,    36,   845,   248,
     326,   327,  2858,   416,   401,   331,   853,   485,  2442,   856,
     451,   337,   859,   860,  1283,   472,  3553,   231,  1260,  2866,
    1361,   214,   475,   262,   379,   472,    12,   488,   345,   426,
     244,   559,    70,    71,   336,    66,   153,   257,   364,   156,
     560,   860,   253,  3214,   891,   326,   327,   894,  2083,  2084,
     331,   353,   262,  1560,   262,   104,   362,  1688,   905,   559,
     366,     0,  1569,   910,   201,  2712,   332,  1372,   330,    85,
     108,  3247,   891,  2946,   109,   894,  1688,   116,  1293,  2954,
    2955,   433,   362,   561,  1603,   559,   905,   350,   354,   563,
     476,  2090,   130,   332,  1613,   450,  1341,  3115,   424,  2005,
     947,   345,   949,  1658,   951,   187,   366,  1662,  2175,  2109,
    1665,  1666,  1907,   162,   500,   476,   402,  2175,  1637,  3205,
    1990,  1366,   332,   161,   332,   342,   331,  1847,   265,    85,
     324,    85,  1852,    34,  2045,   166,   122,   476,   985,   500,
    3143,  3144,  3390,   331,   381,   476,  3496,  1867,  2045,   516,
    1560,   200,  3328,    67,  1874,   559,  1908,   509,   398,  1569,
     400,   500,   566,   373,   404,    79,   376,   473,  3416,  1889,
    1890,   253,  2760,   366,   476,  1694,  1896,   294,   504,  1570,
    1027,   282,   488,   214,  1904,    12,   503,   455,    12,    34,
     225,   543,   406,  3049,   561,  2106,    97,   142,   559,  1380,
     216,  1382,   233,   104,   118,    12,   410,   513,    12,  2106,
     491,   329,   472,   262,   425,   231,   435,  1459,    12,   117,
     559,   389,   528,  1943,   461,   493,   507,  2883,   244,   442,
     443,   497,   445,  2155,   565,  2302,  1755,  1756,  1085,  1758,
    2240,  1760,  1761,  1762,  1763,  1764,   439,  1766,  1767,  3129,
    2172,  3427,    97,   531,   155,   372,   338,    85,   497,   104,
     216,   162,   216,   214,  1605,  1606,     3,   545,   487,   473,
     371,   389,  2762,  2763,  2764,   231,   472,   231,   534,   472,
     473,   521,   233,   332,  1526,   559,  2006,   497,   244,   497,
     244,   109,   566,   420,  2016,   122,   566,  2787,   122,   200,
    1545,   485,   318,   491,   202,   561,    16,    85,  1155,   513,
     155,   504,  1159,  3411,   470,   122,   472,   162,   122,   507,
     513,  2111,   236,   210,   528,  1172,  1173,  2501,   122,  1215,
    1216,   499,   472,   364,   435,  1182,  1183,  1704,   344,  1225,
    1707,   347,   470,   425,   472,   383,  1193,  1233,   524,  1716,
    2140,   527,  2142,   420,   380,   200,   214,  2147,  1725,   426,
     258,   262,   318,   473,   318,  1634,   405,   393,  1215,  1216,
    1217,  1218,  2162,   175,  2164,  2165,  2166,  3463,  1225,  3465,
    1227,   337,  3468,   422,   282,   513,  1233,   210,   216,   428,
     406,   305,   223,   442,   521,   522,  1243,   423,  1217,  1218,
     270,   271,   340,   231,   936,   171,    20,   939,  3506,   448,
     942,   534,   326,   327,    28,   329,   244,   262,   319,    33,
      54,    55,  3078,   566,  1243,  3511,  3364,   328,  3366,    63,
     331,   332,   559,  3519,  1615,  1616,  1617,   142,   216,  3525,
    3538,   560,   189,  1290,   460,   265,  1293,   450,   497,   395,
     406,  3549,   406,   231,   521,   522,  2281,  2282,  1344,  2365,
    2799,   326,   327,  2802,  2803,   379,   244,   365,   559,  2380,
    3568,  1290,  3558,   371,   319,    11,     3,   429,   430,   149,
    2819,   551,   552,  2380,  3570,   410,   331,   332,   560,   561,
     318,    18,   559,   337,  1341,   516,  1343,  1344,  1345,  1744,
    2019,   399,   365,  3589,   460,   342,   460,  3605,  1355,   337,
    1357,  2990,  2991,   470,  1361,   337,   386,   387,   561,  1366,
     226,    15,    16,  3609,  3003,  1372,  1345,  1374,  1993,   211,
    3009,   559,  1379,  1380,  3620,  1382,   450,   435,   285,   286,
     318,   247,   289,   290,  2063,   453,   454,   559,   456,  3422,
     458,   560,   561,  3032,    54,    55,  3035,   455,    85,   337,
    1379,  1380,   559,  1382,   559,  3437,  1125,  1126,  1127,  1128,
    1129,   559,   470,   539,   472,   476,   559,   478,   406,   559,
     481,   560,   561,   560,   561,   560,   561,   560,   561,   559,
     491,   560,   561,   560,   561,   559,   497,  1842,   559,   500,
     560,   561,  3249,   550,  1849,   142,   556,   560,   561,  1121,
    1122,  2002,   560,   561,    46,   142,   560,   561,  1860,   559,
     326,   327,   559,   160,  2143,  2144,  1868,   559,   406,   560,
     561,   476,   460,   478,   560,   561,   481,   559,   165,   560,
     561,   168,   559,   180,  2163,   171,   491,   560,   561,   559,
     551,   552,   497,   560,   561,   500,   560,   561,   195,   258,
     560,   561,   476,   560,   561,   192,   560,   561,   560,   561,
     559,   198,   560,   561,   560,   561,   560,   561,   559,   385,
     560,   561,   460,   559,   211,   560,   561,   560,   561,   216,
      46,   560,   561,   559,    23,    24,   223,   559,  1545,   559,
    1547,   238,   239,   559,   231,   559,   551,   552,   560,   561,
     560,   561,   560,   561,   560,   561,   559,   244,   560,   561,
     559,   248,   560,   561,   559,    54,    55,    56,   561,   266,
     257,   337,   438,   559,    63,   560,   561,   566,    67,   560,
     561,   560,   561,   560,   561,   560,   561,    76,   559,  1596,
     560,   561,  1599,   553,   560,   561,  2763,  2764,  1605,  1606,
    1607,  1608,   559,  2588,    93,   560,   561,   559,  1615,  1616,
    1617,   560,   561,   560,   561,  1123,  1124,  1596,   559,   108,
    1599,   258,   111,   559,    12,    13,  1633,   324,  1607,  1608,
     559,   318,  1069,  1070,  2705,  1642,  1615,  1616,  1617,  3149,
    3150,   559,  2392,  2434,  2582,  2583,  2870,  2871,  2705,   559,
     337,   140,  1659,   559,   559,   559,   559,  1664,   345,   559,
     142,   143,  2434,   559,   559,  2070,   363,  2072,  2073,  1676,
     559,  2866,   559,   559,  2659,  1682,   559,   559,   559,   366,
     559,   559,   548,   549,   559,  1664,   559,   559,  2759,   416,
     559,   559,     3,   147,   503,   559,    84,   559,   180,   559,
     559,   559,  2759,  1682,   559,   559,   559,    18,   559,   559,
     559,   559,   559,   195,  2119,  2120,  2145,   426,   559,   406,
     559,  2400,  2401,   559,   112,   214,  2441,   559,   559,   493,
     559,  2410,   221,  1740,   559,   559,   559,  1744,   126,   426,
     559,   559,   559,   559,  1751,   227,   559,   559,   559,   559,
    2155,   559,   559,   559,   559,   559,   559,   239,   559,   559,
     148,   559,   559,   559,   559,   248,   559,  2172,   559,   559,
     559,   159,   559,   460,    85,   559,   559,   559,   559,   559,
    1787,   559,   559,  1790,   266,   168,   559,   559,   559,  2949,
     559,   455,   455,   455,   282,   470,   258,   139,   287,    77,
     561,   189,   339,   468,   560,   419,  2688,   528,  1787,    51,
     389,   149,   301,   559,   565,   208,   503,  2496,   561,   561,
     528,   566,   561,   561,  2503,   565,   214,    46,   515,   516,
     534,   142,   220,   561,   470,  1842,   559,    63,    12,   420,
     322,   560,  1849,   560,   476,   532,   560,   534,   122,  2920,
       9,   531,   427,   560,   560,  1862,   566,   168,     3,   559,
     247,     6,   351,  2920,   353,   560,   282,   552,    13,   257,
     282,   253,   561,   560,   561,   485,  2377,   561,    23,    24,
     567,   192,   561,   485,   561,   374,   375,   198,   377,  2568,
     561,   561,   226,   476,   553,   168,   437,   510,   355,   565,
     561,  1908,   559,   561,   560,   216,   142,    52,   142,   142,
     142,    56,   223,   142,   142,   142,   561,   142,   142,   142,
     231,   142,    67,  2424,   413,   142,   142,   142,   142,    44,
     337,    76,   171,   244,   561,   380,    81,   248,   532,   561,
     560,   560,    18,   561,   560,   560,   257,   559,    93,   560,
     215,   560,   560,   560,   560,   553,   561,   561,   561,   560,
     560,   171,   561,   108,   561,   560,   111,   560,   564,   559,
     561,   560,   171,   559,   561,   120,   121,   561,   566,   367,
     560,   126,   549,   561,   561,   561,   189,   561,   561,   134,
     560,   435,   561,   561,   560,   140,   384,   561,  2403,   561,
     560,   560,   390,   561,   561,   494,   561,   318,   396,   561,
     561,  2018,   560,   560,   503,   561,   560,   560,   560,   168,
     165,   561,   560,   426,   560,   560,   337,   560,   560,   560,
     560,   560,   420,   561,   345,   560,   560,   560,  2045,   561,
     561,   561,   561,   431,   432,   560,   560,    44,   561,   561,
     560,   560,   450,   561,   561,   366,  2063,  2064,   560,   450,
     561,   560,   560,  2070,  2529,  2072,  2073,   212,   560,   214,
     560,   566,   561,   560,   450,   566,   221,   561,   450,   467,
     566,  2892,   560,   560,   450,   566,   561,   419,    66,   485,
    2495,   119,   232,   471,   232,   406,   471,   119,   561,  2106,
     566,   516,   257,   561,   485,   566,   566,   560,   485,   560,
     222,   485,  2119,  2120,   332,   426,   171,   560,   560,   332,
     560,   171,  2129,   511,   512,   171,   332,   545,  2135,   560,
     566,  2138,   560,   560,  2141,   561,   536,   253,   485,   559,
     342,   171,   287,   223,   171,  2152,  2153,   171,  2155,   460,
     171,   228,   566,   566,  2161,   534,   301,  3039,  3040,   561,
     231,   306,   231,  2170,   348,  2172,   297,    93,    93,  2176,
    2177,   233,   233,   559,   566,   559,   561,   476,  2729,  3090,
     560,   496,   345,   553,   553,   337,   559,   224,   224,   560,
     138,  2170,   503,   560,   531,   560,   559,   559,   566,   560,
     345,   560,   560,   560,   560,   516,   351,   560,   353,   561,
     560,   560,   560,   211,   560,  2222,  2223,   560,   546,   560,
     560,   532,   561,   534,  3104,   560,  2233,   560,   171,   374,
     375,   560,   377,   560,   511,   561,  2915,  2244,   560,  2246,
    2247,  2248,  2249,  2222,   560,   566,   391,   560,   560,   560,
     561,   560,   226,   561,   561,   561,   567,    23,    24,   560,
     560,   245,   560,   560,   560,   560,  3337,   560,   413,  2948,
     560,   560,   560,   560,   560,   560,  3226,  3227,  3228,  3229,
     560,    63,   561,  1693,   560,   560,   231,   270,    54,    55,
      56,   560,   560,   231,   561,  1705,  1706,    63,  1708,  1709,
    1710,    67,   560,  1713,   561,    12,    13,   561,  1718,   560,
      76,  2716,  1722,  1723,  1724,   560,  1726,  1727,  1728,  1729,
    1730,   561,  1732,  1733,  1734,   560,   337,    93,   233,  2734,
     560,   233,    18,  3012,   337,    18,    18,   248,   560,   129,
     560,   332,   108,   332,   422,   111,   332,   559,  2355,   494,
     561,   560,   560,   560,   371,    40,   561,   561,   503,  3170,
     560,   332,   560,   560,   560,  3176,  2373,   561,   560,   560,
    2377,   560,   560,  2380,   140,   560,   242,    84,   560,   420,
     561,   192,   561,   428,   559,   142,   559,  2394,  2395,  2396,
     560,   348,   231,   231,  2373,   561,  2403,   559,   108,   108,
    3471,   559,   559,  2410,   534,   112,   361,   560,   559,  2416,
     566,  2418,   559,   559,    32,   559,   561,  2424,   560,   126,
     561,   560,   567,   560,     7,   560,   560,   560,   304,   561,
     151,   560,   560,   560,   560,   560,    19,   560,   560,    22,
     560,   148,   560,   546,   561,   223,    29,   560,   214,    44,
     561,  2880,   159,   198,    65,   221,    39,   566,   304,   380,
     476,   476,   231,   516,  3214,   516,    49,   559,   559,   559,
     332,  3200,   332,   559,   559,   527,   332,  2484,  2883,   527,
     511,   247,   189,   108,   233,   233,   331,   534,  2495,  3560,
    2892,  2498,   332,   168,   403,   332,   332,   332,   332,   559,
     476,   476,   233,  3560,    87,   332,   476,   214,   250,    16,
     516,   560,   516,   220,  3585,   328,   560,   559,   561,   118,
     560,   287,  2529,   522,   107,   108,   560,   110,   560,  2536,
    2935,  3602,  2539,   131,   560,   301,  2543,  2544,   121,   332,
    2547,  3352,  3353,  2550,  3355,  3602,   560,   560,   560,   511,
     257,  2558,   560,  3042,   342,   560,   472,    44,   560,   560,
    2539,    44,   135,    44,   560,   271,   559,   559,    57,  3146,
    3147,  3148,  3383,   560,   342,    57,   207,   207,   531,  2558,
     568,   414,   366,   560,    44,   351,    44,   353,    44,   142,
     384,   560,     5,   561,   171,   342,  3546,   138,   342,   223,
     561,  3182,   560,   210,   546,    13,  3011,   531,   374,   375,
      16,   377,   564,   567,   138,   106,   264,   567,   559,   568,
     125,  3432,   275,  3434,  3435,   547,   546,   567,   560,   211,
     142,   561,   138,   196,   561,   138,   567,   332,   561,  3521,
     268,   269,   270,   271,   272,   273,   559,   413,   276,   277,
     278,   279,   280,   281,   560,   283,   547,   168,   168,   168,
     367,   394,   250,   426,   108,   533,  1769,   522,   169,  1801,
    3470,   851,  2572,  3078,  2862,  2549,    84,   384,  3575,  3621,
    3567,  3467,  3564,   390,  3048,  1338,  2856,   392,  3141,   396,
    2223,  1736,  2787,  2778,  1279,  2179,  1703,  1740,  2705,  2706,
    2133,  2708,  2810,  2810,   112,  2843,  3168,  2980,  3020,  2716,
    3011,  2779,  2734,   420,  3295,  3371,  3380,  2724,   126,  3160,
    3283,  1350,  3217,  2175,   431,   432,  3176,  2734,   494,  1671,
    1257,  2040,  2373,  1607,   844,  2742,  2146,   503,  2022,   860,
     148,  2054,  3201,   459,    23,    24,  3244,  2157,  2687,   778,
    2915,   159,  2759,  2017,  1118,  1622,  1850,  2688,   386,   387,
     467,  1024,  1334,  2749,  2771,  1120,  3270,  2008,  3170,  3139,
     971,  2778,  3564,  2935,  3176,    54,    55,    56,  2059,   951,
    2787,   189,  1183,  2700,    63,  2044,  1828,  2920,    67,  2699,
    2759,  3585,   449,   559,  3471,   894,   510,    76,   440,  1355,
    1371,   384,  3474,  3254,   511,   512,   214,  2690,  3013,  3501,
    3359,  1201,   220,  3602,    93,  2426,   399,  2943,  2742,   402,
    3126,  3224,   432,  1599,   761,  2705,   409,  2244,  1188,   108,
     413,  3230,   111,   433,  2221,   476,  1628,   420,   944,  1343,
    1191,  2853,   425,  3045,    -1,  2852,   765,    -1,    -1,   257,
     889,    -1,    -1,    -1,    -1,  2862,    -1,  2864,    -1,    -1,
      -1,   140,    -1,    -1,   447,    -1,    98,    99,   100,   101,
     102,    -1,    -1,  2852,    -1,    -1,  2883,    -1,    -1,    -1,
      -1,   464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   474,    -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,
      -1,    -1,    -1,   486,    -1,   488,   489,    -1,  2915,    -1,
     493,    -1,   495,  2920,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   504,   505,    -1,    -1,    -1,   509,    -1,  2935,    -1,
      -1,   514,   515,    -1,   517,   214,   519,   520,   170,    -1,
      -1,    -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3352,  3353,    -1,  3355,    -1,    -1,    -1,    -1,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2975,    -1,
     553,   203,   204,   205,   206,    -1,   384,    -1,    -1,    -1,
      -1,  3383,   390,    -1,    -1,    -1,    -1,    -1,   396,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3011,    -1,    -1,    -1,   287,  3498,
      -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   431,   432,    -1,    -1,    -1,    -1,  3036,
    3432,  3038,  3434,  3435,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    23,    24,    -1,   467,
      -1,    -1,    -1,    -1,   296,    -1,   298,   299,   300,    -1,
      -1,  3078,   351,    -1,   353,    -1,   308,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,   374,   375,    -1,   377,    -1,
      67,    -1,  3591,   511,   512,    -1,    -1,    -1,    -1,    76,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   706,   707,   708,    93,    -1,    -1,    -1,
      -1,  3138,  3621,    -1,   413,    -1,  3143,  3144,   370,    -1,
      -1,   108,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
    3157,    -1,    -1,    -1,    -1,    -1,    -1,   740,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   748,   749,    -1,    -1,    -1,
     753,    -1,    -1,   140,    -1,    -1,  3581,   760,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   417,   418,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3205,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   790,    -1,    -1,
    3217,    -1,    -1,    -1,  3616,   494,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   214,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   845,  3270,    -1,    -1,    -1,    -1,    -1,    -1,
     853,    -1,    -1,   856,    -1,    -1,   859,   860,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   530,  3306,
      -1,    -1,    -1,  3310,    -1,  3312,  3313,    -1,   891,   541,
     542,   894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,   905,    -1,    -1,    -1,    -1,   910,    -1,    -1,
    3337,    -1,    -1,    -1,   301,    -1,    -1,  3344,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3364,    -1,  3366,
      -1,  3368,     3,    -1,   947,  3344,   949,    -1,   951,    -1,
      -1,    -1,    13,    14,  3381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,    26,   353,    28,    -1,    -1,
    3397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   985,  3410,  3411,    46,    47,   374,   375,    -1,
     377,    52,    -1,    -1,    -1,    56,    57,    -1,    -1,    -1,
      -1,  3428,    -1,  3205,    -1,    -1,    -1,    -1,    69,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,  1027,    -1,   413,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3463,    -1,  3465,    -1,
      -1,  3468,   103,    -1,  3471,    -1,    -1,    -1,    -1,    -1,
      -1,   112,   113,   114,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   125,   126,    -1,    -1,    -1,  3496,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3505,  3506,
      -1,    -1,  1085,  3510,  3511,    -1,    -1,   148,    -1,    -1,
      -1,    -1,  3519,    -1,    -1,    -1,    -1,    -1,  3525,    -1,
      -1,    -1,    -1,   164,    -1,    -1,    -1,   494,  3310,    -1,
    3312,  3538,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
    3547,    -1,  3549,    -1,    -1,  3552,    -1,    -1,   189,    -1,
      -1,  3558,    -1,  3560,    -1,   196,    -1,    -1,   199,    -1,
      -1,  3568,    -1,  3570,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1155,    -1,  3581,    -1,  1159,    -1,  3585,   220,
      -1,    -1,  3589,    -1,  3591,    -1,    -1,    -1,    -1,  1172,
    1173,    -1,    -1,   234,    -1,  3602,    -1,    -1,  3605,  1182,
    1183,    -1,  3609,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1193,   252,    -1,  3620,  3621,    -1,   257,    -1,  1201,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3410,  3411,
      -1,    -1,  1215,  1216,  1217,  1218,    -1,    -1,    -1,    -1,
      -1,    -1,  1225,    -1,  1227,    -1,    -1,    -1,    -1,    -1,
    1233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3463,    -1,  3465,    -1,    -1,  3468,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     341,    -1,    -1,    -1,    -1,    -1,    -1,  1290,    -1,    -1,
    1293,    -1,    -1,    -1,  3496,    -1,    -1,    -1,    -1,    -1,
      -1,   362,    -1,    -1,  3506,    -1,    -1,    -1,   369,  3511,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3519,    -1,    -1,
      -1,    -1,    -1,  3525,    -1,    -1,    -1,    -1,   389,    -1,
     391,   392,    -1,    -1,   395,    -1,  3538,   398,  1341,   400,
    1343,  1344,  1345,    -1,   405,    -1,   407,  3549,    -1,    -1,
      -1,    -1,  1355,    -1,  1357,   416,  3558,    -1,  1361,   420,
      -1,    -1,    -1,  1366,    -1,   426,  3568,    -1,  3570,  1372,
     431,  1374,    -1,    -1,   435,    -1,  1379,  1380,    -1,  1382,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3589,    -1,    -1,
      -1,    -1,    -1,   454,    -1,    -1,    -1,   458,    -1,    -1,
      -1,    -1,    -1,  3605,    -1,    -1,    -1,  3609,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3620,    -1,
      -1,    -1,    -1,    -1,    -1,    13,    14,    -1,    -1,    -1,
      -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,    26,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   508,    -1,    -1,
     511,    -1,    -1,    -1,   515,    -1,    -1,    -1,    46,    47,
      -1,    -1,    -1,    -1,    52,    -1,    -1,    -1,    56,    57,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,    -1,
      -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    84,    -1,   559,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   112,   113,   114,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,   126,    -1,
      -1,    -1,  1545,    -1,  1547,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1596,    -1,    -1,  1599,    -1,    -1,    -1,
      -1,   189,  1605,  1606,  1607,  1608,    -1,    -1,   196,    -1,
      -1,   199,  1615,  1616,  1617,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    32,
    1633,    -1,   220,    -1,    37,    -1,    39,    40,    41,  1642,
      -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,
      -1,    -1,    55,    -1,    -1,    -1,  1659,    -1,    -1,    -1,
      -1,  1664,    -1,    -1,   252,    -1,    -1,    -1,    -1,   257,
      -1,    -1,    -1,  1676,    -1,    -1,    -1,    -1,    -1,  1682,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1740,   141,    -1,
      -1,  1744,    -1,    -1,    -1,    -1,    -1,    -1,  1751,    -1,
      -1,    -1,    -1,   341,    -1,    -1,    -1,    -1,   161,    -1,
     163,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   362,    -1,    -1,    -1,    -1,   182,
     183,   369,    -1,    -1,  1787,    -1,    -1,  1790,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   389,    -1,   391,   392,    -1,    -1,   395,    -1,    -1,
     398,    -1,   400,    -1,    -1,    -1,    -1,   405,    -1,   407,
      -1,   224,    -1,    -1,    -1,    -1,    -1,    -1,   416,    -1,
      -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,   426,  1842,
      -1,    -1,    -1,   431,    -1,    -1,  1849,   435,   251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,  1862,
     263,    -1,    -1,    -1,    -1,    -1,   454,    -1,    -1,    -1,
     458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,   292,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   492,  1908,    -1,    -1,   311,   312,
     313,    -1,    -1,    -1,   317,    -1,    -1,   320,    -1,    -1,
     508,    -1,    -1,   511,    -1,    -1,    -1,   515,    -1,    -1,
     333,   334,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      30,    -1,    32,    33,    -1,    -1,    -1,    -1,    -1,    -1,
     538,    -1,    -1,    -1,   357,    -1,   359,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    54,    55,    -1,    -1,    -1,    -1,
      -1,   559,    -1,    -1,    64,    -1,    66,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    83,    84,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2018,    -1,    -1,    -1,    -1,
      -1,   424,    -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2045,    -1,    -1,    -1,    -1,    -1,    -1,   139,
     140,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
    2063,  2064,    -1,    -1,    -1,    -1,    -1,  2070,    -1,  2072,
    2073,    -1,    -1,    -1,   477,   478,    -1,    -1,   481,   482,
     483,   484,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     6,    -1,   187,    -1,    -1,
     190,    -1,    13,  2106,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    23,    24,    -1,    -1,  2119,  2120,    -1,    -1,
     523,   524,    -1,   213,   214,    -1,  2129,   217,    -1,    -1,
      -1,    -1,  2135,    -1,    -1,  2138,    -1,    -1,  2141,   542,
      -1,    52,   232,    -1,    -1,    56,    -1,    -1,    -1,  2152,
    2153,    -1,  2155,    -1,    -1,    -1,    67,    -1,  2161,    -1,
      -1,    -1,    -1,   253,    -1,    76,    -1,  2170,   258,  2172,
      81,    -1,    -1,  2176,  2177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,    -1,    -1,    -1,   108,    -1,    -1,
     111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,  2222,
    2223,    -1,    -1,   134,   314,    -1,    -1,    -1,    -1,   140,
    2233,    -1,    -1,   323,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2244,    -1,  2246,  2247,  2248,  2249,    -1,    -1,    -1,
     340,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   365,   366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   214,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,  2355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,
    2373,    -1,    -1,    -1,  2377,    -1,   287,  2380,    -1,    -1,
      -1,    -1,   472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     301,  2394,  2395,  2396,    -1,   306,    -1,    -1,    -1,    -1,
    2403,    -1,    -1,    -1,    -1,    -1,    -1,  2410,    -1,    -1,
      -1,    -1,    -1,  2416,    -1,  2418,    -1,    -1,    -1,    -1,
      -1,  2424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   345,   525,    -1,    -1,    -1,   529,
     351,    -1,   353,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   374,   375,    -1,   377,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     391,  2484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2495,    -1,    -1,  2498,    -1,    -1,    -1,    -1,
      -1,    -1,   413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2529,    -1,    -1,    -1,
      -1,    -1,    -1,  2536,    -1,    -1,  2539,    -1,    -1,    -1,
    2543,  2544,    -1,    -1,  2547,    -1,    -1,  2550,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2558,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   494,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2705,  2706,    -1,  2708,    -1,   512,    -1,    -1,
      -1,    -1,    -1,  2716,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2734,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2742,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2759,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2771,    -1,
      -1,    -1,    -1,    -1,    -1,  2778,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2787,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   624,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2852,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2862,
      -1,  2864,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2883,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   700,    -1,    -1,    -1,   704,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2915,    -1,    -1,    -1,    -1,  2920,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2935,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2975,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3011,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3036,    -1,  3038,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   863,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3078,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3138,    -1,    -1,    -1,    -1,
    3143,  3144,    -1,    -1,    -1,    -1,    -1,   952,   953,   954,
      -1,    -1,    -1,    -1,  3157,    -1,   961,   962,    -1,    -1,
     965,    -1,   967,   968,   969,   970,    -1,    -1,    -1,    -1,
     975,    -1,    -1,   978,   979,    -1,   981,    -1,   983,   984,
      -1,   986,   987,   988,   989,   990,    -1,    -1,    -1,   994,
      -1,   996,   997,   998,    -1,  1000,  1001,  1002,  1003,    -1,
    1005,  1006,    -1,  1008,    -1,    -1,  1011,  1012,  1013,    -1,
    1015,  1016,  1017,  1018,  3217,  1020,  1021,  1022,  1023,    -1,
      -1,    -1,    -1,    -1,  1029,  1030,    -1,  1032,  1033,  1034,
    1035,  1036,    -1,    -1,    -1,    -1,  1041,    -1,  1043,  1044,
    1045,  1046,  1047,    -1,    -1,  1050,  1051,  1052,  1053,  1054,
    1055,    -1,  1057,  1058,    -1,    -1,  1061,  1062,  1063,    -1,
    1065,    -1,  1067,    -1,    -1,    -1,  1071,  3270,  1073,  1074,
      -1,    -1,    -1,    -1,  1079,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1087,  1088,  1089,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1097,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3306,    -1,    -1,    -1,    -1,    -1,    -1,
    3313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3337,    -1,    -1,    -1,    -1,    -1,
      -1,  3344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3364,    -1,  3366,    -1,  3368,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3397,    -1,  1201,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1210,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3428,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3471,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3505,    -1,    -1,    -1,    -1,  3510,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3547,    -1,    -1,    -1,    -1,  3552,
      -1,    -1,    -1,    -1,  1359,    -1,    -1,  3560,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3581,    -1,
      -1,    -1,  3585,    -1,    -1,    -1,    -1,    -1,  3591,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3602,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3621,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1521,  1522,  1523,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1602,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1753,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1829,    -1,    -1,  1832,    -1,    -1,
    1835,  1836,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1848,    -1,    -1,  1851,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1864,
      -1,  1866,    -1,    -1,    -1,  1870,    -1,  1872,  1873,    -1,
      -1,    -1,  1877,    -1,  1879,  1880,    -1,  1882,    -1,    -1,
    1885,    -1,  1887,  1888,    -1,    -1,    -1,    -1,  1893,  1894,
      -1,    -1,  1897,    -1,  1899,    -1,  1901,    -1,  1903,    -1,
    1905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1916,  1917,    -1,    -1,  1920,    -1,  1922,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1930,  1931,    -1,  1933,    -1,
    1935,    -1,    -1,  1938,  1939,  1940,    -1,  1942,    -1,    -1,
      -1,    -1,  1947,  1948,  1949,  1950,    -1,    -1,    -1,    -1,
    1955,  1956,  1957,    -1,  1959,    -1,  1961,    -1,  1963,    -1,
    1965,    -1,  1967,    -1,    -1,    -1,    -1,    -1,    -1,  1974,
      -1,  1976,    -1,    -1,  1979,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2251,    -1,    -1,    -1,
    2255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2340,    -1,  2342,    -1,  2344,
      -1,    -1,    -1,    -1,    -1,  2350,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2419,    -1,    -1,    -1,  2423,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2479,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2607,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2617,    -1,    -1,    -1,    -1,    -1,  2623,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2632,  2633,    -1,
      -1,    -1,    -1,  2638,    -1,    -1,    -1,  2642,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2655,    -1,    -1,    -1,    -1,    -1,  2661,    -1,    -1,  2664,
    2665,    -1,  2667,  2668,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2682,  2683,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2743,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2958,  2959,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2969,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3086,    -1,    -1,    -1,    -1,    -1,  3092,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3113,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3248,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3263,    -1,
    3265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3340,    -1,    -1,    -1,    -1,
      -1,    -1,  3347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3400,    -1,    -1,    -1,    -1,
    3405,    -1,  3407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3438,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
    3515,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    42,    43,    -1,    45,    46,    -1,  3542,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,  3592,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,   193,   194,    -1,   196,   197,    -1,   199,   200,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,   210,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,   237,   238,    -1,   240,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,   486,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,   540,
      -1,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
     551,   552,    -1,    -1,    -1,    -1,   557,    -1,   559,    -1,
      -1,   562,   563,    -1,   565,   566,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,   193,   194,    -1,   196,   197,    -1,
     199,   200,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,   540,    -1,   542,    -1,    -1,    -1,    -1,   547,    -1,
      -1,    -1,   551,   552,    -1,    -1,    -1,    -1,   557,    -1,
     559,    -1,    -1,   562,   563,    -1,   565,   566,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,   193,   194,    -1,   196,
     197,    -1,   199,   200,    -1,   202,    -1,    -1,    -1,   206,
     207,   208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,    -1,    -1,    -1,   294,   295,   296,
     297,    -1,    -1,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,   420,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
      -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,
     537,   538,    -1,   540,    -1,   542,    -1,    -1,    -1,    -1,
     547,    -1,    -1,    -1,   551,   552,    -1,    -1,    -1,    -1,
     557,    -1,   559,    -1,    -1,   562,   563,    -1,   565,   566,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,   193,   194,
      -1,   196,   197,    -1,   199,   200,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,   210,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   236,   237,   238,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,    -1,   540,    -1,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,   551,   552,    -1,    -1,
      -1,    -1,   557,    -1,   559,   560,    -1,   562,   563,    -1,
     565,   566,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
     193,   194,    -1,   196,   197,    -1,   199,   200,    -1,   202,
      -1,    -1,    -1,   206,   207,   208,   209,   210,    -1,   212,
     213,    -1,    -1,    -1,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,    -1,    -1,
      -1,   294,   295,   296,   297,    -1,    -1,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,    -1,   528,   529,   530,    -1,    -1,
      -1,    -1,   535,    -1,   537,   538,    -1,   540,    -1,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,   551,   552,
      -1,    -1,    -1,    -1,   557,    -1,   559,   560,    -1,   562,
     563,    -1,   565,   566,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,   193,   194,    -1,   196,   197,    -1,   199,   200,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,   210,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,   237,   238,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,   540,
      -1,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
     551,   552,    -1,    -1,    -1,    -1,   557,    -1,   559,   560,
      -1,   562,   563,    -1,   565,   566,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,   193,   194,    -1,   196,   197,    -1,
     199,   200,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,   540,    -1,   542,    -1,    -1,    -1,    -1,   547,    -1,
      -1,    -1,   551,   552,    -1,    -1,    -1,    -1,   557,    -1,
     559,   560,    -1,   562,   563,    -1,   565,   566,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,   193,   194,    -1,   196,
     197,    -1,   199,   200,    -1,   202,    -1,    -1,    -1,   206,
     207,   208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,    -1,    -1,    -1,   294,   295,   296,
     297,    -1,    -1,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
      -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,
     537,   538,    -1,   540,    -1,   542,    -1,    -1,    -1,    -1,
     547,    -1,    -1,    -1,   551,   552,    -1,    -1,    -1,    -1,
     557,    -1,   559,    -1,    -1,   562,   563,    -1,   565,   566,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,   171,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,   193,   194,
      -1,   196,   197,    -1,   199,   200,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,   210,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   236,   237,   238,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,    -1,   540,    -1,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,   551,   552,    -1,    -1,
      -1,    -1,   557,    -1,   559,    -1,    -1,   562,   563,    -1,
     565,   566,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
     193,   194,    -1,   196,   197,    -1,   199,   200,    -1,   202,
      -1,    -1,    -1,   206,   207,   208,   209,   210,    -1,   212,
     213,    -1,    -1,    -1,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,    -1,    -1,
      -1,   294,   295,   296,   297,    -1,    -1,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,    -1,   528,   529,   530,    -1,    -1,
      -1,    -1,   535,    -1,   537,   538,    -1,   540,    -1,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,   551,   552,
      -1,    -1,    -1,    -1,   557,    -1,   559,    -1,    -1,   562,
     563,    -1,   565,   566,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,   193,   194,    -1,   196,   197,    -1,   199,   200,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,   210,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,   237,   238,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,   540,
      -1,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
     551,   552,    -1,    -1,    -1,    -1,   557,    -1,   559,    -1,
      -1,   562,   563,    -1,   565,   566,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    32,    33,    34,    35,    36,    37,    38,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    50,    51,    -1,    53,    54,    55,    56,    -1,    58,
      59,    60,    61,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    -1,    77,    -1,
      79,    -1,    81,    82,    83,    -1,    -1,    86,    87,    88,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    -1,
      -1,    -1,    -1,   102,   103,   104,    -1,    -1,   107,   108,
     109,    -1,   111,    -1,    -1,    -1,   115,   116,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,   133,   134,    -1,   136,   137,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,   162,    -1,   164,    -1,    -1,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,   193,   194,    -1,   196,   197,    -1,
     199,   200,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,   251,    -1,   253,   254,    -1,   256,    -1,   258,
     259,    -1,    -1,   262,    -1,    -1,    -1,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,    -1,   323,   324,   325,   326,    -1,   328,
     329,    -1,   331,   332,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,    -1,   497,   498,
     499,   500,    -1,   502,    -1,    -1,   505,   506,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,   540,    -1,   542,    -1,    -1,    -1,    -1,   547,    -1,
      -1,    -1,   551,   552,    -1,    -1,    -1,    -1,   557,    -1,
     559,    -1,    -1,   562,   563,    -1,   565,   566,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    32,    33,    34,    35,    36,
      37,    38,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    50,    51,    -1,    53,    54,    55,    56,
      -1,    58,    59,    60,    61,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    72,    73,    74,    -1,    -1,
      77,    -1,    79,    -1,    81,    82,    83,    -1,    -1,    86,
      87,    88,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    -1,    -1,    -1,    -1,   102,   103,   104,    -1,    -1,
     107,   108,   109,    -1,   111,    -1,    -1,    -1,   115,   116,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,   133,   134,    -1,   136,
     137,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,   162,    -1,   164,    -1,    -1,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,   193,   194,    -1,   196,
     197,    -1,   199,   200,    -1,   202,    -1,    -1,    -1,   206,
     207,   208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,   251,    -1,   253,   254,    -1,   256,
      -1,   258,   259,    -1,    -1,   262,    -1,    -1,    -1,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,    -1,    -1,    -1,   294,   295,   296,
     297,    -1,    -1,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,    -1,   331,   332,    -1,   334,   335,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,   490,   491,   492,   493,   494,   495,    -1,
     497,   498,   499,   500,    -1,   502,    -1,    -1,   505,   506,
     507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
      -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,
     537,   538,    -1,   540,    -1,   542,    -1,    -1,    -1,    -1,
     547,    -1,    -1,    -1,   551,   552,    -1,    -1,    -1,    -1,
     557,    -1,   559,    -1,    -1,   562,   563,    -1,   565,   566,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    32,    33,    34,
      35,    36,    37,    38,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    50,    51,    -1,    53,    54,
      55,    56,    -1,    58,    59,    60,    61,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    72,    73,    74,
      -1,    -1,    77,    -1,    79,    -1,    81,    82,    83,    -1,
      -1,    86,    87,    88,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    -1,    -1,    -1,    -1,   102,   103,   104,
      -1,    -1,   107,   108,   109,    -1,   111,    -1,    -1,    -1,
     115,   116,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,   133,   134,
      -1,   136,   137,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,   162,    -1,   164,
      -1,    -1,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,   193,   194,
      -1,   196,   197,    -1,   199,   200,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,   210,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   236,   237,   238,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,   251,    -1,   253,   254,
      -1,   256,    -1,   258,   259,    -1,    -1,   262,    -1,    -1,
      -1,    -1,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,    -1,   331,   332,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,    -1,   502,    -1,    -1,
     505,   506,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,    -1,   540,    -1,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,   551,   552,    -1,    -1,
      -1,    -1,   557,    -1,   559,    -1,    -1,   562,   563,    -1,
     565,   566,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    32,
      33,    34,    35,    36,    37,    38,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    50,    51,    -1,
      53,    54,    55,    56,    -1,    58,    59,    60,    61,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    -1,    79,    -1,    81,    82,
      83,    -1,    -1,    86,    87,    88,    -1,    90,    91,    -1,
      93,    94,    95,    96,    97,    -1,    -1,    -1,    -1,   102,
     103,   104,    -1,    -1,   107,   108,   109,    -1,   111,    -1,
      -1,    -1,   115,   116,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
     133,   134,    -1,   136,   137,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,   149,    -1,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
      -1,   164,    -1,    -1,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
     193,   194,    -1,   196,   197,    -1,   199,   200,    -1,   202,
      -1,    -1,    -1,   206,   207,   208,   209,   210,    -1,   212,
     213,    -1,    -1,    -1,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,   251,    -1,
     253,   254,    -1,   256,    -1,   258,   259,    -1,    -1,   262,
      -1,    -1,    -1,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,    -1,    -1,
      -1,   294,   295,   296,   297,    -1,    -1,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,    -1,   331,   332,
      -1,   334,   335,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,   490,   491,   492,
     493,   494,   495,    -1,   497,   498,   499,   500,    -1,   502,
      -1,    -1,   505,   506,   507,    -1,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,    -1,   528,   529,   530,    -1,    -1,
      -1,    -1,   535,    -1,   537,   538,    -1,   540,    -1,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,   551,   552,
      -1,    -1,    -1,    -1,   557,    -1,   559,    -1,    -1,   562,
     563,    -1,   565,   566,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    32,    33,    34,    35,    36,    37,    38,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    50,
      51,    -1,    53,    54,    55,    56,    -1,    58,    59,    60,
      61,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    -1,    77,    -1,    79,    -1,
      81,    82,    83,    -1,    -1,    86,    87,    88,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    -1,    -1,    -1,
      -1,   102,   103,   104,    -1,    -1,   107,   108,   109,    -1,
     111,    -1,    -1,    -1,   115,   116,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,   133,   134,    -1,   136,   137,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,   162,    -1,   164,    -1,    -1,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,   193,   194,    -1,   196,   197,    -1,   199,   200,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,   210,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,   237,   238,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
     251,    -1,   253,   254,    -1,   256,    -1,   258,   259,    -1,
      -1,   262,    -1,    -1,    -1,    -1,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,    -1,   323,   324,   325,   326,    -1,   328,   329,    -1,
     331,   332,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,   490,
     491,   492,   493,   494,   495,    -1,   497,   498,   499,   500,
      -1,   502,    -1,    -1,   505,   506,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,   540,
      -1,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,
     551,   552,    -1,    -1,    -1,    -1,   557,    -1,   559,    -1,
      -1,   562,   563,    -1,   565,   566,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    78,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,   174,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,
     199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,    -1,    -1,   212,   213,   214,    -1,    -1,   217,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,   233,    -1,    -1,   236,    -1,   238,
      -1,    -1,    -1,   242,    -1,    -1,   245,    -1,   247,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,
      -1,    -1,   311,   312,   313,   314,   315,   316,   317,    -1,
      -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,
     329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,   420,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
     439,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,    -1,    -1,   542,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,   566,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    78,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,   174,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,   214,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,   233,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,   439,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,    -1,   542,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,   566,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,
     221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,
      -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,   287,    -1,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,
     311,   312,   313,   314,   315,   316,   317,    -1,    -1,   320,
     321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,
      -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,   420,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,
      -1,   542,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   560,
      -1,    23,    24,    25,    26,   566,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,    -1,
     542,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,   560,    17,
      -1,    -1,    20,   565,   566,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,
      -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,
     238,    -1,    -1,    -1,   242,    -1,    -1,   245,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,    -1,    -1,    -1,   542,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,   566,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,
     199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,
      -1,    -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,
      -1,    -1,   311,   312,   313,   314,   315,   316,   317,    -1,
      -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,
     329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,    -1,    -1,   542,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,   553,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,   566,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,    -1,   542,    -1,    -1,    -1,    -1,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,   559,
      -1,    17,    -1,    -1,    20,    -1,   566,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,    -1,   542,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   565,
     566,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,    -1,
     542,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,
      23,    24,    25,    26,   566,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,
      53,    54,    -1,    56,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
     103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,
      -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,   202,
      -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,
     213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,
      -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,
      -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,
      -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,
     253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,
      -1,   294,   295,   296,   297,    -1,    -1,   300,   301,    -1,
      -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,
     313,   314,   315,   316,   317,    -1,    -1,   320,   321,    -1,
     323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,
      -1,   334,   335,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,
     393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,
     403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,
     413,   414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
     433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,
      -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,
      -1,    -1,   535,    -1,   537,   538,    -1,    -1,    -1,   542,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,   566,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,    -1,   542,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,
      25,    26,   566,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,    -1,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,
     245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,
      -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,   314,
     315,   316,   317,    -1,    -1,   320,   321,    -1,   323,   324,
     325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,
     525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,    -1,    -1,    -1,   542,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,   566,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
     246,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,     5,   542,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,   565,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,   246,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,     5,   542,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,   565,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,   246,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,     5,   542,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,
      28,   565,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,
      68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,
      -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
     188,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,   197,
      -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,
     238,    -1,    -1,    -1,   242,   243,    -1,   245,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,
      -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,
     408,    -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,
     418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,
      -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,    -1,   547,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,   561,    -1,    20,    -1,    -1,    23,    24,
      25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,
      -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
     125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,    -1,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,
     245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,
      -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,   314,
     315,   316,   317,    -1,    -1,   320,   321,    -1,   323,   324,
     325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,   392,   393,    -1,
      -1,   396,    -1,   398,   399,   400,    -1,   402,   403,    -1,
      -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,   414,
     415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,
     435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,
     455,    -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,
     525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,    -1,    -1,    -1,   542,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,   553,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,
      -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
      -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,
     197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,
     207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,
     217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,
      -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,
      -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,
      -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
     287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,
     297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,
      -1,   308,    -1,    -1,   311,   312,   313,   314,   315,   316,
     317,    -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,
      -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,
      -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,
     407,   408,    -1,   410,   411,    -1,   413,   414,   415,   416,
      -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,
      -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,
      -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,
     537,   538,    -1,    -1,    -1,   542,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,   553,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,
      49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,   148,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,
     159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,
     199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,
     229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,
      -1,    -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,
      -1,    -1,   311,   312,   313,   314,   315,   316,   317,    -1,
      -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,
     329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,
     399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,
      -1,   410,   411,    -1,   413,   414,   415,   416,    -1,   418,
     419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
      -1,    -1,    -1,   542,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,   553,    -1,    17,    -1,    -1,    20,
      -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,
      51,    -1,    53,    54,    -1,    56,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,
     161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,
     221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,
      -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,   287,    -1,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,
     311,   312,   313,   314,   315,   316,   317,    -1,    -1,   320,
     321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,
      -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,   400,
      -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,
     411,    -1,   413,   414,   415,   416,    -1,   418,   419,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,   433,   434,   435,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,
      -1,   542,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,   553,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,    -1,
      33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,
      53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,    62,
      -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,
      -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,
      93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,
      -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,
      -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,
      -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,   132,
      -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,
      -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,
     153,    -1,    -1,   156,   157,    -1,   159,   160,   161,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,
     173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,   188,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,   202,
      -1,    -1,    -1,   206,   207,   208,   209,   210,    -1,   212,
     213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,
      -1,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,   238,    -1,    -1,    -1,   242,
     243,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,
     253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,
      -1,   294,   295,   296,   297,    -1,    -1,   300,   301,    -1,
      -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,
     313,   314,   315,   316,   317,    -1,    -1,   320,   321,    -1,
     323,   324,   325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   334,   335,   336,    -1,   338,   339,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,
     353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,
     363,    -1,   365,    -1,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,
     383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,
     393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,
     403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,
     413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,
      -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,
      -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,
      -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,
     473,   474,    -1,    -1,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,
     493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,
     513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,
      -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,    -1,    -1,    -1,   542,
      -1,    -1,   545,     5,   547,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,    51,
      -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,   188,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,   210,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,    -1,    -1,   235,    -1,    -1,   238,    -1,    -1,    -1,
     242,   243,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
      -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,    -1,
     402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,   411,
      -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
      -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,    -1,   535,    -1,   537,    -1,    -1,    -1,    -1,
     542,    -1,    -1,   545,     5,   547,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    -1,    23,    24,    25,    -1,    -1,    28,    -1,    30,
      -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,
      41,    -1,    43,    -1,    -1,    -1,    -1,    -1,    49,    -1,
      51,    -1,    53,    -1,    -1,    -1,    -1,    58,    59,    60,
      -1,    62,    -1,    64,    65,    -1,    -1,    68,    -1,    70,
      71,    -1,    -1,    74,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,
      -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,
     111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,
     121,    -1,    -1,    -1,    -1,    -1,    -1,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,
     141,    -1,    -1,   144,    -1,   146,   147,    -1,    -1,    -1,
     151,    -1,   153,    -1,    -1,   156,   157,    -1,   159,   160,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,   170,
      -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,   187,   188,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,
      -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,   210,
      -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,
     221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,    -1,    -1,   235,    -1,    -1,   238,    -1,    -1,
      -1,   242,   243,    -1,   245,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,
      -1,    -1,    -1,   264,    -1,    -1,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,    -1,   285,   286,   287,    -1,   289,   290,
      -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,
     301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,
     311,   312,   313,   314,   315,   316,   317,    -1,    -1,   320,
     321,    -1,   323,   324,   325,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,   340,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     351,   352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,
      -1,    -1,   363,    -1,   365,    -1,   367,   368,    -1,   370,
     371,   372,   373,   374,   375,   376,   377,    -1,    -1,    -1,
      -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,   390,
      -1,    -1,   393,   394,    -1,   396,    -1,    -1,   399,    -1,
      -1,   402,   403,   404,    -1,    -1,    -1,   408,    -1,   410,
     411,    -1,   413,   414,   415,    -1,    -1,   418,    -1,    -1,
      -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
      -1,   432,    -1,   434,    -1,    -1,   437,   438,    -1,    -1,
      -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,
     451,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,    -1,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,    -1,   473,   474,    -1,    -1,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,
      -1,    -1,   493,   494,   495,    -1,    -1,   498,   499,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,
      -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,    -1,    -1,
      -1,   542,    -1,    -1,    -1,     5,   547,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    23,    24,    25,    -1,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    -1,    -1,    -1,    -1,    49,
      -1,    51,    -1,    53,    -1,    -1,    -1,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    -1,    68,    -1,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,    -1,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,    -1,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,   157,    -1,   159,
     160,   161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,   188,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,   197,    -1,    -1,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
     210,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,    -1,    -1,   235,    -1,    -1,   238,    -1,
      -1,    -1,   242,   243,    -1,   245,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,    -1,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,    -1,   393,   394,    -1,   396,    -1,    -1,   399,
      -1,    -1,   402,   403,   404,    -1,    -1,    -1,   408,    -1,
     410,   411,    -1,   413,   414,   415,    -1,    -1,   418,    -1,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,    -1,   434,    -1,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,    -1,   455,    -1,    -1,    -1,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,    -1,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,    -1,
      -1,    -1,   542,    -1,    -1,    -1,     5,   547,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,    28,
      -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,
      -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,    -1,
      49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,    58,
      59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,    68,
      -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,
      -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,
      -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,
     119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
     139,   140,   141,    -1,    -1,   144,    -1,   146,   147,    -1,
      -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,    -1,
     159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,   188,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,   197,    -1,
      -1,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,
     209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,
      -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,   238,
      -1,    -1,    -1,   242,   243,    -1,   245,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,
      -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,
      -1,    -1,   311,   312,   313,   314,   315,   316,   317,    -1,
      -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,
     339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,
     359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,   368,
      -1,   370,   371,   372,   373,   374,   375,   376,   377,    -1,
      -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,
      -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,    -1,
     399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,   408,
      -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,   418,
      -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,   438,
      -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,
      -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,    -1,
     459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,
     489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,   498,
     499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,    -1,
      -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,
     529,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
      -1,    -1,    -1,   542,    -1,    -1,    -1,     5,   547,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    -1,
      68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
      -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,   157,
      -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
     188,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,   197,
      -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,
     238,    -1,    -1,    -1,   242,   243,    -1,   245,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,    -1,
      -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,    -1,
     408,    -1,   410,   411,    -1,   413,   414,   415,    -1,    -1,
     418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,    -1,
      -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,     5,   547,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,    -1,
      -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,    -1,
      -1,    58,    59,    60,    -1,    62,    -1,    64,    65,    -1,
      -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,
      97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,
     117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,    -1,
      -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
      -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,   146,
     147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,
     157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
     187,   188,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
     197,    -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,   206,
     207,   208,   209,   210,    -1,   212,   213,    -1,    -1,    -1,
     217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,    -1,    -1,   235,    -1,
      -1,   238,    -1,    -1,    -1,   242,   243,    -1,   245,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,
      -1,   258,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
     287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,
     297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,
      -1,   308,    -1,    -1,   311,   312,   313,   314,   315,   316,
     317,    -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,   335,   336,
      -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,
     357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,    -1,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,
     387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,   396,
      -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,    -1,
      -1,   408,    -1,   410,   411,    -1,   413,   414,   415,    -1,
      -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,    -1,
     437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,
      -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,    -1,
      -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
     487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,    -1,
      -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,
      -1,   528,   529,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,     5,
     547,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,
      -1,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    51,    -1,    53,    -1,    -1,
      -1,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    -1,    68,    -1,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,    -1,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,   157,    -1,   159,   160,   161,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,   188,    -1,   190,    -1,    -1,    -1,    -1,    -1,
      -1,   197,    -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,   210,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,    -1,    -1,   235,
      -1,    -1,   238,    -1,    -1,    -1,   242,   243,    -1,   245,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,    -1,   393,   394,    -1,
     396,    -1,    -1,   399,    -1,    -1,   402,   403,   404,    -1,
      -1,    -1,   408,    -1,   410,   411,    -1,   413,   414,   415,
      -1,    -1,   418,    -1,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,    -1,   434,    -1,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,    -1,   455,
      -1,    -1,    -1,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,    -1,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,
       5,   547,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    23,    24,
      25,    -1,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    51,    -1,    53,    -1,
      -1,    -1,    -1,    58,    59,    60,    -1,    62,    -1,    64,
      65,    -1,    -1,    68,    -1,    70,    71,    -1,    -1,    74,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,
      -1,    -1,    97,    -1,    -1,    -1,    -1,   102,    -1,    -1,
      -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,
      -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,
      -1,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,    -1,    -1,   139,   140,   141,    -1,    -1,   144,
      -1,   146,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,
      -1,   156,   157,    -1,   159,   160,   161,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,
     175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,   187,   188,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,   197,    -1,    -1,    -1,    -1,   202,    -1,    -1,
      -1,   206,   207,   208,   209,   210,    -1,   212,   213,    -1,
      -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,    -1,    -1,
     235,    -1,    -1,   238,    -1,    -1,    -1,   242,   243,    -1,
     245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,    -1,
     285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,
     295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,
      -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,   314,
     315,   316,   317,    -1,    -1,   320,   321,    -1,   323,   324,
     325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,
     335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,
     355,    -1,   357,    -1,   359,    -1,    -1,    -1,   363,    -1,
     365,    -1,   367,   368,    -1,   370,   371,   372,   373,   374,
     375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,
      -1,   386,   387,   388,    -1,   390,    -1,    -1,   393,   394,
      -1,   396,    -1,    -1,   399,    -1,    -1,   402,   403,   404,
      -1,    -1,    -1,   408,    -1,   410,   411,    -1,   413,   414,
     415,    -1,    -1,   418,    -1,    -1,    -1,    -1,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,    -1,   432,    -1,   434,
      -1,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
     445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,    -1,
     455,    -1,    -1,    -1,   459,    -1,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,   474,
      -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,   487,    -1,   489,    -1,    -1,    -1,   493,   494,
     495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,
     525,    -1,    -1,   528,   529,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,    -1,    -1,    -1,   542,    -1,    -1,
      -1,     5,   547,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
     104,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,   162,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,   200,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,   326,   327,    -1,   329,    -1,    -1,   332,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,   441,   442,   443,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,   497,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,     5,   542,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    32,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
     108,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,   142,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,
      -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,
     238,    -1,    -1,    -1,   242,    -1,    -1,   245,   246,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,   427,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,    -1,    -1,     5,   542,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      32,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,   108,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,   246,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,     5,
     542,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    32,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,   108,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
     246,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,     5,   542,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    88,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,   246,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,     5,   542,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      34,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,   200,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,     5,   542,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      88,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,
      -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,
     238,    -1,    -1,    -1,   242,    -1,    -1,   245,   246,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,    -1,    -1,     5,   542,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      32,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,   246,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,     5,
     542,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,   108,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
     246,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,     5,   542,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,   246,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,     5,   542,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    18,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,     5,   542,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    80,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,   150,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,
      -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,
     238,    -1,    -1,    -1,   242,    -1,    -1,   245,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,    -1,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,    -1,    -1,     5,   542,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,     5,
     542,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,   108,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,     5,   542,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,   108,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,     5,   542,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      24,    25,    26,    -1,    28,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    45,    46,    -1,    -1,    49,    -1,    51,    -1,    53,
      54,    -1,    56,    -1,    58,    59,    60,    -1,    62,    -1,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,   138,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,   148,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,   196,   197,    -1,   199,    -1,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,   236,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
     364,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,   392,   393,
      -1,    -1,   396,    -1,   398,   399,   400,    -1,   402,   403,
      -1,    -1,    -1,   407,   408,    -1,   410,   411,    -1,   413,
     414,   415,   416,    -1,   418,   419,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,   433,
     434,   435,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
     454,   455,    -1,    -1,   458,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,   502,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,    -1,    -1,     5,   542,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    24,    25,    26,    -1,
      28,    -1,    30,    -1,    -1,    33,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    -1,    45,    46,    -1,
      -1,    49,    -1,    51,    -1,    53,    54,    -1,    56,    -1,
      58,    59,    60,    -1,    62,    -1,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    -1,    77,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,
      -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    97,
      -1,    -1,    -1,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,   111,    -1,    -1,    -1,    -1,    -1,   117,
      -1,   119,   120,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,    -1,
     138,   139,   140,   141,    -1,    -1,   144,    -1,   146,   147,
     148,    -1,    -1,   151,    -1,   153,    -1,    -1,   156,    -1,
      -1,   159,   160,   161,    -1,    -1,   164,    -1,    -1,    -1,
      -1,   169,   170,    -1,    -1,   173,    -1,   175,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,   187,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   196,   197,
      -1,   199,    -1,    -1,   202,    -1,    -1,    -1,   206,   207,
     208,   209,    -1,    -1,   212,   213,    -1,    -1,    -1,   217,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   225,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,
     238,    -1,    -1,    -1,   242,    -1,    -1,   245,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,   256,    -1,
     258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,   287,
      -1,   289,   290,    -1,    -1,    -1,   294,   295,   296,   297,
      -1,    -1,   300,   301,    -1,    -1,   304,    -1,   306,    -1,
     308,    -1,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,    -1,   320,   321,    -1,   323,   324,   325,    -1,    -1,
      -1,   329,    -1,    -1,    -1,    -1,   334,   335,   336,    -1,
     338,   339,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   351,   352,   353,    -1,   355,    -1,   357,
      -1,   359,    -1,    -1,   362,   363,    -1,   365,    -1,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
      -1,    -1,    -1,    -1,   382,   383,    -1,    -1,   386,   387,
     388,    -1,   390,    -1,   392,   393,    -1,    -1,   396,    -1,
     398,   399,   400,    -1,   402,   403,    -1,    -1,    -1,   407,
     408,    -1,   410,   411,    -1,   413,   414,   415,   416,    -1,
     418,   419,    -1,    -1,    -1,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,    -1,   432,   433,   434,   435,    -1,   437,
     438,    -1,    -1,    -1,    -1,    -1,    -1,   445,   446,    -1,
     448,    -1,    -1,   451,    -1,    -1,   454,   455,    -1,    -1,
     458,   459,    -1,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,    -1,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,   494,   495,    -1,    -1,
     498,   499,    -1,    -1,   502,    -1,    -1,    -1,    -1,   507,
      -1,    -1,   510,    -1,    -1,   513,   514,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   522,    -1,    -1,   525,    -1,    -1,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,    -1,    -1,     5,   542,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    24,    25,    26,    -1,    28,    -1,    30,    -1,
      -1,    33,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,
      -1,    43,    -1,    45,    46,    -1,    -1,    49,    -1,    51,
      -1,    53,    54,    -1,    56,    -1,    58,    59,    60,    -1,
      62,    -1,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    -1,    77,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,
      -1,    93,    94,    -1,    -1,    97,    -1,    -1,    -1,    -1,
     102,   103,    -1,    -1,    -1,    -1,   108,   109,    -1,   111,
      -1,    -1,    -1,    -1,    -1,   117,    -1,   119,   120,   121,
      -1,    -1,    -1,   125,    -1,    -1,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,    -1,   138,   139,   140,   141,
      -1,    -1,   144,    -1,   146,   147,   148,    -1,    -1,   151,
      -1,   153,    -1,    -1,   156,    -1,    -1,   159,   160,   161,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,   170,    -1,
      -1,   173,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,   196,   197,    -1,   199,    -1,    -1,
     202,    -1,    -1,    -1,   206,   207,   208,   209,    -1,    -1,
     212,   213,    -1,    -1,    -1,   217,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   225,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    -1,    -1,   236,    -1,   238,    -1,    -1,    -1,
     242,    -1,    -1,   245,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,   256,    -1,   258,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,   287,    -1,   289,   290,    -1,
      -1,    -1,   294,   295,   296,   297,    -1,    -1,   300,   301,
      -1,    -1,   304,    -1,   306,    -1,   308,    -1,    -1,   311,
     312,   313,   314,   315,   316,   317,    -1,    -1,   320,   321,
      -1,   323,   324,   325,    -1,    -1,    -1,   329,    -1,    -1,
      -1,    -1,   334,   335,   336,    -1,   338,   339,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,
     352,   353,    -1,   355,    -1,   357,    -1,   359,    -1,    -1,
     362,   363,    -1,   365,    -1,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,    -1,    -1,    -1,    -1,
     382,   383,    -1,    -1,   386,   387,   388,    -1,   390,    -1,
     392,   393,    -1,    -1,   396,    -1,   398,   399,   400,    -1,
     402,   403,    -1,    -1,    -1,   407,   408,    -1,   410,   411,
      -1,   413,   414,   415,   416,    -1,   418,   419,    -1,    -1,
      -1,   423,   424,   425,    -1,    -1,   428,    -1,    -1,    -1,
     432,   433,   434,   435,    -1,   437,   438,    -1,    -1,    -1,
      -1,    -1,    -1,   445,   446,    -1,   448,    -1,    -1,   451,
      -1,    -1,   454,   455,    -1,    -1,   458,   459,    -1,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
      -1,   473,   474,    -1,    -1,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,   494,   495,    -1,    -1,   498,   499,    -1,    -1,
     502,    -1,    -1,    -1,    -1,   507,    -1,    -1,   510,    -1,
      -1,   513,   514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     522,    -1,    -1,   525,    -1,    -1,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,    -1,    -1,     5,
     542,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    24,    25,
      26,    -1,    28,    -1,    30,    -1,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    40,    41,    -1,    43,    -1,    45,
      46,    -1,    -1,    49,    -1,    51,    -1,    53,    54,    -1,
      56,    -1,    58,    59,    60,    -1,    62,    -1,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      -1,    77,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
      86,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,
      -1,    97,    -1,    -1,    -1,    -1,   102,   103,    -1,    -1,
      -1,    -1,    -1,   109,    -1,   111,    -1,    -1,    -1,    -1,
      -1,   117,    -1,   119,   120,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,    -1,   138,   139,   140,   141,    -1,    -1,   144,    -1,
     146,   147,   148,    -1,    -1,   151,    -1,   153,    -1,    -1,
     156,    -1,    -1,   159,   160,   161,    -1,    -1,   164,    -1,
      -1,    -1,    -1,   169,   170,    -1,    -1,   173,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,   187,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     196,   197,    -1,   199,    -1,    -1,   202,    -1,    -1,    -1,
     206,   207,   208,   209,    -1,    -1,   212,   213,    -1,    -1,
      -1,   217,    -1,    -1,    -1,   221,    -1,    -1,    -1,   225,
      -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     236,    -1,   238,    -1,    -1,    -1,   242,    -1,    -1,   245,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
     256,    -1,   258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,   287,    -1,   289,   290,    -1,    -1,    -1,   294,   295,
     296,   297,    -1,    -1,   300,   301,    -1,    -1,   304,    -1,
     306,    -1,   308,    -1,    -1,   311,   312,   313,   314,   315,
     316,   317,    -1,    -1,   320,   321,    -1,   323,   324,   325,
      -1,    -1,    -1,   329,    -1,    -1,    -1,    -1,   334,   335,
     336,    -1,   338,   339,   340,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   351,   352,   353,    -1,   355,
      -1,   357,    -1,   359,    -1,    -1,   362,   363,    -1,   365,
      -1,   367,   368,    -1,   370,   371,   372,   373,   374,   375,
     376,   377,    -1,    -1,    -1,    -1,   382,   383,    -1,    -1,
     386,   387,   388,    -1,   390,    -1,   392,   393,    -1,    -1,
     396,    -1,   398,   399,   400,    -1,   402,   403,    -1,    -1,
      -1,   407,   408,    -1,   410,   411,    -1,   413,   414,   415,
     416,    -1,   418,   419,    -1,    -1,    -1,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,    -1,   432,   433,   434,   435,
      -1,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,   448,    -1,    -1,   451,    -1,    -1,   454,   455,
      -1,    -1,   458,   459,    -1,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,    -1,   473,   474,    -1,
      -1,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,   494,   495,
      -1,    -1,   498,   499,    -1,    -1,   502,    -1,    -1,    -1,
      -1,   507,    -1,    -1,   510,    -1,    -1,   513,   514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,    -1,   525,
      -1,    -1,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,    -1,    -1,     5,   542,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    -1,    23,    24,    25,    26,    -1,    28,    -1,
      30,    -1,    -1,    33,    -1,    -1,    -1,    37,    -1,    -1,
      40,    41,    -1,    43,    -1,    45,    46,    -1,    -1,    49,
      -1,    51,    -1,    53,    54,    -1,    56,    -1,    58,    59,
      60,    -1,    62,    -1,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    -1,    77,    -1,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    93,    94,    -1,    -1,    97,    -1,    -1,
      -1,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,
      -1,   111,    -1,    -1,    -1,    -1,    -1,   117,    -1,   119,
     120,   121,    -1,    -1,    -1,   125,    -1,    -1,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,   139,
     140,   141,    -1,    -1,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,    -1,    -1,   156,    -1,    -1,   159,
     160,   161,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,
     170,    -1,    -1,   173,    -1,   175,    -1,    -1,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,   187,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,   199,
      -1,    -1,   202,    -1,    -1,    -1,   206,   207,   208,   209,
      -1,    -1,   212,   213,    -1,    -1,    -1,   217,    -1,    -1,
      -1,   221,    -1,    -1,    -1,   225,    -1,    -1,   228,   229,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238,    -1,
      -1,    -1,   242,    -1,    -1,   245,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,   256,    -1,   258,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,    -1,   285,   286,   287,    -1,   289,
     290,    -1,    -1,    -1,   294,   295,   296,   297,    -1,    -1,
     300,   301,    -1,    -1,   304,    -1,   306,    -1,   308,    -1,
      -1,   311,   312,   313,   314,   315,   316,   317,    -1,    -1,
     320,   321,    -1,   323,   324,   325,    -1,    -1,    -1,   329,
      -1,    -1,    -1,    -1,   334,   335,   336,    -1,   338,   339,
     340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   351,   352,   353,    -1,   355,    -1,   357,    -1,   359,
      -1,    -1,   362,   363,    -1,   365,    -1,   367,   368,    -1,
     370,   371,   372,   373,   374,   375,   376,   377,    -1,    -1,
      -1,    -1,   382,   383,    -1,    -1,   386,   387,   388,    -1,
     390,    -1,   392,   393,    -1,    -1,   396,    -1,   398,   399,
     400,    -1,   402,   403,    -1,    -1,    -1,   407,   408,    -1,
     410,   411,    -1,   413,   414,   415,   416,    -1,   418,   419,
      -1,    -1,    -1,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,    -1,   432,   433,   434,   435,    -1,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,   445,   446,    -1,   448,    -1,
      -1,   451,    -1,    -1,   454,   455,    -1,    -1,   458,   459,
      -1,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,    -1,   473,   474,    -1,    -1,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,   494,   495,    -1,    -1,   498,   499,
      -1,    -1,   502,    -1,    -1,    -1,    -1,   507,    -1,    -1,
     510,    -1,    -1,   513,   514,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   522,    -1,    -1,   525,    -1,    -1,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,    -1,
      -1,     5,   542,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    23,
      24,    25,    -1,    -1,    -1,    -1,    30,    -1,    -1,    33,
      -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,    43,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    51,    -1,    53,
      -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    62,    -1,
      64,    65,    -1,    -1,    68,    -1,    70,    71,    -1,    -1,
      74,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    86,    -1,    -1,    -1,    -1,    -1,    -1,    93,
      94,    -1,    -1,    97,    -1,    -1,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   111,    -1,    -1,
      -1,    -1,    -1,   117,    -1,   119,   120,   121,    -1,    -1,
      -1,    -1,    -1,    -1,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,   139,   140,   141,    -1,    -1,
     144,    -1,   146,   147,    -1,    -1,    -1,   151,    -1,   153,
      -1,    -1,   156,    -1,    -1,   159,   160,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,   170,    -1,    -1,   173,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,   187,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,   202,    -1,
      -1,    -1,   206,   207,   208,   209,    -1,    -1,   212,   213,
      -1,    -1,    -1,   217,    -1,    -1,    -1,   221,    -1,    -1,
      -1,   225,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   238,    -1,    -1,    -1,   242,    -1,
      -1,   245,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,   256,    -1,   258,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
      -1,   285,   286,   287,    -1,   289,   290,    -1,    -1,    -1,
     294,   295,   296,   297,    -1,    -1,   300,   301,    -1,    -1,
     304,    -1,   306,    -1,   308,    -1,    -1,   311,   312,   313,
     314,   315,   316,   317,    -1,    -1,   320,   321,    -1,   323,
     324,   325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     334,   335,   336,    -1,   338,   339,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   351,   352,   353,
      -1,   355,    -1,   357,    -1,   359,    -1,    -1,    -1,   363,
      -1,   365,    -1,   367,   368,    -1,   370,   371,   372,   373,
     374,   375,   376,   377,    -1,    -1,    -1,    -1,   382,   383,
      -1,    -1,   386,   387,   388,    -1,   390,    -1,    -1,   393,
      -1,    -1,   396,    -1,    -1,   399,    -1,    -1,   402,   403,
      -1,    -1,    -1,    -1,   408,    -1,   410,   411,    -1,   413,
     414,   415,    -1,    -1,   418,    -1,    -1,    -1,    -1,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,    -1,   432,    -1,
     434,    -1,    -1,   437,   438,    -1,    -1,    -1,    -1,    -1,
      -1,   445,   446,    -1,   448,    -1,    -1,   451,    -1,    -1,
      -1,   455,    -1,    -1,    -1,   459,    -1,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,    -1,   473,
     474,    -1,    -1,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,   487,    -1,   489,    -1,    -1,    -1,   493,
     494,   495,    -1,    -1,   498,   499,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   507,    -1,    -1,   510,    -1,    -1,   513,
     514,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   522,    -1,
      -1,   525,    -1,    -1,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,    -1,    -1,    -1,    -1,   542
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const unsigned short yystos[] =
{
       0,     3,    13,    14,    26,    28,    46,    47,    52,    56,
      57,    69,    84,   103,   112,   113,   114,   125,   126,   148,
     164,   189,   196,   199,   220,   234,   252,   257,   341,   362,
     369,   389,   391,   392,   395,   398,   400,   405,   407,   416,
     420,   426,   431,   435,   454,   458,   492,   508,   511,   515,
     538,   559,   570,   571,   572,   573,   574,   575,   577,   582,
     584,   589,   612,   764,   782,   785,   793,   795,   797,   800,
     805,   807,   812,   815,   820,   824,   832,   833,   975,   977,
     983,   986,  1011,  1019,  1030,  1032,  1046,  1049,  1052,  1058,
    1062,  1066,  1068,  1069,  1113,  1130,  1136,  1138,  1145,  1147,
    1172,  1178,  1179,  1180,  1181,  1216,    11,    91,   175,   211,
     366,   778,  1203,  1204,   253,   330,   814,   470,   472,  1132,
    1173,   214,     5,     7,     8,     9,    10,    11,    17,    20,
      23,    24,    25,    26,    28,    30,    33,    37,    40,    41,
      43,    45,    46,    49,    51,    53,    54,    56,    58,    59,
      60,    62,    64,    65,    67,    68,    69,    70,    71,    74,
      77,    79,    86,    93,    94,    97,   102,   103,   109,   111,
     117,   119,   120,   121,   125,   128,   129,   130,   134,   138,
     139,   140,   141,   144,   146,   147,   148,   151,   153,   156,
     159,   160,   161,   164,   169,   170,   173,   175,   182,   183,
     186,   187,   190,   196,   197,   199,   202,   206,   207,   208,
     209,   212,   213,   217,   221,   225,   228,   229,   236,   238,
     242,   245,   251,   253,   256,   258,   268,   269,   270,   271,
     272,   273,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   285,   286,   287,   289,   290,   294,   295,   296,   297,
     300,   301,   304,   306,   308,   311,   312,   313,   314,   315,
     316,   317,   320,   321,   323,   324,   325,   329,   334,   335,
     336,   338,   339,   340,   351,   352,   353,   355,   357,   359,
     362,   363,   365,   367,   368,   370,   371,   372,   373,   374,
     375,   376,   377,   382,   383,   386,   387,   388,   390,   392,
     393,   396,   398,   399,   400,   402,   403,   407,   408,   410,
     411,   413,   414,   415,   416,   418,   419,   423,   424,   425,
     428,   432,   433,   434,   435,   437,   438,   445,   446,   448,
     451,   454,   455,   458,   459,   461,   462,   463,   467,   468,
     470,   471,   473,   474,   477,   478,   479,   480,   481,   487,
     489,   492,   493,   494,   495,   498,   499,   502,   507,   510,
     513,   514,   522,   525,   528,   529,   530,   535,   537,   538,
     542,   600,  1104,  1107,  1111,  1112,   282,  1132,  1132,   535,
    1174,    10,    91,   174,   366,   439,   473,   504,   513,   598,
     682,   683,   684,   697,   756,  1020,   976,    91,   175,   214,
     366,   473,   488,   513,   528,   982,  1107,   814,   599,   566,
    1102,  1103,  1107,   583,   984,    76,   371,  1067,    93,   214,
     472,  1132,   814,  1107,  1063,   416,   513,  1132,   814,   987,
    1059,  1132,   599,  1174,  1107,   835,   837,   838,   342,  1115,
    1033,   454,   458,   435,   487,   435,   472,  1031,  1137,  1012,
    1107,    28,    69,   138,   362,   382,   407,   454,  1218,   420,
     559,   834,     0,     3,   362,   153,  1050,  1102,  1107,   142,
     770,  1107,   600,   600,   472,   109,  1198,  1199,  1200,  1132,
     796,  1174,   821,   822,  1102,   613,   566,   485,   798,   808,
      16,  1175,   210,   685,   600,   599,   347,  1198,  1201,  1202,
    1203,  1205,   472,   683,   175,   214,   211,   265,   372,  1028,
    1029,   895,   896,   210,   981,   981,  1107,   981,   600,   599,
     981,  1132,   578,  1053,    12,    13,    84,   112,   126,   148,
     159,   189,   214,   220,   257,   367,   384,   390,   396,   420,
     431,   432,   467,   511,   512,  1148,  1150,  1152,  1153,  1107,
     340,    60,   380,   566,   246,   476,  1105,  1107,  1109,   110,
     201,   265,   989,     7,    20,    22,    25,    29,    32,    34,
      35,    36,    38,    50,    54,    55,    61,    64,    72,    73,
      79,    81,    82,    83,    87,    88,    90,    91,    95,    96,
      97,   102,   104,   107,   108,   115,   116,   133,   136,   137,
     149,   152,   154,   155,   158,   162,   167,   172,   176,   177,
     178,   179,   181,   182,   184,   185,   186,   191,   193,   194,
     200,   206,   210,   220,   222,   237,   241,   244,   249,   251,
     254,   259,   262,   267,   274,   284,   288,   296,   300,   302,
     303,   307,   308,   309,   310,   311,   312,   313,   319,   326,
     327,   328,   331,   332,   336,   353,   354,   356,   357,   358,
     359,   360,   370,   378,   394,   395,   406,   409,   412,   414,
     418,   456,   457,   462,   464,   465,   466,   469,   476,   478,
     479,   480,   481,   490,   491,   492,   497,   500,   505,   506,
     513,   517,   518,   519,   520,   521,   526,   530,   540,   542,
     547,   551,   552,   557,   559,   562,   563,   565,   566,   853,
     856,   859,   860,   861,   862,   863,   864,   865,   866,   867,
     868,   872,   875,   876,   878,   885,  1089,  1091,  1093,  1094,
    1098,  1100,  1104,  1106,  1107,  1190,  1196,  1070,   223,  1102,
    1131,  1132,   171,    32,   282,  1038,  1064,  1107,   599,   816,
    1132,   110,   265,   990,  1018,   282,   371,   435,  1060,  1061,
     794,    12,  1146,  1150,   485,  1175,   836,    12,   122,   201,
     444,   445,   446,   447,   448,   449,   460,   842,   843,   844,
    1114,    30,    33,    54,    55,    64,    66,    83,    84,    92,
     140,   144,   173,   175,   187,   190,   213,   214,   217,   232,
     253,   258,   282,   314,   323,   340,   365,   366,   425,   435,
     459,   472,   529,   730,   755,  1034,  1038,  1039,  1041,  1121,
     787,   788,   787,   787,   534,   786,   787,   980,  1102,  1132,
    1018,    34,   200,  1090,  1106,  1217,  1217,  1217,  1217,  1217,
     837,   834,   560,  1107,  1048,  1047,   295,   474,   499,   766,
     768,   767,  1102,   142,   450,  1207,   806,   979,   980,   226,
     561,   828,   829,   559,  1107,   585,   979,   979,    51,   329,
     329,   389,  1176,   326,   327,   871,  1107,   594,    88,  1109,
    1110,  1163,  1164,   395,   488,  1206,  1207,  1208,  1214,  1198,
    1203,   685,   600,  1107,   171,  1021,  1025,  1026,  1107,  1028,
     853,   897,   149,  1107,   600,   337,   600,  1110,  1162,   979,
     981,   516,   579,   117,   202,   258,   282,   365,   371,   399,
     435,   455,   470,  1054,  1055,  1132,   365,  1151,   410,   410,
     473,   513,   528,   342,  1155,   470,  1157,    59,   435,  1154,
      92,   528,  1156,   337,   561,    18,   142,   940,   941,  1139,
    1107,   778,   559,   559,   559,   559,   559,   876,   559,   559,
     559,   559,   559,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   852,   852,   559,   852,   559,   559,   559,
     500,   559,  1089,   559,   559,   559,   559,   559,   559,   559,
     559,   559,  1192,  1196,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   853,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   898,   899,   900,   559,   559,
     559,   559,   559,   559,   559,   559,   559,   559,   559,   559,
     859,   559,   852,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   559,   559,   559,   852,   559,  1089,   559,
     559,   559,  1089,   559,   559,    34,   200,   476,   559,   559,
     559,   852,   852,   852,   559,   559,   559,   559,   559,   559,
     853,   902,   876,   876,   876,   420,   853,  1107,   565,  1109,
    1107,   539,   854,   857,   142,   143,   180,   195,   227,   239,
     266,   322,   873,   226,   247,   385,   438,   548,   549,   871,
     550,   429,   430,   551,   552,   123,   307,   553,   554,   555,
     556,   876,    98,    99,   100,   101,   102,   170,   203,   204,
     205,   206,   296,   298,   299,   300,   308,   370,   417,   418,
     530,   541,   542,   937,   938,    63,   346,  1106,   559,   566,
     835,  1191,    74,   171,   265,  1071,  1076,    46,   171,  1102,
    1133,  1134,   813,   565,   576,  1105,   258,   817,  1110,   818,
     819,  1102,   801,   223,   980,   991,   992,    46,   561,   979,
    1151,   337,   416,  1177,  1176,   503,  1182,  1183,   553,   846,
     847,   848,   844,  1116,  1117,  1118,   258,   147,   426,   247,
     532,  1045,   493,   559,    91,   175,   366,   472,   528,  1045,
     692,  1109,   248,   956,   958,    62,   455,   168,   455,   455,
     455,   282,   470,    62,   455,   202,   455,   455,   493,   956,
    1045,   171,   226,  1042,   258,   139,    65,   368,   470,   489,
     455,   525,   784,   388,   451,   789,   790,   783,    77,   778,
     561,   339,  1220,   468,  1221,   231,   402,  1219,   560,  1183,
    1185,  1186,  1187,   832,  1051,  1090,  1107,   108,   679,   680,
     681,   690,   691,   738,   607,   607,   765,    88,  1109,   419,
     528,   979,   485,   561,   108,   823,  1107,   822,   214,   233,
     753,   754,   830,   614,   615,   853,   268,   269,   270,   271,
     272,   273,   276,   277,   278,   279,   280,   281,   283,   386,
     387,   586,   587,   588,   153,   372,   799,    53,   153,   156,
     294,   372,   809,   810,   811,    51,   389,   149,   592,   559,
     852,   565,   208,   561,   848,   528,  1208,  1102,   593,   494,
     516,   757,  1025,  1102,  1107,   561,  1023,   566,  1027,   561,
    1102,   561,    48,   401,   779,   979,   565,   580,   581,    46,
     534,   561,  1056,   470,   559,  1165,  1165,  1165,  1165,   175,
     366,   472,  1149,  1153,  1107,   160,   324,  1107,  1140,  1141,
     991,   853,   853,   853,    12,   122,   892,   942,   104,   162,
     200,   262,   332,   497,   962,   892,   892,   892,   853,   853,
     895,   895,   853,   895,   853,   853,   853,   853,   122,   892,
     942,   560,   853,   560,   853,   853,   853,   853,   853,  1098,
    1107,   853,   853,   853,   853,   853,   835,  1193,   853,   937,
     853,   853,   853,   560,   853,   853,   853,   853,   895,   853,
     853,    94,    97,   478,   481,   939,   853,   122,   889,  1089,
     853,   853,   853,   560,   853,   853,   853,   853,   895,   853,
     853,   853,   853,   899,     9,   901,  1098,   122,   892,   853,
     853,   122,   892,   853,   853,   853,   853,   853,   895,   895,
     895,   853,   853,   853,   853,   853,   853,   895,   863,   853,
     560,   853,   853,   853,   853,   853,   560,   853,   853,   892,
     892,   853,   853,   853,   122,   892,   853,   853,   938,   938,
     853,    42,   240,   486,   853,   853,  1089,   560,   853,   560,
     892,  1099,  1100,  1107,   892,   853,   853,   853,   531,   560,
     561,   853,   187,   253,   425,  1122,   427,   566,   856,   855,
     858,   862,   155,   331,   491,   507,   871,    12,    17,   862,
     874,   559,  1194,  1196,   876,   863,   247,   863,   864,   226,
     247,   385,   548,   865,   866,   866,   867,   875,   867,   875,
     868,   868,   868,   868,   868,   876,   552,  1109,   876,   877,
    1107,   560,  1197,   282,   253,  1075,   825,   282,   941,   561,
     979,  1109,    27,   485,  1065,   561,   485,   561,   485,   979,
     992,   988,  1061,   171,   561,   175,   366,  1149,  1107,    12,
     122,  1189,   561,   839,   850,   853,  1096,  1107,   561,   187,
     253,   338,   425,  1119,  1120,  1123,  1124,   226,  1043,  1105,
     853,   553,   685,   600,   600,  1102,  1102,  1035,   262,   332,
     497,   959,   960,  1091,   600,  1045,  1110,   168,  1040,  1042,
     600,  1045,  1040,  1102,  1042,  1040,  1040,  1045,  1045,   510,
     791,   561,   791,   437,   420,   559,   563,   907,   909,   910,
     911,   920,   921,   929,  1090,   355,  1222,   345,   952,   958,
    1188,   681,    63,   730,    67,    79,   236,   305,   329,   379,
     450,   609,   611,     6,    13,    23,    24,    52,    56,    67,
      76,    81,    93,   111,   120,   121,   126,   134,   140,   165,
     212,   214,   221,   287,   301,   306,   351,   353,   374,   375,
     377,   391,   413,   494,   503,   687,   689,   690,   691,   771,
     772,   773,   952,   852,   565,   109,   225,  1102,   809,  1105,
     980,   559,   560,   561,   142,   142,   142,   142,   142,   142,
     142,   142,   142,   142,   142,   142,   142,   142,   142,   561,
     810,   679,   595,  1109,    44,  1164,   600,  1102,   590,   403,
     559,   601,    43,   197,   415,   758,   758,   337,  1024,  1022,
     566,  1026,   171,   553,  1107,   941,   853,   978,  1110,   779,
    1109,   561,   380,  1055,   979,  1057,  1107,  1166,  1167,   553,
    1102,  1107,  1161,  1161,  1161,   142,   160,   180,   195,   238,
     239,   266,   324,   363,  1142,  1144,   532,   943,   985,   561,
     560,   560,   561,   892,   560,   893,   561,   560,   560,   560,
      18,   560,   516,   560,   560,   560,   560,   561,   561,   516,
     561,   561,   886,   560,   553,   560,   561,   561,   560,   560,
     561,   560,   566,   560,   561,   560,   561,   561,   561,   560,
     561,  1197,   561,   171,   561,   561,   560,   561,   560,   561,
     561,   560,   561,   560,   560,   561,   560,   561,   561,   561,
     888,   561,   560,   561,   561,   560,   561,   561,   560,   561,
     560,   561,   560,   561,   561,   561,   560,   559,   561,   892,
     560,   560,   560,   892,   560,   560,   561,   561,   560,   560,
     561,   560,   561,   560,   560,   560,   560,   560,   560,   560,
     561,   561,   560,   561,   560,   226,   560,   560,   561,   561,
     561,   560,   561,   561,   560,   560,   560,   561,   171,   561,
     561,   892,   560,   560,   560,   561,   561,   561,   560,   171,
     853,   171,   853,   171,   853,   171,   560,   561,   561,   560,
     560,   560,   560,   560,   561,   560,   561,   560,   904,   905,
     895,   564,   566,   566,   566,  1109,   853,  1107,   344,   347,
     869,    15,    16,   870,   155,   331,   491,   507,  1194,   895,
     835,  1195,   146,   947,   863,    16,   559,  1194,   876,   863,
     863,   937,   937,   853,   880,   881,   882,   559,   566,   215,
     826,   827,  1102,   265,   380,   536,  1135,  1134,   809,   853,
    1105,  1110,  1110,   819,  1102,   153,   372,   514,   802,   803,
     804,   420,   426,   521,   522,   559,   675,   993,   996,  1105,
     189,  1161,  1161,  1161,  1184,   847,   171,   223,   840,   841,
     951,   952,   973,   849,   566,  1117,   108,   487,  1107,  1126,
     315,   353,   565,   730,  1125,  1105,   171,  1044,   560,  1107,
     258,   455,  1037,   335,   561,   435,  1045,  1107,  1045,  1040,
    1102,  1045,  1045,   588,   792,   790,   928,  1107,    85,   216,
     231,   244,   318,   406,   460,   919,   426,   561,   908,  1102,
     928,   561,   168,  1223,    44,   956,   142,   427,  1002,  1003,
    1003,  1105,   450,   450,   450,   450,   450,   419,    66,    78,
     174,   439,   702,   705,   706,   751,   753,   777,   777,  1003,
    1003,   777,  1003,  1003,  1003,   485,   119,  1003,   232,   471,
     166,   364,   753,   777,   232,  1003,   471,   119,  1003,  1003,
    1003,   777,  1003,  1003,  1003,  1003,  1003,    18,   142,   485,
     781,  1003,  1003,  1003,   687,   561,   559,   566,   701,   707,
    1101,  1107,  1109,   769,   364,   935,  1107,   853,   962,  1105,
    1105,   104,   162,   262,   332,   497,   963,  1105,   962,  1105,
    1105,  1105,  1105,  1105,   962,  1105,  1105,   962,   587,   218,
     226,   350,   620,   621,   622,   623,   353,   476,     8,    27,
     667,  1209,   247,   559,   669,   686,   688,   689,   105,   224,
     381,   461,   698,   602,  1102,   516,   943,  1107,   909,   566,
    1027,   581,   257,   560,   561,   566,   566,   485,   485,   485,
    1143,   944,   957,   958,   993,   222,   853,   853,   560,   853,
     853,    32,    55,    94,    97,   105,   320,   433,   481,   509,
     894,    32,   731,  1109,   895,   853,   731,   894,   853,   895,
     560,   875,   875,  1106,  1107,   853,   853,   895,  1106,   853,
     853,   853,   895,   332,   853,   853,   853,   853,   853,   853,
     853,   895,   895,   332,   853,   853,   895,   853,   853,   853,
     853,   895,   853,   863,  1098,   560,   560,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   895,
     222,   853,   853,   853,   853,   560,   853,   853,   853,   853,
     171,   853,   171,   853,   171,   853,   853,   332,   853,   853,
     545,   903,   853,   906,   560,   566,   762,   856,   859,   560,
    1197,   876,   862,   895,   947,    16,   560,   848,   883,   884,
     880,  1107,  1105,   561,   828,   536,   253,   485,   803,   676,
     994,   559,   999,  1004,   999,   560,   675,   995,  1095,  1096,
    1099,  1107,   997,   342,   171,   171,   171,   833,   127,   909,
     128,   349,   969,   970,   168,   257,   845,   973,   957,   841,
      18,   851,  1105,  1107,   553,  1107,   566,   228,   566,  1002,
     108,   731,   732,  1002,   168,  1002,   565,  1109,    32,   108,
     733,   734,  1109,   963,  1036,   144,   529,   960,   960,   534,
     943,  1040,   561,   923,   928,   907,   231,   231,   348,   930,
     231,   244,   406,   930,   920,   907,  1014,  1015,  1099,   907,
     941,   925,   926,   962,   297,   953,   108,   735,   737,  1109,
     732,    93,    93,   109,   225,   761,  1101,   754,   754,    57,
     166,   364,   504,   704,   752,   703,   704,   761,  1101,   963,
     962,  1101,   962,  1105,  1105,   730,  1003,   962,   233,   233,
    1101,  1101,   692,  1003,   160,   238,   329,   695,   963,   963,
    1101,   108,   962,  1105,   962,   962,   373,   376,   694,   962,
    1102,    70,    71,   108,   130,   161,   383,   693,   692,   559,
     773,   699,   700,   701,   702,  1107,     8,   160,   780,   384,
     703,   743,   708,   566,   559,  1210,   560,   561,   560,   561,
     618,   476,   112,   220,   511,   668,  1210,  1102,   247,   670,
     675,   699,   211,   395,   672,  1077,   561,   688,   496,   616,
     617,   619,  1107,   591,   909,   951,   943,   941,  1167,   553,
     553,  1163,  1163,  1163,   559,   853,   337,  1009,   853,   560,
     560,   560,   559,   724,   724,   559,   719,   720,   724,   224,
     224,   560,   560,   560,   560,   560,   560,   561,   887,   937,
     937,   560,   560,   560,   560,   560,   560,   561,   560,   560,
     560,   560,   560,   561,   560,   560,   560,   560,   560,   891,
     952,   561,   561,   561,   560,   560,   560,   560,   561,   560,
     560,   560,   561,   226,   534,   879,   560,   560,   560,   560,
     560,   560,   560,   560,   560,   561,   560,   560,   560,   853,
     560,   168,   560,   560,   561,   561,   560,   561,   561,   560,
     853,   560,   853,   560,   853,   560,   560,   561,   560,   560,
     853,   138,   546,   531,  1107,   560,   862,   853,   561,   560,
    1072,   827,   211,   831,  1110,   842,  1000,  1001,  1099,  1005,
     561,   559,   996,   560,   560,   561,   566,  1182,   171,  1163,
    1163,  1163,   943,   943,  1105,  1105,   565,   971,   972,  1109,
     511,   226,  1105,  1107,   566,  1107,   245,  1107,    12,    32,
     108,   337,   853,  1129,    63,   736,   853,  1110,   336,   353,
     476,  1128,  1122,  1002,   956,   270,  1045,   588,  1185,   924,
     244,   231,   920,   930,   930,   231,   337,   337,   516,   561,
    1013,  1002,   165,   211,   515,   931,   842,   853,   954,  1097,
     853,   233,   233,   754,   761,   757,   126,   426,   774,   732,
    1105,   761,   779,  1105,   775,   979,   560,   561,  1107,  1102,
      31,    32,    37,    39,    40,    41,    55,    94,    97,   105,
     124,   141,   161,   163,   182,   183,   224,   251,   260,   261,
     263,   291,   292,   293,   311,   312,   313,   317,   320,   333,
     334,   357,   359,   381,   424,   426,   436,   477,   478,   481,
     482,   483,   484,   523,   524,   542,   709,   712,   713,   714,
     715,   716,   717,   718,  1107,  1107,  1211,    18,  1107,   596,
     622,  1107,   337,    18,  1102,   560,   560,    18,   678,   688,
    1105,   560,   561,   618,   559,   943,   248,   961,   397,  1168,
    1168,  1168,   108,   853,  1007,  1008,   129,   937,   332,    20,
      32,    45,   502,   730,   739,   332,   853,   560,   560,   560,
     853,   853,   422,   890,   332,   853,   853,   853,   853,    40,
     371,   560,   853,   937,   853,   853,   853,   853,   853,   560,
     560,   560,   332,   853,   853,   849,   884,  1077,   242,   846,
     561,  1002,  1006,  1007,  1004,   998,   996,  1095,  1107,  1163,
     957,   192,   948,   974,  1109,   561,   428,   553,   380,   393,
     423,  1127,   737,  1002,   559,   559,  1126,   853,   142,   560,
     910,   348,   907,   920,   231,   231,   907,   920,   913,   912,
     914,  1015,   943,  1008,   753,   932,   932,   932,   846,   561,
      19,   113,   955,   761,   757,   559,   108,   108,   707,   736,
     709,   560,   700,   744,   559,   559,   724,   719,   361,   710,
     719,   719,   739,    55,   523,   713,   715,   739,   739,    55,
     524,   524,   527,   719,   711,   724,   724,   739,   559,   724,
      23,    63,    67,   108,   331,   337,   364,   424,   504,   726,
     727,   728,   742,   871,   527,   559,   739,    32,   559,   740,
     559,   559,   724,   559,   720,   725,   566,   560,   561,   420,
     559,  1212,   608,   709,  1102,  1212,   560,   671,   686,   559,
     675,   603,   619,   709,   759,   760,  1107,   960,    58,   229,
     325,   452,   463,   537,  1159,  1160,   534,  1169,  1169,  1169,
     560,   561,  1010,   560,   560,   740,    20,   502,   730,   741,
     740,   731,   560,   561,   560,   560,   561,   560,  1090,   560,
     561,   560,   561,   560,   560,   304,   151,   560,   560,   560,
     560,   560,   560,   560,   561,   546,   851,   223,   677,  1001,
    1008,   560,  1185,    44,   198,   945,    65,  1078,   972,   304,
      68,   498,   380,  1128,   476,   476,  1002,  1105,   941,   231,
     337,   916,   920,   920,   337,   918,   853,   853,   559,   951,
     933,   927,  1097,   559,   559,   759,    97,   478,   481,   551,
     552,  1092,  1093,   780,   726,   284,   337,   559,   745,   747,
     748,   749,   332,   332,   433,   509,   543,   721,   722,   723,
     559,   721,   721,   739,   527,   721,   559,   739,   332,   721,
     735,  1105,   328,   729,  1092,   511,   108,   233,   728,   233,
     331,   332,   332,   332,   332,   721,   332,   721,  1107,  1107,
     848,   848,   534,  1213,   118,   597,   609,   610,   871,   168,
    1213,  1185,   672,   675,   673,   403,   560,   561,   955,   559,
     476,   476,   476,    16,  1158,   189,   285,   286,   289,   290,
    1170,  1171,  1008,   233,   731,   740,   332,   853,   892,   853,
     895,   853,  1073,   696,   841,   957,   949,  1097,   946,   951,
     135,   145,   343,   475,  1079,  1080,   250,  1081,   560,   560,
    1129,    16,   907,   915,   516,   917,   516,   936,  1107,   961,
     559,   696,   955,   759,   759,   560,  1094,  1094,   776,   173,
     352,   434,   112,   511,   746,  1107,   749,   560,   560,   723,
     763,  1090,   763,   560,   852,   328,   522,   560,   560,   560,
     560,   835,   834,    49,    57,   253,    60,   157,   188,   210,
     230,   235,   243,   340,   404,   547,   639,   640,   645,   659,
    1104,  1108,  1112,   118,   131,   560,  1182,   604,   760,   332,
    1159,   342,   962,   962,   962,   962,  1171,   511,   560,   560,
     561,   560,   560,   560,   472,   845,   534,   561,   950,   955,
     853,   957,    44,    44,   135,    44,  1080,   453,   475,  1082,
    1083,   271,   337,   853,   559,   853,   559,   560,   561,   934,
     935,   560,   560,   780,    48,   329,   401,   426,   750,   750,
     560,   561,   560,   561,   560,   852,   739,   740,   739,   740,
     560,    57,   342,    57,  1107,   171,   324,   647,   207,   649,
     650,  1108,   207,  1108,  1107,   641,   531,   643,   572,    28,
     264,   394,   533,   662,   568,   414,   674,   709,   955,   560,
    1016,  1017,  1099,   853,  1102,    86,   408,  1097,   366,   964,
    1090,  1090,    44,  1090,    44,    44,  1083,   142,   922,   936,
     936,  1107,   560,   743,     5,   108,   331,   747,  1107,   739,
    1090,   739,  1185,   342,   342,   171,  1107,   138,   853,   853,
     642,   853,   663,   625,   639,   625,   664,   660,  1215,  1185,
     605,   561,  1002,   560,  1074,   955,  1107,  1090,  1090,  1090,
     963,   853,   560,   560,   223,   210,   546,   654,   655,   531,
     626,   138,   639,   567,   510,   853,   662,   639,   608,  1017,
    1008,  1078,   965,    16,   564,   646,   651,   138,   853,   644,
     106,   624,   627,   264,   567,   666,   125,   661,  1108,   606,
    1081,   559,   275,   648,  1107,   625,   547,   546,   654,    80,
     150,   632,   637,  1107,   138,   639,   567,   853,   665,   639,
     211,  1084,   848,   966,   967,   968,   142,   561,   652,   656,
     138,   196,   561,   628,    75,    89,   567,   138,   625,   332,
     559,  1085,   853,   560,   561,   962,  1107,   132,   545,   653,
     625,   547,   168,  1107,   709,   168,   168,   394,   138,   250,
     560,   565,  1086,  1087,  1099,   426,  1088,   968,   649,   625,
     657,   629,   108,   638,   442,   634,   962,   630,   631,   533,
    1109,   560,   561,  1016,   531,   545,   658,   441,   443,   633,
     634,   636,   871,  1107,   853,   522,   635,   572,  1087,   654,
     625,   561,   639,   169,  1106,   636
};

#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
# define YYSIZE_T __SIZE_TYPE__
#endif
#if ! defined (YYSIZE_T) && defined (size_t)
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T)
# if defined (__STDC__) || defined (__cplusplus)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# endif
#endif
#if ! defined (YYSIZE_T)
# define YYSIZE_T unsigned int
#endif

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { 								\
      yyerror ("syntax error: cannot back up");\
      YYERROR;							\
    }								\
while (0)

#define YYTERROR	1
#define YYERRCODE	256

/* YYLLOC_DEFAULT -- Compute the default location (before the actions
   are run).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)		\
   ((Current).first_line   = (Rhs)[1].first_line,	\
    (Current).first_column = (Rhs)[1].first_column,	\
    (Current).last_line    = (Rhs)[N].last_line,	\
    (Current).last_column  = (Rhs)[N].last_column)
#endif

/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (0)

# define YYDSYMPRINT(Args)			\
do {						\
  if (yydebug)					\
    yysymprint Args;				\
} while (0)

# define YYDSYMPRINTF(Title, Token, Value, Location)		\
do {								\
  if (yydebug)							\
    {								\
      YYFPRINTF (stderr, "%s ", Title);				\
      yysymprint (stderr, 					\
                  Token, Value);	\
      YYFPRINTF (stderr, "\n");					\
    }								\
} while (0)

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_stack_print (short *bottom, short *top)
#else
static void
yy_stack_print (bottom, top)
    short *bottom;
    short *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (/* Nothing. */; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_reduce_print (int yyrule)
#else
static void
yy_reduce_print (yyrule)
    int yyrule;
#endif
{
  int yyi;
  unsigned int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %u), ",
             yyrule - 1, yylno);
  /* Print the symbols being reduced, and their result.  */
  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
    YYFPRINTF (stderr, "%s ", yytname [yyrhs[yyi]]);
  YYFPRINTF (stderr, "-> %s\n", yytname [yyr1[yyrule]]);
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (Rule);		\
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YYDSYMPRINT(Args)
# define YYDSYMPRINTF(Title, Token, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#if defined (YYMAXDEPTH) && YYMAXDEPTH == 0
# undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined (__GLIBC__) && defined (_STRING_H)
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
#   if defined (__STDC__) || defined (__cplusplus)
yystrlen (const char *yystr)
#   else
yystrlen (yystr)
     const char *yystr;
#   endif
{
  register const char *yys = yystr;

  while (*yys++ != '\0')
    continue;

  return yys - yystr - 1;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
#   if defined (__STDC__) || defined (__cplusplus)
yystpcpy (char *yydest, const char *yysrc)
#   else
yystpcpy (yydest, yysrc)
     char *yydest;
     const char *yysrc;
#   endif
{
  register char *yyd = yydest;
  register const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

#endif /* !YYERROR_VERBOSE */



#if YYDEBUG
/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
#else
static void
yysymprint (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (yytype < YYNTOKENS)
    {
      YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
# ifdef YYPRINT
      YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
    }
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YYFPRINTF (yyoutput, ")");
}

#endif /* ! YYDEBUG */
/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yydestruct (int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yytype, yyvaluep)
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  switch (yytype)
    {

      default:
        break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM);
# else
int yyparse ();
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM)
# else
int yyparse (YYPARSE_PARAM)
  void *YYPARSE_PARAM;
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  register int yystate;
  register int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  short	yyssa[YYINITDEPTH];
  short *yyss = yyssa;
  register short *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  register YYSTYPE *yyvsp;



#define YYPOPSTACK   (yyvsp--, yyssp--)

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* When reducing, the number of symbols on the RHS of the reduced
     rule.  */
  int yylen;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack. Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	short *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow ("parser stack overflow",
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyoverflowlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyoverflowlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	short *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyoverflowlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YYDSYMPRINTF ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */
  YYDPRINTF ((stderr, "Shifting token %s, ", yytname[yytoken]));

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;


  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 855 "sql_yacc.yy"
    {
	   THD *thd= YYTHD;
	   if (!thd->bootstrap &&
	      (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
	   {
	     my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
	     YYABORT;
	   }
	   else
	   {
	     thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
	   }
	}
    break;

  case 3:
#line 868 "sql_yacc.yy"
    {}
    break;

  case 53:
#line 928 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
          lex->prepared_stmt_name= yyvsp[0].lex_str;
        }
    break;

  case 56:
#line 948 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_PREPARE;
          lex->prepared_stmt_name= yyvsp[-2].lex_str;
        }
    break;

  case 57:
#line 962 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= yyvsp[0].lex_str;
          lex->prepared_stmt_code_is_varref= FALSE;
        }
    break;

  case 58:
#line 969 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= yyvsp[0].lex_str;
          lex->prepared_stmt_code_is_varref= TRUE;
        }
    break;

  case 59:
#line 978 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_EXECUTE;
          lex->prepared_stmt_name= yyvsp[0].lex_str;
        }
    break;

  case 60:
#line 990 "sql_yacc.yy"
    {}
    break;

  case 65:
#line 1004 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&yyvsp[0].lex_str, sizeof(LEX_STRING));
          if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              YYABORT;
        }
    break;

  case 66:
#line 1016 "sql_yacc.yy"
    {
         if (Lex->sphead)
         {
           my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
           YYABORT;
         }
       }
    break;

  case 67:
#line 1024 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_HELP;
	  lex->help_arg= yyvsp[0].lex_str.str;
       }
    break;

  case 68:
#line 1034 "sql_yacc.yy"
    {
	  LEX *lex = Lex;
	  lex->sql_command = SQLCOM_CHANGE_MASTER;
	  bzero((char*) &lex->mi, sizeof(lex->mi));
        }
    break;

  case 69:
#line 1040 "sql_yacc.yy"
    {}
    break;

  case 72:
#line 1049 "sql_yacc.yy"
    {
	 Lex->mi.host = yyvsp[0].lex_str.str;
       }
    break;

  case 73:
#line 1054 "sql_yacc.yy"
    {
	 Lex->mi.user = yyvsp[0].lex_str.str;
       }
    break;

  case 74:
#line 1059 "sql_yacc.yy"
    {
	 Lex->mi.password = yyvsp[0].lex_str.str;
       }
    break;

  case 75:
#line 1064 "sql_yacc.yy"
    {
	 Lex->mi.port = yyvsp[0].ulong_num;
       }
    break;

  case 76:
#line 1069 "sql_yacc.yy"
    {
	 Lex->mi.connect_retry = yyvsp[0].ulong_num;
       }
    break;

  case 77:
#line 1073 "sql_yacc.yy"
    {
           Lex->mi.ssl= yyvsp[0].ulong_num ? 
               LEX_MASTER_INFO::SSL_ENABLE : LEX_MASTER_INFO::SSL_DISABLE;
         }
    break;

  case 78:
#line 1078 "sql_yacc.yy"
    {
           Lex->mi.ssl_ca= yyvsp[0].lex_str.str;
         }
    break;

  case 79:
#line 1082 "sql_yacc.yy"
    {
           Lex->mi.ssl_capath= yyvsp[0].lex_str.str;
         }
    break;

  case 80:
#line 1086 "sql_yacc.yy"
    {
           Lex->mi.ssl_cert= yyvsp[0].lex_str.str;
         }
    break;

  case 81:
#line 1090 "sql_yacc.yy"
    {
           Lex->mi.ssl_cipher= yyvsp[0].lex_str.str;
         }
    break;

  case 82:
#line 1094 "sql_yacc.yy"
    {
           Lex->mi.ssl_key= yyvsp[0].lex_str.str;
	 }
    break;

  case 84:
#line 1103 "sql_yacc.yy"
    {
	 Lex->mi.log_file_name = yyvsp[0].lex_str.str;
       }
    break;

  case 85:
#line 1107 "sql_yacc.yy"
    {
           Lex->mi.pos = yyvsp[0].ulonglong_number;
           /* 
              If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
              instead of causing subsequent errors. 
              We need to do it in this file, because only there we know that 
              MASTER_LOG_POS has been explicitely specified. On the contrary
              in change_master() (sql_repl.cc) we cannot distinguish between 0
              (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
              whereas we want to distinguish (specified 0 means "read the binlog
              from 0" (4 in fact), unspecified means "don't change the position
              (keep the preceding value)").
           */
           Lex->mi.pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
         }
    break;

  case 86:
#line 1123 "sql_yacc.yy"
    {
           Lex->mi.relay_log_name = yyvsp[0].lex_str.str;
         }
    break;

  case 87:
#line 1127 "sql_yacc.yy"
    {
           Lex->mi.relay_log_pos = yyvsp[0].ulong_num;
           /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
           Lex->mi.relay_log_pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
         }
    break;

  case 88:
#line 1138 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_CREATE_TABLE;
	  if (!lex->select_lex.add_table_to_list(thd, yyvsp[0].table, NULL,
						 TL_OPTION_UPDATING,
						 (using_update_log ?
						  TL_READ_NO_INSERT:
						  TL_READ)))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
	  lex->change=NullS;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.options=yyvsp[-3].num | yyvsp[-1].num;
	  lex->create_info.db_type= (enum db_type) lex->thd->variables.table_type;
	  lex->create_info.default_table_charset= NULL;
	  lex->name=0;
	}
    break;

  case 89:
#line 1159 "sql_yacc.yy"
    { Lex->current_select= &Lex->select_lex; }
    break;

  case 90:
#line 1161 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_CREATE_INDEX;
	    if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[0].table, NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	    lex->create_list.empty();
	    lex->key_list.empty();
	    lex->col_list.empty();
	    lex->change=NullS;
	  }
    break;

  case 91:
#line 1173 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->key_list.push_back(new Key(yyvsp[-9].key_type,yyvsp[-7].lex_str.str, yyvsp[-6].key_alg, 0, lex->col_list));
	    lex->col_list.empty();
	  }
    break;

  case 92:
#line 1180 "sql_yacc.yy"
    {
             Lex->create_info.default_table_charset= NULL;
             Lex->create_info.used_fields= 0;
          }
    break;

  case 93:
#line 1185 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_CREATE_DB;
	    lex->name=yyvsp[-2].lex_str.str;
            lex->create_info.options=yyvsp[-3].num;
	  }
    break;

  case 94:
#line 1192 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->spname= yyvsp[0].spname;
	    lex->udf.type= yyvsp[-2].udf_type;
	  }
    break;

  case 95:
#line 1198 "sql_yacc.yy"
    {}
    break;

  case 96:
#line 1200 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    /* Order is important here: new - reset - init */
	    sp= new sp_head();
	    sp->reset_thd_mem_root(YYTHD);
	    sp->init(lex);

	    sp->m_type= TYPE_ENUM_PROCEDURE;
	    lex->sphead= sp;
	    /*
	     * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	     * stored procedure, otherwise yylex will chop it into pieces
	     * at each ';'.
	     */
	    sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	    YYTHD->client_capabilities &= (~CLIENT_MULTI_QUERIES);
	  }
    break;

  case 97:
#line 1225 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_begin= lex->tok_start+1;
	  }
    break;

  case 98:
#line 1232 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_end= lex->tok_start;
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  }
    break;

  case 99:
#line 1239 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_chistics= &lex->sp_chistics;
	    lex->sphead->m_body_begin= lex->tok_start;
	  }
    break;

  case 100:
#line 1246 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

	    if (sp->check_backpatch(YYTHD))
	      YYABORT;
	    sp->init_strings(YYTHD, lex, yyvsp[-9].spname);
	    lex->sql_command= SQLCOM_CREATE_PROCEDURE;
	    /* Restore flag if it was cleared above */
	    if (sp->m_old_cmq)
	      YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	    sp->restore_thd_mem_root(YYTHD);
	  }
    break;

  case 101:
#line 1260 "sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
	  }
    break;

  case 102:
#line 1266 "sql_yacc.yy"
    {}
    break;

  case 103:
#line 1268 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 104:
#line 1275 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->users_list.empty();
          lex->columns.empty();
          lex->grant= lex->grant_tot_col= 0;
	  lex->all_privileges= 0;
          lex->select_lex.db= 0;
          lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
          bzero((char *)&(lex->mqh),sizeof(lex->mqh));
        }
    break;

  case 105:
#line 1290 "sql_yacc.yy"
    {
	    yyval.spname= new sp_name(yyvsp[-2].lex_str, yyvsp[0].lex_str);
	    yyval.spname->init_qname(YYTHD);
	  }
    break;

  case 106:
#line 1295 "sql_yacc.yy"
    {
	    yyval.spname= sp_name_current_db_new(YYTHD, yyvsp[0].lex_str);
	  }
    break;

  case 107:
#line 1302 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command = SQLCOM_CREATE_FUNCTION;
	    lex->udf.name = lex->spname->m_name;
	    lex->udf.returns=(Item_result) yyvsp[-2].num;
	    lex->udf.dl=yyvsp[0].lex_str.str;
	  }
    break;

  case 108:
#line 1310 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    /* Order is important here: new - reset - init */
	    sp= new sp_head();
	    sp->reset_thd_mem_root(YYTHD);
	    sp->init(lex);

	    sp->m_type= TYPE_ENUM_FUNCTION;
	    lex->sphead= sp;
	    /*
	     * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	     * stored procedure, otherwise yylex will chop it into pieces
	     * at each ';'.
	     */
	    sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	    YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	    lex->sphead->m_param_begin= lex->tok_start+1;
	  }
    break;

  case 109:
#line 1336 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_end= lex->tok_start;
	  }
    break;

  case 110:
#line 1342 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->charset= NULL;
	    lex->length= lex->dec= NULL;
	    lex->interval_list.empty();
	    lex->type= 0;
	  }
    break;

  case 111:
#line 1350 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) yyvsp[0].num,
                                          &sp->m_return_field_def))
              YYABORT;

	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  }
    break;

  case 112:
#line 1362 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_chistics= &lex->sp_chistics;
	    lex->sphead->m_body_begin= lex->tok_start;
	  }
    break;

  case 113:
#line 1369 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              YYABORT;

	    if (sp->check_backpatch(YYTHD))
	      YYABORT;
	    lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
	    sp->init_strings(YYTHD, lex, lex->spname);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              YYABORT;
            }
	    /* Restore flag if it was cleared above */
	    if (sp->m_old_cmq)
	      YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	    sp->restore_thd_mem_root(YYTHD);
	  }
    break;

  case 114:
#line 1393 "sql_yacc.yy"
    {}
    break;

  case 115:
#line 1394 "sql_yacc.yy"
    {}
    break;

  case 116:
#line 1398 "sql_yacc.yy"
    {}
    break;

  case 117:
#line 1399 "sql_yacc.yy"
    {}
    break;

  case 118:
#line 1405 "sql_yacc.yy"
    { Lex->sp_chistics.comment= yyvsp[0].lex_str; }
    break;

  case 119:
#line 1407 "sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 120:
#line 1409 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 121:
#line 1411 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 122:
#line 1413 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 123:
#line 1415 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 124:
#line 1417 "sql_yacc.yy"
    { }
    break;

  case 125:
#line 1422 "sql_yacc.yy"
    { }
    break;

  case 126:
#line 1423 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 127:
#line 1424 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 128:
#line 1429 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_SUID;
	  }
    break;

  case 129:
#line 1433 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_NOT_SUID;
	  }
    break;

  case 130:
#line 1440 "sql_yacc.yy"
    {
	    LEX *lex = Lex;

	    lex->sql_command= SQLCOM_CALL;
	    lex->spname= yyvsp[0].spname;
	    lex->value_list.empty();
	    sp_add_used_routine(lex, YYTHD, yyvsp[0].spname, TYPE_ENUM_PROCEDURE);
	  }
    break;

  case 131:
#line 1448 "sql_yacc.yy"
    {}
    break;

  case 134:
#line 1459 "sql_yacc.yy"
    {
	    Lex->value_list.push_back(yyvsp[0].item);
	  }
    break;

  case 135:
#line 1463 "sql_yacc.yy"
    {
	    Lex->value_list.push_back(yyvsp[0].item);
	  }
    break;

  case 140:
#line 1481 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->length= 0;
	    lex->dec= 0;
	    lex->type= 0;
	  
	    lex->default_value= 0;
	    lex->on_update_value= 0;
	  
	    lex->comment= null_lex_str;
	    lex->charset= NULL;
	  
	    lex->interval_list.empty();
	    lex->uint_geom_type= 0;
	  }
    break;

  case 141:
#line 1501 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&yyvsp[-2].lex_str, TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), yyvsp[-2].lex_str.str);
	      YYABORT;
	    }
	    sp_pvar_t *pvar= spc->push_pvar(&yyvsp[-2].lex_str, (enum enum_field_types)yyvsp[0].num,
                                            sp_param_in);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) yyvsp[0].num,
                                                   &pvar->field_def))
            {
              YYABORT;
            }
            pvar->field_def.field_name= pvar->name.str;
            pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 146:
#line 1537 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&yyvsp[-1].lex_str, TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), yyvsp[-1].lex_str.str);
	      YYABORT;
	    }
	    sp_pvar_t *pvar= spc->push_pvar(&yyvsp[-1].lex_str, (enum enum_field_types)yyvsp[0].num,
			                    (sp_param_mode_t)yyvsp[-3].num);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) yyvsp[0].num,
                                                   &pvar->field_def))
            {
              YYABORT;
            }
            pvar->field_def.field_name= pvar->name.str;
            pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 147:
#line 1561 "sql_yacc.yy"
    { yyval.num= sp_param_in; }
    break;

  case 148:
#line 1562 "sql_yacc.yy"
    { yyval.num= sp_param_in; }
    break;

  case 149:
#line 1563 "sql_yacc.yy"
    { yyval.num= sp_param_out; }
    break;

  case 150:
#line 1564 "sql_yacc.yy"
    { yyval.num= sp_param_inout; }
    break;

  case 151:
#line 1568 "sql_yacc.yy"
    {}
    break;

  case 153:
#line 1573 "sql_yacc.yy"
    {}
    break;

  case 155:
#line 1579 "sql_yacc.yy"
    {
	    yyval.spblock.vars= yyval.spblock.conds= yyval.spblock.hndlrs= yyval.spblock.curs= 0;
	  }
    break;

  case 156:
#line 1583 "sql_yacc.yy"
    {
	    /* We check for declarations out of (standard) order this way
	       because letting the grammar rules reflect it caused tricky
	       shift/reduce conflicts with the wrong result. (And we get
	       better error handling this way.) */
	    if ((yyvsp[-1].spblock.vars || yyvsp[-1].spblock.conds) && (yyvsp[-2].spblock.curs || yyvsp[-2].spblock.hndlrs))
	    { /* Variable or condition following cursor or handler */
	      my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
	      YYABORT;
	    }
	    if (yyvsp[-1].spblock.curs && yyvsp[-2].spblock.hndlrs)
	    { /* Cursor following handler */
	      my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
	      YYABORT;
	    }
	    yyval.spblock.vars= yyvsp[-2].spblock.vars + yyvsp[-1].spblock.vars;
	    yyval.spblock.conds= yyvsp[-2].spblock.conds + yyvsp[-1].spblock.conds;
	    yyval.spblock.hndlrs= yyvsp[-2].spblock.hndlrs + yyvsp[-1].spblock.hndlrs;
	    yyval.spblock.curs= yyvsp[-2].spblock.curs + yyvsp[-1].spblock.curs;
	  }
    break;

  case 157:
#line 1609 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary(yyvsp[0].num);
          }
    break;

  case 158:
#line 1617 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_pvars();
            enum enum_field_types var_type= (enum enum_field_types) yyvsp[-1].num;
            Item *dflt_value_item= yyvsp[0].item;
            create_field *create_field_op;
            
            if (!dflt_value_item)
            {
              dflt_value_item= new Item_null();
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-yyvsp[-3].num ; i < num_vars ; i++)
            {
              uint var_idx= pctx->pvar_context2index(i);
              sp_pvar_t *pvar= pctx->find_pvar(var_idx);
            
              if (!pvar)
                YYABORT;
            
              pvar->type= var_type;
              pvar->dflt= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &pvar->field_def))
              {
                YYABORT;
              }
            
              pvar->field_def.field_name= pvar->name.str;
              pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              lex->sphead->add_instr(
                new sp_instr_set(lex->sphead->instructions(), pctx, var_idx,
                                 dflt_value_item, var_type, lex,
                                 (i == num_vars - 1)));
            }

            pctx->declare_var_boundary(0);
            lex->sphead->restore_lex(YYTHD);

            yyval.spblock.vars= yyvsp[-3].num;
            yyval.spblock.conds= yyval.spblock.hndlrs= yyval.spblock.curs= 0;
          }
    break;

  case 159:
#line 1666 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_cond(&yyvsp[-3].lex_str, TRUE))
	    {
	      my_error(ER_SP_DUP_COND, MYF(0), yyvsp[-3].lex_str.str);
	      YYABORT;
	    }
	    YYTHD->lex->spcont->push_cond(&yyvsp[-3].lex_str, yyvsp[0].spcondtype);
	    yyval.spblock.vars= yyval.spblock.hndlrs= yyval.spblock.curs= 0;
	    yyval.spblock.conds= 1;
	  }
    break;

  case 160:
#line 1680 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, yyvsp[-2].num,
	                              ctx->current_pvars());

	    sp->add_instr(i);
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	    sp->m_flags|= sp_head::IN_HANDLER;
	  }
    break;

  case 161:
#line 1693 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *hlab= lex->spcont->pop_label(); /* After this hdlr */
	    sp_instr_hreturn *i;

	    if (yyvsp[-5].num == SP_HANDLER_CONTINUE)
	    {
	      i= new sp_instr_hreturn(sp->instructions(), ctx,
	                              ctx->current_pvars());
	      sp->add_instr(i);
	    }
	    else
	    {  /* EXIT or UNDO handler, just jump to the end of the block */
	      i= new sp_instr_hreturn(sp->instructions(), ctx, 0);

	      sp->add_instr(i);
	      sp->push_backpatch(i, lex->spcont->last_label()); /* Block end */
	    }
	    lex->sphead->backpatch(hlab);
	    sp->m_flags&= ~sp_head::IN_HANDLER;
	    yyval.spblock.vars= yyval.spblock.conds= yyval.spblock.curs= 0;
	    yyval.spblock.hndlrs= yyvsp[-1].num;
	    ctx->add_handlers(yyvsp[-1].num);
	  }
    break;

  case 162:
#line 1720 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint offp;
	    sp_instr_cpush *i;

	    if (ctx->find_cursor(&yyvsp[-3].lex_str, &offp, TRUE))
	    {
	      my_error(ER_SP_DUP_CURS, MYF(0), yyvsp[-3].lex_str.str);
	      delete yyvsp[0].lex;
	      YYABORT;
	    }
            i= new sp_instr_cpush(sp->instructions(), ctx, yyvsp[0].lex,
                                  ctx->current_cursors());
	    sp->add_instr(i);
	    ctx->push_cursor(&yyvsp[-3].lex_str);
	    yyval.spblock.vars= yyval.spblock.conds= yyval.spblock.hndlrs= 0;
	    yyval.spblock.curs= 1;
	  }
    break;

  case 163:
#line 1743 "sql_yacc.yy"
    {
	    Lex->sphead->reset_lex(YYTHD);

	    /* We use statement here just be able to get a better
	       error message. Using 'select' works too, but will then
	       result in a generic "syntax error" if a non-select
	       statement is given. */
	  }
    break;

  case 164:
#line 1752 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sql_command != SQLCOM_SELECT)
	    {
	      my_message(ER_SP_BAD_CURSOR_QUERY, ER(ER_SP_BAD_CURSOR_QUERY),
                         MYF(0));
	      YYABORT;
	    }
	    if (lex->result)
	    {
	      my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
	      YYABORT;
	    }
	    lex->sp_lex_in_use= TRUE;
	    yyval.lex= lex;
	    lex->sphead->restore_lex(YYTHD);
	  }
    break;

  case 165:
#line 1774 "sql_yacc.yy"
    { yyval.num= SP_HANDLER_EXIT; }
    break;

  case 166:
#line 1775 "sql_yacc.yy"
    { yyval.num= SP_HANDLER_CONTINUE; }
    break;

  case 167:
#line 1781 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler(yyvsp[0].spcondtype))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition(yyvsp[0].spcondtype);
	      ctx->push_handler(yyvsp[0].spcondtype);
	      yyval.num= 1;
	    }
	  }
    break;

  case 168:
#line 1802 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler(yyvsp[0].spcondtype))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
	        (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition(yyvsp[0].spcondtype);
	      ctx->push_handler(yyvsp[0].spcondtype);
	      yyval.num= yyvsp[-2].num + 1;
	    }
	  }
    break;

  case 169:
#line 1826 "sql_yacc.yy"
    {			/* mysql errno */
	    yyval.spcondtype= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    yyval.spcondtype->type= sp_cond_type_t::number;
	    yyval.spcondtype->mysqlerr= yyvsp[0].ulong_num;
	  }
    break;

  case 170:
#line 1832 "sql_yacc.yy"
    {		/* SQLSTATE */
	    if (!sp_cond_check(&yyvsp[0].lex_str))
	    {
	      my_error(ER_SP_BAD_SQLSTATE, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    yyval.spcondtype= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    yyval.spcondtype->type= sp_cond_type_t::state;
	    memcpy(yyval.spcondtype->sqlstate, yyvsp[0].lex_str.str, 5);
	    yyval.spcondtype->sqlstate[5]= '\0';
	  }
    break;

  case 171:
#line 1846 "sql_yacc.yy"
    {}
    break;

  case 172:
#line 1847 "sql_yacc.yy"
    {}
    break;

  case 173:
#line 1852 "sql_yacc.yy"
    {
	    yyval.spcondtype= yyvsp[0].spcondtype;
	  }
    break;

  case 174:
#line 1856 "sql_yacc.yy"
    {
	    yyval.spcondtype= Lex->spcont->find_cond(&yyvsp[0].lex_str);
	    if (yyval.spcondtype == NULL)
	    {
	      my_error(ER_SP_COND_MISMATCH, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	  }
    break;

  case 175:
#line 1865 "sql_yacc.yy"
    {
	    yyval.spcondtype= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    yyval.spcondtype->type= sp_cond_type_t::warning;
	  }
    break;

  case 176:
#line 1870 "sql_yacc.yy"
    {
	    yyval.spcondtype= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    yyval.spcondtype->type= sp_cond_type_t::notfound;
	  }
    break;

  case 177:
#line 1875 "sql_yacc.yy"
    {
	    yyval.spcondtype= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    yyval.spcondtype->type= sp_cond_type_t::exception;
	  }
    break;

  case 178:
#line 1883 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&yyvsp[0].lex_str, TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    spc->push_pvar(&yyvsp[0].lex_str, (enum_field_types)0, sp_param_in);
	    yyval.num= 1;
	  }
    break;

  case 179:
#line 1898 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&yyvsp[0].lex_str, TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    spc->push_pvar(&yyvsp[0].lex_str, (enum_field_types)0, sp_param_in);
	    yyval.num= yyvsp[-2].num + 1;
	  }
    break;

  case 180:
#line 1915 "sql_yacc.yy"
    { yyval.item = NULL; }
    break;

  case 181:
#line 1916 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item; }
    break;

  case 182:
#line 1920 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->reset_lex(YYTHD);
	    lex->sphead->m_tmp_query= lex->tok_start;
	  }
    break;

  case 183:
#line 1927 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
	    if (lex->sql_command == SQLCOM_CHANGE_DB)
	    { /* "USE db" doesn't work in a procedure */
	      my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
	      YYABORT;
	    }
	    /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
	    */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
	    {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);

              /* Extract the query statement from the tokenizer:
                 The end is either lex->tok_end or tok->ptr. */
              if (lex->ptr - lex->tok_end > 1)
                i->m_query.length= lex->ptr - sp->m_tmp_query;
              else
                i->m_query.length= lex->tok_end - sp->m_tmp_query;
              i->m_query.str= strmake_root(YYTHD->mem_root,
                                           (char *)sp->m_tmp_query,
                                           i->m_query.length);
              sp->add_instr(i);
            }
	    sp->restore_lex(YYTHD);
          }
    break;

  case 184:
#line 1963 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 185:
#line 1965 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

	    if (sp->m_type == TYPE_ENUM_PROCEDURE)
	    {
	      my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_freturn *i;

	      i= new sp_instr_freturn(sp->instructions(), lex->spcont, yyvsp[0].item,
                                      sp->m_return_field_def.sql_type, lex);
	      sp->add_instr(i);
	      sp->m_flags|= sp_head::HAS_RETURN;
	    }
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 186:
#line 1985 "sql_yacc.yy"
    {}
    break;

  case 187:
#line 1987 "sql_yacc.yy"
    {
	    Lex->sphead->m_flags&= ~sp_head::IN_SIMPLE_CASE;
	  }
    break;

  case 188:
#line 1990 "sql_yacc.yy"
    {}
    break;

  case 189:
#line 1992 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 190:
#line 1994 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *parsing_ctx= lex->spcont;
	    int case_expr_id= parsing_ctx->register_case_expr();
	    
	    if (parsing_ctx->push_case_expr_id(case_expr_id))
              YYABORT;
	    
	    sp->add_instr(
	      new sp_instr_set_case_expr(sp->instructions(),
	                                 parsing_ctx,
	                                 case_expr_id,
	                                 yyvsp[-1].item,
	                                 lex));
	    
	    sp->m_flags|= sp_head::IN_SIMPLE_CASE;
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 191:
#line 2014 "sql_yacc.yy"
    {
	    Lex->spcont->pop_case_expr_id();
	  }
    break;

  case 192:
#line 2018 "sql_yacc.yy"
    {}
    break;

  case 193:
#line 2019 "sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
	    LEX *lex= Lex;

	    lex->spcont->push_label((char *)"", lex->sphead->instructions());
	  }
    break;

  case 194:
#line 2025 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 195:
#line 2031 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp = lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label(yyvsp[0].lex_str.str);

	    if (! lab)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      uint ip= sp->instructions();
	      sp_instr_jump *i;
	      sp_instr_hpop *ih;
	      sp_instr_cpop *ic;

	      ih= new sp_instr_hpop(ip++, ctx, 0);
	      sp->push_backpatch(ih, lab);
	      sp->add_instr(ih);
	      ic= new sp_instr_cpop(ip++, ctx, 0);
	      sp->push_backpatch(ic, lab);
	      sp->add_instr(ic);
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
	    }
	  }
    break;

  case 196:
#line 2061 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label(yyvsp[0].lex_str.str);

	    if (! lab || lab->type != SP_LAB_ITER)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx);
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx);
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              sp->add_instr(i);
	    }
	  }
    break;

  case 197:
#line 2089 "sql_yacc.yy"
    {
#ifdef SP_GOTO
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label(yyvsp[0].lex_str.str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      lab= ctx->push_label(yyvsp[0].lex_str.str, sp->instructions());
	      lab->type= SP_LAB_GOTO;
	      lab->ctx= ctx;
              sp->backpatch(lab);
	    }
#else
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
#endif
	  }
    break;

  case 198:
#line 2114 "sql_yacc.yy"
    {
#ifdef SP_GOTO
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab;
	    sp_instr_jump *i;
	    sp_instr_hpop *ih;
	    sp_instr_cpop *ic;

	    if (sp->m_in_handler)
	    {
	      my_message(ER_SP_GOTO_IN_HNDLR, ER(ER_SP_GOTO_IN_HNDLR), MYF(0));
	      YYABORT;
	    }
	    lab= ctx->find_label(yyvsp[0].lex_str.str);
	    if (! lab)
	    {
	      lab= (sp_label_t *)YYTHD->alloc(sizeof(sp_label_t));
	      lab->name= yyvsp[0].lex_str.str;
	      lab->ip= 0;
	      lab->type= SP_LAB_REF;
	      lab->ctx= ctx;

	      ih= new sp_instr_hpop(ip++, ctx, 0);
	      sp->push_backpatch(ih, lab);
	      sp->add_instr(ih);
	      ic= new sp_instr_cpop(ip++, ctx, 0);
	      sp->add_instr(ic);
	      sp->push_backpatch(ic, lab);
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
	      sp->add_instr(i);
	    }
	    else
	    {
	      uint n;

	      n= ctx->diff_handlers(lab->ctx);
	      if (n)
	      {
	        ih= new sp_instr_hpop(ip++, ctx, n);
	        sp->add_instr(ih);
	      }
	      n= ctx->diff_cursors(lab->ctx);
	      if (n)
	      {
	        ic= new sp_instr_cpop(ip++, ctx, n);
	        sp->add_instr(ic);
	      }
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
	      sp->add_instr(i);
	    }
#else
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
#endif
	  }
    break;

  case 199:
#line 2174 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_copen *i;

	    if (! lex->spcont->find_cursor(&yyvsp[0].lex_str, &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 200:
#line 2189 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cfetch *i;

	    if (! lex->spcont->find_cursor(&yyvsp[-1].lex_str, &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), yyvsp[-1].lex_str.str);
	      YYABORT;
	    }
	    i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 201:
#line 2204 "sql_yacc.yy"
    { }
    break;

  case 202:
#line 2206 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cclose *i;

	    if (! lex->spcont->find_cursor(&yyvsp[0].lex_str, &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
	    sp->add_instr(i);
	  }
    break;

  case 206:
#line 2230 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_pvar_t *spv;

	    if (!spc || !(spv = spc->find_pvar(&yyvsp[0].lex_str)))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 207:
#line 2251 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_pvar_t *spv;

	    if (!spc || !(spv = spc->find_pvar(&yyvsp[0].lex_str)))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), yyvsp[0].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 208:
#line 2273 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 209:
#line 2275 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               yyvsp[-1].item, lex);

	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 210:
#line 2288 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 211:
#line 2299 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 215:
#line 2313 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 216:
#line 2315 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i;

	    if (! (sp->m_flags & sp_head::IN_SIMPLE_CASE))
	      i= new sp_instr_jump_if_not(ip, ctx, yyvsp[-1].item, lex);
	    else
	    { /* Simple case: <caseval> = <whenval> */

	      Item_case_expr *var;
              Item *expr;

              var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
              if (var)
                var->m_sp= sp;
#endif

	      expr= new Item_func_eq(var, yyvsp[-1].item);

	      i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
	    }
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 217:
#line 2346 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 218:
#line 2357 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 219:
#line 2366 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_error *i= new sp_instr_error(ip, Lex->spcont,
						  ER_SP_CASE_NOT_FOUND);

	    sp->add_instr(i);
	  }
    break;

  case 220:
#line 2374 "sql_yacc.yy"
    {}
    break;

  case 221:
#line 2375 "sql_yacc.yy"
    {}
    break;

  case 222:
#line 2380 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label(yyvsp[-1].lex_str.str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), yyvsp[-1].lex_str.str);
	      YYABORT;
	    }
	    else
	    {
	      lab= lex->spcont->push_label(yyvsp[-1].lex_str.str,
	                                   lex->sphead->instructions());
	      lab->type= SP_LAB_ITER;
	    }
	  }
    break;

  case 223:
#line 2398 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (yyvsp[0].lex_str.str)
	    {
	      sp_label_t *lab= lex->spcont->find_label(yyvsp[0].lex_str.str);

	      if (!lab ||
	          my_strcasecmp(system_charset_info, yyvsp[0].lex_str.str, lab->name) != 0)
	      {
	        my_error(ER_SP_LABEL_MISMATCH, MYF(0), yyvsp[0].lex_str.str);
	        YYABORT;
	      }
	    }
	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 224:
#line 2417 "sql_yacc.yy"
    { yyval.lex_str= null_lex_str; }
    break;

  case 225:
#line 2418 "sql_yacc.yy"
    { yyval.lex_str= yyvsp[0].lex_str; }
    break;

  case 226:
#line 2423 "sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
	       together. No [[NOT] ATOMIC] yet, and we need to figure out how
	       make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
	    LEX *lex= Lex;
	    sp_label_t *lab= lex->spcont->last_label();

	    lab->type= SP_LAB_BEGIN;
	    lex->spcont= lex->spcont->push_context();
	  }
    break;

  case 227:
#line 2435 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

  	    sp->backpatch(ctx->last_label());	/* We always have a label */
	    if (yyvsp[-2].spblock.hndlrs)
	      sp->add_instr(new sp_instr_hpop(sp->instructions(), ctx,
					      yyvsp[-2].spblock.hndlrs));
	    if (yyvsp[-2].spblock.curs)
	      sp->add_instr(new sp_instr_cpop(sp->instructions(), ctx,
					      yyvsp[-2].spblock.curs));
	    lex->spcont= ctx->pop_context();
	  }
    break;

  case 228:
#line 2451 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
	  }
    break;

  case 229:
#line 2460 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 230:
#line 2462 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
							       yyvsp[-1].item, lex);

	    /* Jumping forward */
	    sp->push_backpatch(i, lex->spcont->last_label());
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 231:
#line 2475 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
	  }
    break;

  case 232:
#line 2484 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 233:
#line 2486 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               yyvsp[-2].item, lab->ip,
                                                               lex);
            lex->sphead->add_instr(i);
            lex->sphead->restore_lex(YYTHD);
	  }
    break;

  case 234:
#line 2500 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 235:
#line 2502 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 236:
#line 2507 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 237:
#line 2509 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 238:
#line 2511 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 239:
#line 2515 "sql_yacc.yy"
    {}
    break;

  case 240:
#line 2516 "sql_yacc.yy"
    {}
    break;

  case 241:
#line 2518 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->name= (char *)yyvsp[0].table))
              YYABORT;
          }
    break;

  case 242:
#line 2524 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->name= (char *)yyvsp[-1].table))
              YYABORT;
          }
    break;

  case 243:
#line 2532 "sql_yacc.yy"
    {}
    break;

  case 244:
#line 2533 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 245:
#line 2533 "sql_yacc.yy"
    {}
    break;

  case 246:
#line 2537 "sql_yacc.yy"
    {}
    break;

  case 247:
#line 2539 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 248:
#line 2539 "sql_yacc.yy"
    {}
    break;

  case 249:
#line 2541 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 250:
#line 2541 "sql_yacc.yy"
    {}
    break;

  case 251:
#line 2546 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->lock_option= using_update_log ? TL_READ_NO_INSERT : TL_READ;
	    if (lex->sql_command == SQLCOM_INSERT)
	      lex->sql_command= SQLCOM_INSERT_SELECT;
	    else if (lex->sql_command == SQLCOM_REPLACE)
	      lex->sql_command= SQLCOM_REPLACE_SELECT;
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    lex->current_select->table_list.save_and_clear(&lex->save_list);
	    mysql_init_select(lex);
	    lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 252:
#line 2562 "sql_yacc.yy"
    {
	    Select->parsing_place= NO_MATTER;
	  }
    break;

  case 253:
#line 2566 "sql_yacc.yy"
    {
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    Lex->current_select->table_list.push_front(&Lex->save_list);
	  }
    break;

  case 254:
#line 2576 "sql_yacc.yy"
    {}
    break;

  case 255:
#line 2577 "sql_yacc.yy"
    {}
    break;

  case 256:
#line 2580 "sql_yacc.yy"
    {}
    break;

  case 257:
#line 2581 "sql_yacc.yy"
    {}
    break;

  case 258:
#line 2584 "sql_yacc.yy"
    {}
    break;

  case 259:
#line 2585 "sql_yacc.yy"
    {}
    break;

  case 260:
#line 2588 "sql_yacc.yy"
    {}
    break;

  case 261:
#line 2589 "sql_yacc.yy"
    {}
    break;

  case 262:
#line 2592 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 263:
#line 2593 "sql_yacc.yy"
    { yyval.num= yyvsp[0].num;}
    break;

  case 264:
#line 2596 "sql_yacc.yy"
    { yyval.num=yyvsp[0].num; }
    break;

  case 265:
#line 2597 "sql_yacc.yy"
    { yyval.num= yyvsp[-1].num | yyvsp[0].num; }
    break;

  case 266:
#line 2600 "sql_yacc.yy"
    { yyval.num=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 267:
#line 2603 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 268:
#line 2604 "sql_yacc.yy"
    { yyval.num=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 276:
#line 2620 "sql_yacc.yy"
    { Lex->create_info.db_type= yyvsp[0].db_type; Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 277:
#line 2621 "sql_yacc.yy"
    { Lex->create_info.db_type= yyvsp[0].db_type; WARN_DEPRECATED("TYPE=storage_engine","ENGINE=storage_engine");   Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 278:
#line 2622 "sql_yacc.yy"
    { Lex->create_info.max_rows= yyvsp[0].ulonglong_number; Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;}
    break;

  case 279:
#line 2623 "sql_yacc.yy"
    { Lex->create_info.min_rows= yyvsp[0].ulonglong_number; Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;}
    break;

  case 280:
#line 2624 "sql_yacc.yy"
    { Lex->create_info.avg_row_length=yyvsp[0].ulong_num; Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;}
    break;

  case 281:
#line 2625 "sql_yacc.yy"
    { Lex->create_info.password=yyvsp[0].lex_str.str; Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD; }
    break;

  case 282:
#line 2626 "sql_yacc.yy"
    { Lex->create_info.comment=yyvsp[0].lex_str.str; Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT; }
    break;

  case 283:
#line 2627 "sql_yacc.yy"
    { Lex->create_info.auto_increment_value=yyvsp[0].ulonglong_number; Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;}
    break;

  case 284:
#line 2629 "sql_yacc.yy"
    {
            switch(yyvsp[0].ulong_num) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 285:
#line 2644 "sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 286:
#line 2649 "sql_yacc.yy"
    { Lex->create_info.table_options|= yyvsp[0].ulong_num ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM; Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM; }
    break;

  case 287:
#line 2650 "sql_yacc.yy"
    { Lex->create_info.table_options|= yyvsp[0].ulong_num ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;  Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE; }
    break;

  case 288:
#line 2651 "sql_yacc.yy"
    { Lex->create_info.row_type= yyvsp[0].row_type;  Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT; }
    break;

  case 289:
#line 2653 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_TYPE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 290:
#line 2658 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKS", "PARTITION");
	    YYABORT;
	  }
    break;

  case 291:
#line 2663 "sql_yacc.yy"
    {
	    my_error(ER_WARN_DEPRECATED_SYNTAX, MYF(0), "RAID_CHUNKSIZE", "PARTITION");
	    YYABORT;
	  }
    break;

  case 292:
#line 2668 "sql_yacc.yy"
    {
	    /* Move the union list to the merge_list */
	    LEX *lex=Lex;
	    TABLE_LIST *table_list= lex->select_lex.get_table_list();
	    lex->create_info.merge_list= lex->select_lex.table_list;
	    lex->create_info.merge_list.elements--;
	    lex->create_info.merge_list.first=
	      (byte*) (table_list->next_local);
	    lex->select_lex.table_list.elements=1;
	    lex->select_lex.table_list.next=
	      (byte**) &(table_list->next_local);
	    table_list->next_local= 0;
	    lex->create_info.used_fields|= HA_CREATE_USED_UNION;
	  }
    break;

  case 295:
#line 2684 "sql_yacc.yy"
    { Lex->create_info.merge_insert_method= yyvsp[0].ulong_num; Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;}
    break;

  case 296:
#line 2685 "sql_yacc.yy"
    { Lex->create_info.data_file_name= yyvsp[0].lex_str.str; Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR; }
    break;

  case 297:
#line 2686 "sql_yacc.yy"
    { Lex->create_info.index_file_name= yyvsp[0].lex_str.str;  Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR; }
    break;

  case 298:
#line 2687 "sql_yacc.yy"
    { Lex->create_info.connect_string.str= yyvsp[0].lex_str.str; Lex->create_info.connect_string.length= yyvsp[0].lex_str.length;  Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION; }
    break;

  case 299:
#line 2692 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && yyvsp[0].charset &&
               !my_charset_same(cinfo->default_table_charset,yyvsp[0].charset))
          {
            my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                     "CHARACTER SET ", cinfo->default_table_charset->csname,
                     "CHARACTER SET ", yyvsp[0].charset->csname);
            YYABORT;
          }
	  Lex->create_info.default_table_charset= yyvsp[0].charset;
          Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 300:
#line 2709 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && yyvsp[0].charset &&
               !my_charset_same(cinfo->default_table_charset,yyvsp[0].charset))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       yyvsp[0].charset->name, cinfo->default_table_charset->csname);
              YYABORT;
            }
            Lex->create_info.default_table_charset= yyvsp[0].charset;
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 301:
#line 2725 "sql_yacc.yy"
    {
	  yyval.db_type = ha_resolve_by_name(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length);
	  if (yyval.db_type == DB_TYPE_UNKNOWN) {
	    my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), yyvsp[0].lex_str.str);
	    YYABORT;
	  }
	}
    break;

  case 302:
#line 2734 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_DEFAULT; }
    break;

  case 303:
#line 2735 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_FIXED; }
    break;

  case 304:
#line 2736 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_DYNAMIC; }
    break;

  case 305:
#line 2737 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_COMPRESSED; }
    break;

  case 306:
#line 2738 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_REDUNDANT; }
    break;

  case 307:
#line 2739 "sql_yacc.yy"
    { yyval.row_type= ROW_TYPE_COMPACT; }
    break;

  case 308:
#line 2742 "sql_yacc.yy"
    { yyval.ulong_num= RAID_TYPE_0; }
    break;

  case 309:
#line 2743 "sql_yacc.yy"
    { yyval.ulong_num= RAID_TYPE_0; }
    break;

  case 310:
#line 2744 "sql_yacc.yy"
    { yyval.ulong_num=yyvsp[0].ulong_num;}
    break;

  case 311:
#line 2747 "sql_yacc.yy"
    { yyval.ulong_num= MERGE_INSERT_DISABLED; }
    break;

  case 312:
#line 2748 "sql_yacc.yy"
    { yyval.ulong_num= MERGE_INSERT_TO_FIRST; }
    break;

  case 313:
#line 2749 "sql_yacc.yy"
    { yyval.ulong_num= MERGE_INSERT_TO_LAST; }
    break;

  case 314:
#line 2752 "sql_yacc.yy"
    {}
    break;

  case 316:
#line 2756 "sql_yacc.yy"
    { yyval.udf_type = UDFTYPE_FUNCTION; }
    break;

  case 317:
#line 2757 "sql_yacc.yy"
    { yyval.udf_type = UDFTYPE_AGGREGATE; }
    break;

  case 318:
#line 2760 "sql_yacc.yy"
    {yyval.num = (int) STRING_RESULT; }
    break;

  case 319:
#line 2761 "sql_yacc.yy"
    {yyval.num = (int) REAL_RESULT; }
    break;

  case 320:
#line 2762 "sql_yacc.yy"
    {yyval.num = (int) DECIMAL_RESULT; }
    break;

  case 321:
#line 2763 "sql_yacc.yy"
    {yyval.num = (int) INT_RESULT; }
    break;

  case 327:
#line 2778 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 328:
#line 2785 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new Key(yyvsp[-5].key_type,yyvsp[-4].simple_string, yyvsp[-3].key_alg, 0, lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 329:
#line 2791 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    const char *key_name= yyvsp[-4].simple_string ? yyvsp[-4].simple_string:yyvsp[-6].simple_string;
	    lex->key_list.push_back(new Key(yyvsp[-5].key_type, key_name, yyvsp[-3].key_alg, 0,
				    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 330:
#line 2799 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new foreign_key(yyvsp[-4].simple_string ? yyvsp[-4].simple_string:yyvsp[-7].simple_string, lex->col_list,
				    yyvsp[0].table,
				    lex->ref_list,
				    lex->fk_delete_opt,
				    lex->fk_update_opt,
				    lex->fk_match_option));
	    lex->key_list.push_back(new Key(Key::MULTIPLE, yyvsp[-4].simple_string ? yyvsp[-4].simple_string : yyvsp[-7].simple_string,
					    HA_KEY_ALG_UNDEF, 1,
					    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 331:
#line 2813 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 332:
#line 2817 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 336:
#line 2832 "sql_yacc.yy"
    { yyval.simple_string=(char*) 0; }
    break;

  case 337:
#line 2833 "sql_yacc.yy"
    { yyval.simple_string= yyvsp[0].simple_string; }
    break;

  case 338:
#line 2837 "sql_yacc.yy"
    { yyval.simple_string=yyvsp[0].simple_string; }
    break;

  case 339:
#line 2842 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->length=lex->dec=0; lex->type=0;
	   lex->default_value= lex->on_update_value= 0;
           lex->comment=null_lex_str;
	   lex->charset=NULL;
	 }
    break;

  case 340:
#line 2850 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (add_field_to_list(lex->thd, yyvsp[-3].lex_str.str,
				(enum enum_field_types) yyvsp[-1].num,
				lex->length,lex->dec,lex->type,
				lex->default_value, lex->on_update_value, 
                                &lex->comment,
				lex->change,&lex->interval_list,lex->charset,
				lex->uint_geom_type))
	    YYABORT;
	}
    break;

  case 341:
#line 2863 "sql_yacc.yy"
    { yyval.num=yyvsp[-2].num; }
    break;

  case 342:
#line 2864 "sql_yacc.yy"
    { yyval.num=yyvsp[-2].num; }
    break;

  case 343:
#line 2865 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_FLOAT; }
    break;

  case 344:
#line 2866 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  yyval.num=FIELD_TYPE_BIT; }
    break;

  case 345:
#line 2868 "sql_yacc.yy"
    { Lex->length= yyvsp[-1].lex_str.str;
					  yyval.num=FIELD_TYPE_BIT; }
    break;

  case 346:
#line 2870 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  yyval.num=FIELD_TYPE_TINY; }
    break;

  case 347:
#line 2872 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  yyval.num=FIELD_TYPE_TINY; }
    break;

  case 348:
#line 2874 "sql_yacc.yy"
    { Lex->length=yyvsp[-2].lex_str.str;
					  yyval.num=FIELD_TYPE_STRING; }
    break;

  case 349:
#line 2876 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  yyval.num=FIELD_TYPE_STRING; }
    break;

  case 350:
#line 2878 "sql_yacc.yy"
    { Lex->length=yyvsp[-2].lex_str.str;
					  yyval.num=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 351:
#line 2881 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  yyval.num=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 352:
#line 2884 "sql_yacc.yy"
    { Lex->length=yyvsp[-1].lex_str.str;
					  Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_STRING; }
    break;

  case 353:
#line 2887 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_STRING; }
    break;

  case 354:
#line 2890 "sql_yacc.yy"
    { Lex->length=yyvsp[-2].lex_str.str;
					  yyval.num= MYSQL_TYPE_VARCHAR; }
    break;

  case 355:
#line 2892 "sql_yacc.yy"
    { Lex->length=yyvsp[-2].lex_str.str;
					  yyval.num= MYSQL_TYPE_VARCHAR;
					  Lex->charset=national_charset_info; }
    break;

  case 356:
#line 2895 "sql_yacc.yy"
    { Lex->length=yyvsp[-1].lex_str.str;
					  Lex->charset=&my_charset_bin;
					  yyval.num= MYSQL_TYPE_VARCHAR; }
    break;

  case 357:
#line 2898 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_YEAR; }
    break;

  case 358:
#line 2899 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_DATE; }
    break;

  case 359:
#line 2900 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_TIME; }
    break;

  case 360:
#line 2902 "sql_yacc.yy"
    {
	    if (YYTHD->variables.sql_mode & MODE_MAXDB)
	      yyval.num=FIELD_TYPE_DATETIME;
	    else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
	      yyval.num=FIELD_TYPE_TIMESTAMP;
            }
	   }
    break;

  case 361:
#line 2914 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_DATETIME; }
    break;

  case 362:
#line 2915 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_TINY_BLOB; }
    break;

  case 363:
#line 2917 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_BLOB; }
    break;

  case 364:
#line 2920 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)yyvsp[0].num;
            yyval.num=FIELD_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            YYABORT;
#endif
          }
    break;

  case 365:
#line 2931 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 366:
#line 2933 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_LONG_BLOB; }
    break;

  case 367:
#line 2935 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  yyval.num=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 368:
#line 2937 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 369:
#line 2938 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_TINY_BLOB; }
    break;

  case 370:
#line 2939 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_BLOB; }
    break;

  case 371:
#line 2940 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 372:
#line 2941 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_LONG_BLOB; }
    break;

  case 373:
#line 2943 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 374:
#line 2945 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 375:
#line 2947 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 376:
#line 2948 "sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 377:
#line 2949 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_ENUM; }
    break;

  case 378:
#line 2950 "sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 379:
#line 2951 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_SET; }
    break;

  case 380:
#line 2952 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 381:
#line 2954 "sql_yacc.yy"
    {
	    yyval.num=FIELD_TYPE_LONGLONG;
	    Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
		         UNIQUE_FLAG);
	  }
    break;

  case 382:
#line 2962 "sql_yacc.yy"
    { yyval.num= Field::GEOM_GEOMETRY; }
    break;

  case 383:
#line 2963 "sql_yacc.yy"
    { yyval.num= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 384:
#line 2964 "sql_yacc.yy"
    { Lex->length= (char*)"21";
                                yyval.num= Field::GEOM_POINT;
                              }
    break;

  case 385:
#line 2967 "sql_yacc.yy"
    { yyval.num= Field::GEOM_MULTIPOINT; }
    break;

  case 386:
#line 2968 "sql_yacc.yy"
    { yyval.num= Field::GEOM_LINESTRING; }
    break;

  case 387:
#line 2969 "sql_yacc.yy"
    { yyval.num= Field::GEOM_MULTILINESTRING; }
    break;

  case 388:
#line 2970 "sql_yacc.yy"
    { yyval.num= Field::GEOM_POLYGON; }
    break;

  case 389:
#line 2971 "sql_yacc.yy"
    { yyval.num= Field::GEOM_MULTIPOLYGON; }
    break;

  case 390:
#line 2975 "sql_yacc.yy"
    {}
    break;

  case 391:
#line 2979 "sql_yacc.yy"
    {}
    break;

  case 392:
#line 2980 "sql_yacc.yy"
    {}
    break;

  case 393:
#line 2984 "sql_yacc.yy"
    {}
    break;

  case 394:
#line 2985 "sql_yacc.yy"
    {}
    break;

  case 395:
#line 2989 "sql_yacc.yy"
    {}
    break;

  case 396:
#line 2990 "sql_yacc.yy"
    {}
    break;

  case 397:
#line 2991 "sql_yacc.yy"
    {}
    break;

  case 398:
#line 2992 "sql_yacc.yy"
    {}
    break;

  case 399:
#line 2993 "sql_yacc.yy"
    {}
    break;

  case 400:
#line 2997 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_LONG; }
    break;

  case 401:
#line 2998 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_TINY; }
    break;

  case 402:
#line 2999 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_SHORT; }
    break;

  case 403:
#line 3000 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_INT24; }
    break;

  case 404:
#line 3001 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_LONGLONG; }
    break;

  case 405:
#line 3004 "sql_yacc.yy"
    { yyval.num= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
			      FIELD_TYPE_FLOAT : FIELD_TYPE_DOUBLE; }
    break;

  case 406:
#line 3006 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_DOUBLE; }
    break;

  case 407:
#line 3007 "sql_yacc.yy"
    { yyval.num=FIELD_TYPE_DOUBLE; }
    break;

  case 408:
#line 3011 "sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 409:
#line 3012 "sql_yacc.yy"
    { Lex->length=yyvsp[-1].lex_str.str; Lex->dec= (char*)0; }
    break;

  case 410:
#line 3013 "sql_yacc.yy"
    {}
    break;

  case 411:
#line 3017 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->length=yyvsp[-3].lex_str.str; lex->dec=yyvsp[-1].lex_str.str;
	}
    break;

  case 412:
#line 3023 "sql_yacc.yy"
    {}
    break;

  case 413:
#line 3024 "sql_yacc.yy"
    {}
    break;

  case 414:
#line 3027 "sql_yacc.yy"
    {}
    break;

  case 415:
#line 3028 "sql_yacc.yy"
    {}
    break;

  case 416:
#line 3031 "sql_yacc.yy"
    {}
    break;

  case 417:
#line 3032 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 418:
#line 3033 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 419:
#line 3036 "sql_yacc.yy"
    { Lex->length=(char*) 0; }
    break;

  case 420:
#line 3037 "sql_yacc.yy"
    { Lex->length= yyvsp[-1].lex_str.str; }
    break;

  case 421:
#line 3040 "sql_yacc.yy"
    {}
    break;

  case 422:
#line 3041 "sql_yacc.yy"
    {}
    break;

  case 423:
#line 3044 "sql_yacc.yy"
    {}
    break;

  case 424:
#line 3045 "sql_yacc.yy"
    {}
    break;

  case 425:
#line 3048 "sql_yacc.yy"
    {}
    break;

  case 427:
#line 3052 "sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 428:
#line 3053 "sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 429:
#line 3054 "sql_yacc.yy"
    { Lex->default_value=yyvsp[0].item; }
    break;

  case 430:
#line 3056 "sql_yacc.yy"
    { Lex->on_update_value= new Item_func_now_local(); }
    break;

  case 431:
#line 3057 "sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 432:
#line 3059 "sql_yacc.yy"
    { 
	    LEX *lex=Lex;
	    lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 433:
#line 3065 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 434:
#line 3071 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 435:
#line 3077 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_KEY_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 436:
#line 3082 "sql_yacc.yy"
    { Lex->comment= yyvsp[0].lex_str; }
    break;

  case 437:
#line 3084 "sql_yacc.yy"
    {
	    if (Lex->charset && !my_charset_same(Lex->charset,yyvsp[0].charset))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       yyvsp[0].charset->name,Lex->charset->csname);
	      YYABORT;
	    }
	    else
	    {
	      Lex->charset=yyvsp[0].charset;
	    }
	  }
    break;

  case 438:
#line 3099 "sql_yacc.yy"
    { yyval.item= new Item_func_now_local(); }
    break;

  case 439:
#line 3100 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 440:
#line 3104 "sql_yacc.yy"
    {}
    break;

  case 441:
#line 3105 "sql_yacc.yy"
    {}
    break;

  case 442:
#line 3110 "sql_yacc.yy"
    {
	  if (!(yyval.charset=get_charset_by_csname(yyvsp[0].lex_str.str,MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), yyvsp[0].lex_str.str);
	    YYABORT;
	  }
	}
    break;

  case 443:
#line 3117 "sql_yacc.yy"
    { yyval.charset= &my_charset_bin; }
    break;

  case 444:
#line 3121 "sql_yacc.yy"
    { yyval.charset=yyvsp[0].charset;   }
    break;

  case 445:
#line 3122 "sql_yacc.yy"
    { yyval.charset=NULL; }
    break;

  case 446:
#line 3127 "sql_yacc.yy"
    {
	  if (!(yyval.charset=get_charset_by_csname(yyvsp[0].lex_str.str,MY_CS_PRIMARY,MYF(0))) &&
	      !(yyval.charset=get_old_charset_by_name(yyvsp[0].lex_str.str)))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), yyvsp[0].lex_str.str);
	    YYABORT;
	  }
	}
    break;

  case 447:
#line 3135 "sql_yacc.yy"
    { yyval.charset= &my_charset_bin; }
    break;

  case 448:
#line 3139 "sql_yacc.yy"
    { yyval.charset=yyvsp[0].charset;   }
    break;

  case 449:
#line 3140 "sql_yacc.yy"
    { yyval.charset=NULL; }
    break;

  case 450:
#line 3144 "sql_yacc.yy"
    {
	  if (!(yyval.charset=get_charset_by_name(yyvsp[0].lex_str.str,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_COLLATION, MYF(0), yyvsp[0].lex_str.str);
	    YYABORT;
	  }
	}
    break;

  case 451:
#line 3153 "sql_yacc.yy"
    { yyval.charset=NULL; }
    break;

  case 452:
#line 3154 "sql_yacc.yy"
    { yyval.charset=yyvsp[0].charset; }
    break;

  case 453:
#line 3158 "sql_yacc.yy"
    { yyval.charset=yyvsp[0].charset;   }
    break;

  case 454:
#line 3159 "sql_yacc.yy"
    { yyval.charset=NULL; }
    break;

  case 455:
#line 3162 "sql_yacc.yy"
    {}
    break;

  case 456:
#line 3163 "sql_yacc.yy"
    {}
    break;

  case 457:
#line 3166 "sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 458:
#line 3167 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 459:
#line 3168 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 460:
#line 3170 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 461:
#line 3178 "sql_yacc.yy"
    { Lex->charset=yyvsp[-1].charset; }
    break;

  case 462:
#line 3179 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 463:
#line 3182 "sql_yacc.yy"
    { }
    break;

  case 464:
#line 3183 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 465:
#line 3186 "sql_yacc.yy"
    { }
    break;

  case 466:
#line 3187 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 467:
#line 3189 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 468:
#line 3197 "sql_yacc.yy"
    { Lex->charset=yyvsp[0].charset; }
    break;

  case 471:
#line 3206 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fk_delete_opt= lex->fk_update_opt= lex->fk_match_option= 0;
	  lex->ref_list.empty();
	}
    break;

  case 472:
#line 3212 "sql_yacc.yy"
    {
	  yyval.table=yyvsp[-2].table;
	}
    break;

  case 473:
#line 3217 "sql_yacc.yy"
    {}
    break;

  case 474:
#line 3218 "sql_yacc.yy"
    {}
    break;

  case 475:
#line 3221 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec(yyvsp[0].lex_str.str)); }
    break;

  case 476:
#line 3222 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec(yyvsp[0].lex_str.str)); }
    break;

  case 477:
#line 3226 "sql_yacc.yy"
    {}
    break;

  case 478:
#line 3227 "sql_yacc.yy"
    {}
    break;

  case 479:
#line 3230 "sql_yacc.yy"
    {}
    break;

  case 480:
#line 3231 "sql_yacc.yy"
    {}
    break;

  case 481:
#line 3234 "sql_yacc.yy"
    { Lex->fk_delete_opt= yyvsp[0].num; }
    break;

  case 482:
#line 3235 "sql_yacc.yy"
    { Lex->fk_update_opt= yyvsp[0].num; }
    break;

  case 483:
#line 3236 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_FULL; }
    break;

  case 484:
#line 3237 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 485:
#line 3238 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 486:
#line 3241 "sql_yacc.yy"
    { yyval.num= (int) foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 487:
#line 3242 "sql_yacc.yy"
    { yyval.num= (int) foreign_key::FK_OPTION_CASCADE; }
    break;

  case 488:
#line 3243 "sql_yacc.yy"
    { yyval.num= (int) foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 489:
#line 3244 "sql_yacc.yy"
    { yyval.num= (int) foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 490:
#line 3245 "sql_yacc.yy"
    { yyval.num= (int) foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 491:
#line 3248 "sql_yacc.yy"
    { yyval.key_type= Key::MULTIPLE; }
    break;

  case 492:
#line 3249 "sql_yacc.yy"
    { yyval.key_type= Key::FULLTEXT; }
    break;

  case 493:
#line 3251 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    yyval.key_type= Key::SPATIAL;
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 494:
#line 3262 "sql_yacc.yy"
    { yyval.key_type= Key::PRIMARY; }
    break;

  case 495:
#line 3263 "sql_yacc.yy"
    { yyval.key_type= Key::UNIQUE; }
    break;

  case 496:
#line 3266 "sql_yacc.yy"
    {}
    break;

  case 497:
#line 3267 "sql_yacc.yy"
    {}
    break;

  case 498:
#line 3270 "sql_yacc.yy"
    {}
    break;

  case 500:
#line 3275 "sql_yacc.yy"
    {}
    break;

  case 501:
#line 3276 "sql_yacc.yy"
    {}
    break;

  case 502:
#line 3277 "sql_yacc.yy"
    {}
    break;

  case 503:
#line 3280 "sql_yacc.yy"
    { yyval.key_type= Key::MULTIPLE; }
    break;

  case 504:
#line 3281 "sql_yacc.yy"
    { yyval.key_type= Key::UNIQUE; }
    break;

  case 505:
#line 3282 "sql_yacc.yy"
    { yyval.key_type= Key::FULLTEXT;}
    break;

  case 506:
#line 3284 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    yyval.key_type= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 507:
#line 3296 "sql_yacc.yy"
    { yyval.key_alg= HA_KEY_ALG_UNDEF; }
    break;

  case 508:
#line 3297 "sql_yacc.yy"
    { yyval.key_alg= yyvsp[0].key_alg; }
    break;

  case 509:
#line 3298 "sql_yacc.yy"
    { yyval.key_alg= yyvsp[0].key_alg; }
    break;

  case 510:
#line 3301 "sql_yacc.yy"
    { yyval.key_alg= HA_KEY_ALG_BTREE; }
    break;

  case 511:
#line 3303 "sql_yacc.yy"
    {
	    yyval.key_alg= HA_KEY_ALG_RTREE;
	  }
    break;

  case 512:
#line 3306 "sql_yacc.yy"
    { yyval.key_alg= HA_KEY_ALG_HASH; }
    break;

  case 513:
#line 3309 "sql_yacc.yy"
    { Lex->col_list.push_back(yyvsp[-1].key_part); }
    break;

  case 514:
#line 3310 "sql_yacc.yy"
    { Lex->col_list.push_back(yyvsp[-1].key_part); }
    break;

  case 515:
#line 3313 "sql_yacc.yy"
    { yyval.key_part=new key_part_spec(yyvsp[0].lex_str.str); }
    break;

  case 516:
#line 3315 "sql_yacc.yy"
    {
          int key_part_len= atoi(yyvsp[-1].lex_str.str);
          if (!key_part_len)
          {
            my_error(ER_KEY_PART_0, MYF(0), yyvsp[-3].lex_str.str);
          }
          yyval.key_part=new key_part_spec(yyvsp[-3].lex_str.str,(uint) key_part_len);
        }
    break;

  case 517:
#line 3325 "sql_yacc.yy"
    { yyval.simple_string=(char*) 0; }
    break;

  case 518:
#line 3326 "sql_yacc.yy"
    { yyval.simple_string=yyvsp[0].lex_str.str; }
    break;

  case 519:
#line 3329 "sql_yacc.yy"
    { yyval.lex_str= null_lex_str; }
    break;

  case 520:
#line 3330 "sql_yacc.yy"
    { yyval.lex_str= yyvsp[0].lex_str; }
    break;

  case 521:
#line 3333 "sql_yacc.yy"
    { Lex->interval_list.push_back(yyvsp[0].string); }
    break;

  case 522:
#line 3334 "sql_yacc.yy"
    { Lex->interval_list.push_back(yyvsp[0].string); }
    break;

  case 523:
#line 3342 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_ALTER_TABLE;
	  lex->name= 0;
	  lex->duplicates= DUP_ERROR; 
	  if (!lex->select_lex.add_table_to_list(thd, yyvsp[0].table, NULL,
						 TL_OPTION_UPDATING))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
          lex->select_lex.init_order();
	  lex->select_lex.db=lex->name=0;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.db_type= DB_TYPE_DEFAULT;
	  lex->create_info.default_table_charset= NULL;
	  lex->create_info.row_type= ROW_TYPE_NOT_USED;
	  lex->alter_info.reset();
	  lex->alter_info.flags= 0;
	}
    break;

  case 524:
#line 3364 "sql_yacc.yy"
    {}
    break;

  case 525:
#line 3366 "sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 526:
#line 3371 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_ALTER_DB;
	    lex->name= yyvsp[-2].simple_string;
	  }
    break;

  case 527:
#line 3377 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 528:
#line 3388 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_PROCEDURE;
	    lex->spname= yyvsp[-2].spname;
	  }
    break;

  case 529:
#line 3395 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 530:
#line 3406 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_FUNCTION;
	    lex->spname= yyvsp[-2].spname;
	  }
    break;

  case 531:
#line 3414 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    lex->sql_command= SQLCOM_CREATE_VIEW;
	    lex->create_view_mode= VIEW_ALTER;
	    /* first table in list is target VIEW name */
	    lex->select_lex.add_table_to_list(thd, yyvsp[0].table, NULL, 0);
	  }
    break;

  case 532:
#line 3423 "sql_yacc.yy"
    {}
    break;

  case 533:
#line 3427 "sql_yacc.yy"
    { yyval.simple_string= 0; }
    break;

  case 534:
#line 3428 "sql_yacc.yy"
    { yyval.simple_string= yyvsp[0].lex_str.str; }
    break;

  case 536:
#line 3431 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 537:
#line 3432 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 540:
#line 3438 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->change=0;
	  lex->alter_info.flags|= ALTER_ADD_COLUMN;
	}
    break;

  case 541:
#line 3445 "sql_yacc.yy"
    { }
    break;

  case 542:
#line 3447 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_INDEX;
	  }
    break;

  case 543:
#line 3451 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 544:
#line 3455 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->change= yyvsp[0].lex_str.str;
	     lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
	  }
    break;

  case 546:
#line 3462 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
	    lex->charset= NULL;
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 547:
#line 3471 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,yyvsp[-3].lex_str.str,
                                  (enum enum_field_types) yyvsp[-1].num,
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
				  yyvsp[-3].lex_str.str, &lex->interval_list, lex->charset,
				  lex->uint_geom_type))
	       YYABORT;
          }
    break;

  case 549:
#line 3484 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::COLUMN,
                                                               yyvsp[-1].lex_str.str));
	    lex->alter_info.flags|= ALTER_DROP_COLUMN;
	  }
    break;

  case 550:
#line 3491 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 551:
#line 3495 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
				               primary_key_name));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 552:
#line 3502 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
					                       yyvsp[0].lex_str.str));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 553:
#line 3509 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 554:
#line 3515 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 555:
#line 3521 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column(yyvsp[-3].lex_str.str,yyvsp[0].item));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 556:
#line 3527 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column(yyvsp[-2].lex_str.str,
                                                                  (Item*) 0));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 557:
#line 3534 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.db=yyvsp[0].table->db.str;
	    lex->name= yyvsp[0].table->table.str;
            if (check_table_name(yyvsp[0].table->table.str,yyvsp[0].table->table.length) ||
                yyvsp[0].table->db.str && check_db_name(yyvsp[0].table->db.str))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), yyvsp[0].table->table.str);
              YYABORT;
            }
	    lex->alter_info.flags|= ALTER_RENAME;
	  }
    break;

  case 558:
#line 3547 "sql_yacc.yy"
    {
	    if (!yyvsp[-1].charset)
	    {
	      THD *thd= YYTHD;
	      yyvsp[-1].charset= thd->variables.collation_database;
	    }
	    yyvsp[0].charset= yyvsp[0].charset ? yyvsp[0].charset : yyvsp[-1].charset;
	    if (!my_charset_same(yyvsp[-1].charset,yyvsp[0].charset))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       yyvsp[0].charset->name, yyvsp[-1].charset->csname);
	      YYABORT;
	    }
	    LEX *lex= Lex;
	    lex->create_info.table_charset=
	      lex->create_info.default_table_charset= yyvsp[0].charset;
	    lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
					    HA_CREATE_USED_DEFAULT_CHARSET);
	    lex->alter_info.flags|= ALTER_CONVERT;
	  }
    break;

  case 559:
#line 3568 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_OPTIONS;
	  }
    break;

  case 560:
#line 3573 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_FORCE;
	   }
    break;

  case 561:
#line 3577 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_ORDER;
	  }
    break;

  case 562:
#line 3583 "sql_yacc.yy"
    {}
    break;

  case 563:
#line 3584 "sql_yacc.yy"
    {}
    break;

  case 564:
#line 3587 "sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 565:
#line 3588 "sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 566:
#line 3592 "sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 567:
#line 3593 "sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 568:
#line 3594 "sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 569:
#line 3598 "sql_yacc.yy"
    {}
    break;

  case 570:
#line 3599 "sql_yacc.yy"
    { store_position_for_column(yyvsp[0].lex_str.str); }
    break;

  case 571:
#line 3600 "sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 572:
#line 3603 "sql_yacc.yy"
    {}
    break;

  case 573:
#line 3604 "sql_yacc.yy"
    {}
    break;

  case 574:
#line 3605 "sql_yacc.yy"
    {}
    break;

  case 575:
#line 3606 "sql_yacc.yy"
    {}
    break;

  case 576:
#line 3614 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
	    lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 577:
#line 3623 "sql_yacc.yy"
    {}
    break;

  case 578:
#line 3625 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
	    lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 579:
#line 3632 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_START;
	   lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
          }
    break;

  case 580:
#line 3640 "sql_yacc.yy"
    {}
    break;

  case 581:
#line 3642 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_STOP;
	   lex->type = 0;
         }
    break;

  case 582:
#line 3652 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_BEGIN;
          lex->start_transaction_opt= yyvsp[0].num;
        }
    break;

  case 583:
#line 3660 "sql_yacc.yy"
    { yyval.num = 0; }
    break;

  case 584:
#line 3662 "sql_yacc.yy"
    {
           yyval.num= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
        }
    break;

  case 585:
#line 3668 "sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 586:
#line 3670 "sql_yacc.yy"
    {}
    break;

  case 589:
#line 3679 "sql_yacc.yy"
    {}
    break;

  case 590:
#line 3680 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 591:
#line 3681 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 592:
#line 3685 "sql_yacc.yy"
    {}
    break;

  case 593:
#line 3687 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               YYABORT;
            }

          }
    break;

  case 596:
#line 3709 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_RESTORE_TABLE;
	}
    break;

  case 597:
#line 3713 "sql_yacc.yy"
    {
	  Lex->backup_dir = yyvsp[0].lex_str.str;
        }
    break;

  case 598:
#line 3719 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_BACKUP_TABLE;
	}
    break;

  case 599:
#line 3723 "sql_yacc.yy"
    {
	  Lex->backup_dir = yyvsp[0].lex_str.str;
        }
    break;

  case 600:
#line 3729 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_CHECKSUM;
	}
    break;

  case 601:
#line 3734 "sql_yacc.yy"
    {}
    break;

  case 602:
#line 3738 "sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 603:
#line 3739 "sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 604:
#line 3740 "sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 605:
#line 3745 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_REPAIR;
           lex->no_write_to_binlog= yyvsp[-1].num;
	   lex->check_opt.init();
	}
    break;

  case 606:
#line 3752 "sql_yacc.yy"
    {}
    break;

  case 607:
#line 3756 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 608:
#line 3757 "sql_yacc.yy"
    {}
    break;

  case 609:
#line 3760 "sql_yacc.yy"
    {}
    break;

  case 610:
#line 3761 "sql_yacc.yy"
    {}
    break;

  case 611:
#line 3764 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 612:
#line 3765 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 613:
#line 3766 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 614:
#line 3770 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_ANALYZE;
           lex->no_write_to_binlog= yyvsp[-1].num;
	   lex->check_opt.init();
	}
    break;

  case 615:
#line 3777 "sql_yacc.yy"
    {}
    break;

  case 616:
#line 3782 "sql_yacc.yy"
    {
	  LEX *lex=Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_CHECK;
	  lex->check_opt.init();
	}
    break;

  case 617:
#line 3794 "sql_yacc.yy"
    {}
    break;

  case 618:
#line 3798 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 619:
#line 3799 "sql_yacc.yy"
    {}
    break;

  case 620:
#line 3802 "sql_yacc.yy"
    {}
    break;

  case 621:
#line 3803 "sql_yacc.yy"
    {}
    break;

  case 622:
#line 3806 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 623:
#line 3807 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 624:
#line 3808 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 625:
#line 3809 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 626:
#line 3810 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 627:
#line 3814 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_OPTIMIZE;
           lex->no_write_to_binlog= yyvsp[-1].num;
	   lex->check_opt.init();
	}
    break;

  case 628:
#line 3821 "sql_yacc.yy"
    {}
    break;

  case 629:
#line 3825 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 630:
#line 3826 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 631:
#line 3827 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 632:
#line 3832 "sql_yacc.yy"
    {
          Lex->sql_command= SQLCOM_RENAME_TABLE;
	}
    break;

  case 633:
#line 3836 "sql_yacc.yy"
    {}
    break;

  case 634:
#line 3838 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 635:
#line 3845 "sql_yacc.yy"
    {
          if (Lex->users_list.push_back(yyvsp[-2].lex_user) || Lex->users_list.push_back(yyvsp[0].lex_user))
            YYABORT;
        }
    break;

  case 636:
#line 3850 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back(yyvsp[-2].lex_user) || Lex->users_list.push_back(yyvsp[0].lex_user))
              YYABORT;
          }
    break;

  case 639:
#line 3862 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sl= lex->current_select;
	  if (!sl->add_table_to_list(lex->thd, yyvsp[-2].table,NULL,TL_OPTION_UPDATING,
				     TL_IGNORE) ||
	      !sl->add_table_to_list(lex->thd, yyvsp[0].table,NULL,TL_OPTION_UPDATING,
				     TL_IGNORE))
	    YYABORT;
	}
    break;

  case 640:
#line 3874 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
	  lex->ident= yyvsp[0].lex_str;
        }
    break;

  case 643:
#line 3887 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          if (!sel->add_table_to_list(lex->thd, yyvsp[-1].table, NULL, 0,
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
        }
    break;

  case 644:
#line 3899 "sql_yacc.yy"
    { yyval.lex_str= yyvsp[0].lex_str; }
    break;

  case 645:
#line 3900 "sql_yacc.yy"
    { yyval.lex_str = default_key_cache_base; }
    break;

  case 646:
#line 3905 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_PRELOAD_KEYS;
	}
    break;

  case 647:
#line 3910 "sql_yacc.yy"
    {}
    break;

  case 650:
#line 3919 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sel= &lex->select_lex;
	  if (!sel->add_table_to_list(lex->thd, yyvsp[-2].table, NULL, yyvsp[0].num,
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
	}
    break;

  case 651:
#line 3931 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 652:
#line 3933 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          sel->use_index= sel->interval_list;
        }
    break;

  case 653:
#line 3941 "sql_yacc.yy"
    { Lex->select_lex.use_index_ptr= 0; }
    break;

  case 654:
#line 3943 "sql_yacc.yy"
    {
            SELECT_LEX *sel= &Lex->select_lex;
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 655:
#line 3951 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 656:
#line 3952 "sql_yacc.yy"
    { yyval.num= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 657:
#line 3962 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_SELECT;
	}
    break;

  case 660:
#line 3976 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
	    if (sel->set_braces(1))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
	  if (sel->linkage == UNION_TYPE &&
	      !sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
            /* select in braces, can't contain global parameters */
	    if (sel->master_unit()->fake_select_lex)
              sel->master_unit()->global_parameters=
                 sel->master_unit()->fake_select_lex;
          }
    break;

  case 662:
#line 3999 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          SELECT_LEX * sel= lex->current_select;
          if (lex->current_select->set_braces(0))
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (sel->linkage == UNION_TYPE &&
	      sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 664:
#line 4018 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->linkage != UNION_TYPE)
	    mysql_init_select(lex);
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 665:
#line 4026 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 667:
#line 4032 "sql_yacc.yy"
    {}
    break;

  case 675:
#line 4051 "sql_yacc.yy"
    {
	    if (test_all_bits(Select->options, SELECT_ALL | SELECT_DISTINCT))
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              YYABORT;
	    }
          }
    break;

  case 678:
#line 4065 "sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 679:
#line 4067 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Lex->lock_option= TL_READ_HIGH_PRIORITY;
	  }
    break;

  case 680:
#line 4072 "sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 681:
#line 4073 "sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 682:
#line 4074 "sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 683:
#line 4076 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_BUFFER_RESULT;
	  }
    break;

  case 684:
#line 4082 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_FOUND_ROWS;
	  }
    break;

  case 685:
#line 4087 "sql_yacc.yy"
    { Lex->safe_to_cache_query=0; }
    break;

  case 686:
#line 4089 "sql_yacc.yy"
    {
	    Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
	  }
    break;

  case 687:
#line 4092 "sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 689:
#line 4098 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->set_lock_for_tables(TL_WRITE);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 690:
#line 4104 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->
	      set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 693:
#line 4116 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (add_item_to_list(thd,
                                 new Item_field(&thd->lex->current_select->
                                                context,
                                                NULL, NULL, "*")))
	      YYABORT;
	    (thd->lex->current_select->with_wild)++;
	  }
    break;

  case 694:
#line 4129 "sql_yacc.yy"
    {
	    if (add_item_to_list(YYTHD, yyvsp[-2].item))
	      YYABORT;
	    if (yyvsp[0].lex_str.str)
            {
	      yyvsp[-2].item->set_name(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, system_charset_info);
              yyvsp[-2].item->is_autogenerated_name= FALSE;
            }
	    else if (!yyvsp[-2].item->name) {
	      char *str = yyvsp[-3].simple_string;
	      if (str[-1] == '`')
	        str--;
	      yyvsp[-2].item->set_name(str,(uint) (yyvsp[-1].simple_string - str), YYTHD->charset());
	    }
	  }
    break;

  case 695:
#line 4146 "sql_yacc.yy"
    { yyval.simple_string=(char*) Lex->tok_start; }
    break;

  case 696:
#line 4149 "sql_yacc.yy"
    { yyval.simple_string=(char*) Lex->tok_end; }
    break;

  case 697:
#line 4152 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 698:
#line 4153 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 699:
#line 4156 "sql_yacc.yy"
    { yyval.lex_str=null_lex_str;}
    break;

  case 700:
#line 4157 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 701:
#line 4158 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 702:
#line 4159 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 703:
#line 4160 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 704:
#line 4164 "sql_yacc.yy"
    {}
    break;

  case 705:
#line 4165 "sql_yacc.yy"
    {}
    break;

  case 706:
#line 4169 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 707:
#line 4171 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front(yyvsp[-2].item);
              yyval.item= new Item_cond_or(*list);
              /* optimize construction of logical OR to reduce
                 amount of objects for complex expressions */
            }
            else
              yyval.item= yyvsp[-2].item;
            delete list;
          }
    break;

  case 709:
#line 4189 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 710:
#line 4193 "sql_yacc.yy"
    { yyval.item= new Item_cond_xor(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 711:
#line 4194 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 712:
#line 4196 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front(yyvsp[-2].item);
              yyval.item= new Item_cond_and(*list);
              /* optimize construction of logical AND to reduce
                 amount of objects for complex expressions */
            }
            else
              yyval.item= yyvsp[-2].item;
            delete list;
          }
    break;

  case 714:
#line 4214 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 715:
#line 4218 "sql_yacc.yy"
    { yyval.item= negate_expression(YYTHD, yyvsp[0].item); }
    break;

  case 717:
#line 4222 "sql_yacc.yy"
    { yyval.item= is_truth_value(yyvsp[-2].item,1,0); }
    break;

  case 718:
#line 4223 "sql_yacc.yy"
    { yyval.item= is_truth_value(yyvsp[-3].item,0,0); }
    break;

  case 719:
#line 4224 "sql_yacc.yy"
    { yyval.item= is_truth_value(yyvsp[-2].item,0,1); }
    break;

  case 720:
#line 4225 "sql_yacc.yy"
    { yyval.item= is_truth_value(yyvsp[-3].item,1,1); }
    break;

  case 721:
#line 4226 "sql_yacc.yy"
    { yyval.item= new Item_func_isnull(yyvsp[-2].item); }
    break;

  case 722:
#line 4227 "sql_yacc.yy"
    { yyval.item= new Item_func_isnotnull(yyvsp[-3].item); }
    break;

  case 724:
#line 4231 "sql_yacc.yy"
    { yyval.item= new Item_func_isnull(yyvsp[-2].item); }
    break;

  case 725:
#line 4232 "sql_yacc.yy"
    { yyval.item= new Item_func_isnotnull(yyvsp[-3].item); }
    break;

  case 726:
#line 4233 "sql_yacc.yy"
    { yyval.item= new Item_func_equal(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 727:
#line 4235 "sql_yacc.yy"
    { yyval.item= (*yyvsp[-1].boolfunc2creator)(0)->create(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 728:
#line 4237 "sql_yacc.yy"
    { yyval.item= all_any_subquery_creator(yyvsp[-3].item, yyvsp[-2].boolfunc2creator, yyvsp[-1].num, yyvsp[0].select_lex); }
    break;

  case 730:
#line 4242 "sql_yacc.yy"
    { 
            if (yyvsp[-1].item_list->elements == 1)
              yyval.item= new Item_func_eq(yyvsp[-4].item, yyvsp[-1].item_list->head());
            else
            {
              yyvsp[-1].item_list->push_front(yyvsp[-4].item);
              yyval.item= new Item_func_in(*yyvsp[-1].item_list);
            }
          }
    break;

  case 731:
#line 4252 "sql_yacc.yy"
    {
            if (yyvsp[-1].item_list->elements == 1)
              yyval.item= new Item_func_ne(yyvsp[-5].item, yyvsp[-1].item_list->head());
            else
            {
              yyvsp[-1].item_list->push_front(yyvsp[-5].item);
              Item_func_in *item = new Item_func_in(*yyvsp[-1].item_list);
              item->negate();
              yyval.item= item;
            }            
          }
    break;

  case 732:
#line 4264 "sql_yacc.yy"
    { yyval.item= new Item_in_subselect(yyvsp[-2].item, yyvsp[0].select_lex); }
    break;

  case 733:
#line 4266 "sql_yacc.yy"
    { yyval.item= negate_expression(YYTHD, new Item_in_subselect(yyvsp[-3].item, yyvsp[0].select_lex)); }
    break;

  case 734:
#line 4268 "sql_yacc.yy"
    { yyval.item= new Item_func_between(yyvsp[-4].item,yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 735:
#line 4270 "sql_yacc.yy"
    {
      Item_func_between *item= new Item_func_between(yyvsp[-5].item,yyvsp[-2].item,yyvsp[0].item);
      item->negate();
      yyval.item= item;
    }
    break;

  case 736:
#line 4276 "sql_yacc.yy"
    { yyval.item= new Item_func_eq(new Item_func_soundex(yyvsp[-3].item),
				 new Item_func_soundex(yyvsp[0].item)); }
    break;

  case 737:
#line 4279 "sql_yacc.yy"
    { yyval.item= new Item_func_like(yyvsp[-3].item,yyvsp[-1].item,yyvsp[0].item,Lex->escape_used); }
    break;

  case 738:
#line 4281 "sql_yacc.yy"
    { yyval.item= new Item_func_not(new Item_func_like(yyvsp[-4].item,yyvsp[-1].item,yyvsp[0].item, Lex->escape_used)); }
    break;

  case 739:
#line 4282 "sql_yacc.yy"
    { yyval.item= new Item_func_regex(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 740:
#line 4284 "sql_yacc.yy"
    { yyval.item= negate_expression(YYTHD, new Item_func_regex(yyvsp[-3].item,yyvsp[0].item)); }
    break;

  case 742:
#line 4288 "sql_yacc.yy"
    { yyval.item= new Item_func_bit_or(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 744:
#line 4292 "sql_yacc.yy"
    { yyval.item= new Item_func_bit_and(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 746:
#line 4297 "sql_yacc.yy"
    { yyval.item= new Item_func_shift_left(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 747:
#line 4299 "sql_yacc.yy"
    { yyval.item= new Item_func_shift_right(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 749:
#line 4303 "sql_yacc.yy"
    { yyval.item= new Item_func_plus(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 750:
#line 4304 "sql_yacc.yy"
    { yyval.item= new Item_func_minus(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 751:
#line 4306 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-3].item,yyvsp[-1].item,yyvsp[0].interval,0); }
    break;

  case 752:
#line 4308 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-3].item,yyvsp[-1].item,yyvsp[0].interval,1); }
    break;

  case 754:
#line 4312 "sql_yacc.yy"
    { yyval.item= new Item_func_mul(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 755:
#line 4313 "sql_yacc.yy"
    { yyval.item= new Item_func_div(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 756:
#line 4314 "sql_yacc.yy"
    { yyval.item= new Item_func_mod(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 757:
#line 4315 "sql_yacc.yy"
    { yyval.item= new Item_func_int_div(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 758:
#line 4316 "sql_yacc.yy"
    { yyval.item= new Item_func_mod(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 760:
#line 4320 "sql_yacc.yy"
    { yyval.item= new Item_func_bit_xor(yyvsp[-2].item,yyvsp[0].item); }
    break;

  case 770:
#line 4328 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_eq_creator; }
    break;

  case 771:
#line 4329 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_ge_creator; }
    break;

  case 772:
#line 4330 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_gt_creator; }
    break;

  case 773:
#line 4331 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_le_creator; }
    break;

  case 774:
#line 4332 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_lt_creator; }
    break;

  case 775:
#line 4333 "sql_yacc.yy"
    { yyval.boolfunc2creator = &comp_ne_creator; }
    break;

  case 776:
#line 4336 "sql_yacc.yy"
    { yyval.num = 1; }
    break;

  case 777:
#line 4337 "sql_yacc.yy"
    { yyval.num = 0; }
    break;

  case 778:
#line 4341 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 780:
#line 4347 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_set_collation(yyvsp[-2].item,
					    new Item_string(yyvsp[0].lex_str.str,
							    yyvsp[0].lex_str.length,
                                                            YYTHD->charset()));
	  }
    break;

  case 783:
#line 4356 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_set_user_var(yyvsp[-2].lex_str,yyvsp[0].item);
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 784:
#line 4363 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_get_user_var(yyvsp[0].lex_str);
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 785:
#line 4370 "sql_yacc.yy"
    {

            if (yyvsp[-1].lex_str.str && yyvsp[0].lex_str.str && check_reserved_words(&yyvsp[-1].lex_str))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
	    if (!(yyval.item= get_system_var(YYTHD, yyvsp[-2].var_type, yyvsp[-1].lex_str, yyvsp[0].lex_str)))
	      YYABORT;
	    Lex->variables_used= 1;
	  }
    break;

  case 787:
#line 4383 "sql_yacc.yy"
    { yyval.item= new Item_func_concat(yyvsp[-2].item, yyvsp[0].item); }
    break;

  case 788:
#line 4384 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 789:
#line 4385 "sql_yacc.yy"
    { yyval.item= new Item_func_neg(yyvsp[0].item); }
    break;

  case 790:
#line 4386 "sql_yacc.yy"
    { yyval.item= new Item_func_bit_neg(yyvsp[0].item); }
    break;

  case 791:
#line 4387 "sql_yacc.yy"
    { yyval.item= negate_expression(YYTHD, yyvsp[0].item); }
    break;

  case 792:
#line 4388 "sql_yacc.yy"
    { yyval.item= yyvsp[-1].item; }
    break;

  case 793:
#line 4390 "sql_yacc.yy"
    {
	    yyvsp[-1].item_list->push_front(yyvsp[-3].item);
	    yyval.item= new Item_row(*yyvsp[-1].item_list);
	  }
    break;

  case 794:
#line 4395 "sql_yacc.yy"
    {
	    yyvsp[-1].item_list->push_front(yyvsp[-3].item);
	    yyval.item= new Item_row(*yyvsp[-1].item_list);
	  }
    break;

  case 795:
#line 4399 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 796:
#line 4400 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 797:
#line 4401 "sql_yacc.yy"
    { yyval.item= yyvsp[-1].item; }
    break;

  case 798:
#line 4403 "sql_yacc.yy"
    { yyvsp[-5].item_list->push_front(yyvsp[-2].item);
            Select->add_ftfunc_to_list((Item_func_match*)
                                        (yyval.item=new Item_func_match(*yyvsp[-5].item_list,yyvsp[-1].num))); }
    break;

  case 799:
#line 4406 "sql_yacc.yy"
    { yyval.item= new Item_func_ascii(yyvsp[-1].item); }
    break;

  case 800:
#line 4408 "sql_yacc.yy"
    {
            yyval.item= create_func_cast(yyvsp[0].item, ITEM_CAST_CHAR, -1, 0, &my_charset_bin);
	  }
    break;

  case 801:
#line 4412 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    yyval.item= create_func_cast(yyvsp[-3].item, yyvsp[-1].cast_type,
                                 lex->length ? atoi(lex->length) : -1,
                                 lex->dec ? atoi(lex->dec) : 0,
                                 lex->charset);
	  }
    break;

  case 802:
#line 4420 "sql_yacc.yy"
    { yyval.item= new Item_func_case(* yyvsp[-2].item_list, yyvsp[-4].item, yyvsp[-1].item ); }
    break;

  case 803:
#line 4422 "sql_yacc.yy"
    {
	    yyval.item= create_func_cast(yyvsp[-3].item, yyvsp[-1].cast_type,
				 Lex->length ? atoi(Lex->length) : -1,
                                 Lex->dec ? atoi(Lex->dec) : 0,
				 Lex->charset);
	  }
    break;

  case 804:
#line 4429 "sql_yacc.yy"
    { yyval.item= new Item_func_conv_charset(yyvsp[-3].item,yyvsp[-1].charset); }
    break;

  case 805:
#line 4431 "sql_yacc.yy"
    {
	    if (yyvsp[-1].item->is_splocal())
	    {
	      Item_splocal *il= static_cast<Item_splocal *>(yyvsp[-1].item);

	      my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
	      YYABORT;
	    }
	    yyval.item= new Item_default_value(Lex->current_context(), yyvsp[-1].item);
	  }
    break;

  case 806:
#line 4442 "sql_yacc.yy"
    { yyval.item= new Item_insert_value(Lex->current_context(), yyvsp[-1].item); }
    break;

  case 807:
#line 4444 "sql_yacc.yy"
    {
	    if (!yyvsp[-2].symbol.symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       yyvsp[-2].symbol.symbol->group->name,
                       yyvsp[-2].symbol.symbol->group->needed_define);
	      YYABORT;
	    }
	    yyval.item= ((Item*(*)(void))(yyvsp[-2].symbol.symbol->create_func))();
	  }
    break;

  case 808:
#line 4455 "sql_yacc.yy"
    {
	    if (!yyvsp[-3].symbol.symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       yyvsp[-3].symbol.symbol->group->name,
                       yyvsp[-3].symbol.symbol->group->needed_define);
	      YYABORT;
	    }
	    yyval.item= ((Item*(*)(Item*))(yyvsp[-3].symbol.symbol->create_func))(yyvsp[-1].item);
	  }
    break;

  case 809:
#line 4466 "sql_yacc.yy"
    {
	    if (!yyvsp[-5].symbol.symbol->create_func)
	    {
	      my_error(ER_FEATURE_DISABLED, MYF(0),
                       yyvsp[-5].symbol.symbol->group->name,
                       yyvsp[-5].symbol.symbol->group->needed_define);
	      YYABORT;
	    }
	    yyval.item= ((Item*(*)(Item*,Item*))(yyvsp[-5].symbol.symbol->create_func))(yyvsp[-3].item,yyvsp[-1].item);
	  }
    break;

  case 810:
#line 4477 "sql_yacc.yy"
    {
	    if (!yyvsp[-7].symbol.symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       yyvsp[-7].symbol.symbol->group->name,
                       yyvsp[-7].symbol.symbol->group->needed_define);
	      YYABORT;
	    }
	    yyval.item= ((Item*(*)(Item*,Item*,Item*))(yyvsp[-7].symbol.symbol->create_func))(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item);
	  }
    break;

  case 811:
#line 4488 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-3].item, yyvsp[-1].item, INTERVAL_DAY, 0);}
    break;

  case 812:
#line 4490 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-5].item, yyvsp[-2].item, yyvsp[-1].interval, 0); }
    break;

  case 813:
#line 4492 "sql_yacc.yy"
    { yyval.item= new Item_func_repeat(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 814:
#line 4494 "sql_yacc.yy"
    { yyval.item= new Item_func_atan(yyvsp[-1].item); }
    break;

  case 815:
#line 4496 "sql_yacc.yy"
    { yyval.item= new Item_func_atan(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 816:
#line 4498 "sql_yacc.yy"
    { yyval.item= new Item_func_char(*yyvsp[-1].item_list); }
    break;

  case 817:
#line 4500 "sql_yacc.yy"
    { yyval.item= new Item_func_char(*yyvsp[-3].item_list, yyvsp[-1].charset); }
    break;

  case 818:
#line 4502 "sql_yacc.yy"
    { yyval.item= new Item_func_charset(yyvsp[-1].item); }
    break;

  case 819:
#line 4504 "sql_yacc.yy"
    { yyval.item= new Item_func_coalesce(* yyvsp[-1].item_list); }
    break;

  case 820:
#line 4506 "sql_yacc.yy"
    { yyval.item= new Item_func_collation(yyvsp[-1].item); }
    break;

  case 821:
#line 4508 "sql_yacc.yy"
    { yyval.item= new Item_func_concat(* yyvsp[-1].item_list); }
    break;

  case 822:
#line 4510 "sql_yacc.yy"
    { yyvsp[-1].item_list->push_front(yyvsp[-3].item); yyval.item= new Item_func_concat_ws(*yyvsp[-1].item_list); }
    break;

  case 823:
#line 4512 "sql_yacc.yy"
    {
            if (Lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
	    yyval.item= new Item_func_convert_tz(yyvsp[-5].item, yyvsp[-3].item, yyvsp[-1].item);
	  }
    break;

  case 824:
#line 4518 "sql_yacc.yy"
    { yyval.item= new Item_func_curdate_local(); Lex->safe_to_cache_query=0; }
    break;

  case 825:
#line 4520 "sql_yacc.yy"
    { yyval.item= new Item_func_curtime_local(); Lex->safe_to_cache_query=0; }
    break;

  case 826:
#line 4522 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_curtime_local(yyvsp[-1].item);
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 827:
#line 4527 "sql_yacc.yy"
    { yyval.item= create_func_current_user(); }
    break;

  case 828:
#line 4529 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-4].item,yyvsp[-2].item,yyvsp[-1].interval,0); }
    break;

  case 829:
#line 4531 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-4].item,yyvsp[-2].item,yyvsp[-1].interval,1); }
    break;

  case 830:
#line 4533 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_database();
            Lex->safe_to_cache_query=0;
	  }
    break;

  case 831:
#line 4538 "sql_yacc.yy"
    { yyval.item= new Item_date_typecast(yyvsp[-1].item); }
    break;

  case 832:
#line 4540 "sql_yacc.yy"
    { yyval.item= new Item_func_dayofmonth(yyvsp[-1].item); }
    break;

  case 833:
#line 4542 "sql_yacc.yy"
    { yyvsp[-1].item_list->push_front(yyvsp[-3].item); yyval.item= new Item_func_elt(*yyvsp[-1].item_list); }
    break;

  case 834:
#line 4544 "sql_yacc.yy"
    { yyval.item= new Item_func_make_set(yyvsp[-3].item, *yyvsp[-1].item_list); }
    break;

  case 835:
#line 4546 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_encrypt(yyvsp[-1].item);
	    Lex->uncacheable(UNCACHEABLE_RAND);
	  }
    break;

  case 836:
#line 4550 "sql_yacc.yy"
    { yyval.item= new Item_func_encrypt(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 837:
#line 4552 "sql_yacc.yy"
    { yyval.item= new Item_func_decode(yyvsp[-3].item,yyvsp[-1].lex_str.str); }
    break;

  case 838:
#line 4554 "sql_yacc.yy"
    { yyval.item= new Item_func_encode(yyvsp[-3].item,yyvsp[-1].lex_str.str); }
    break;

  case 839:
#line 4556 "sql_yacc.yy"
    { yyval.item= new Item_func_des_decrypt(yyvsp[-1].item); }
    break;

  case 840:
#line 4558 "sql_yacc.yy"
    { yyval.item= new Item_func_des_decrypt(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 841:
#line 4560 "sql_yacc.yy"
    { yyval.item= new Item_func_des_encrypt(yyvsp[-1].item); }
    break;

  case 842:
#line 4562 "sql_yacc.yy"
    { yyval.item= new Item_func_des_encrypt(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 843:
#line 4564 "sql_yacc.yy"
    { yyval.item= new Item_func_export_set(yyvsp[-5].item, yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 844:
#line 4566 "sql_yacc.yy"
    { yyval.item= new Item_func_export_set(yyvsp[-7].item, yyvsp[-5].item, yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 845:
#line 4568 "sql_yacc.yy"
    { yyval.item= new Item_func_export_set(yyvsp[-9].item, yyvsp[-7].item, yyvsp[-5].item, yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 846:
#line 4570 "sql_yacc.yy"
    { yyval.item= new Item_func_format(yyvsp[-3].item,atoi(yyvsp[-1].lex_str.str)); }
    break;

  case 847:
#line 4572 "sql_yacc.yy"
    { yyval.item= new Item_func_from_unixtime(yyvsp[-1].item); }
    break;

  case 848:
#line 4574 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_date_format (new Item_func_from_unixtime(yyvsp[-3].item),yyvsp[-1].item,0);
	  }
    break;

  case 849:
#line 4578 "sql_yacc.yy"
    { yyvsp[-1].item_list->push_front(yyvsp[-3].item); yyval.item= new Item_func_field(*yyvsp[-1].item_list); }
    break;

  case 850:
#line 4580 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    yyval.item= yyvsp[0].item;
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 851:
#line 4590 "sql_yacc.yy"
    { yyval.item= new Item_func_get_format(yyvsp[-3].date_time_type, yyvsp[-1].item); }
    break;

  case 852:
#line 4592 "sql_yacc.yy"
    { yyval.item= new Item_func_hour(yyvsp[-1].item); }
    break;

  case 853:
#line 4594 "sql_yacc.yy"
    { yyval.item= new Item_func_if(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 854:
#line 4596 "sql_yacc.yy"
    { yyval.item= new Item_func_insert(yyvsp[-7].item,yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 855:
#line 4599 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[0].item,yyvsp[-3].item,yyvsp[-2].interval,0); }
    break;

  case 856:
#line 4601 "sql_yacc.yy"
    {
            if (yyvsp[0].item->type() != Item::ROW_ITEM)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            yyval.item= new Item_func_interval((Item_row *)yyvsp[0].item);
          }
    break;

  case 857:
#line 4610 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_last_insert_id();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 858:
#line 4615 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_last_insert_id(yyvsp[-1].item);
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 859:
#line 4620 "sql_yacc.yy"
    { yyval.item= new Item_func_left(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 860:
#line 4622 "sql_yacc.yy"
    { yyval.item= new Item_func_locate(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 861:
#line 4624 "sql_yacc.yy"
    { yyval.item= new Item_func_locate(yyvsp[-3].item,yyvsp[-5].item,yyvsp[-1].item); }
    break;

  case 862:
#line 4626 "sql_yacc.yy"
    { yyvsp[-1].item_list->push_front(yyvsp[-3].item); yyval.item= new Item_func_max(*yyvsp[-1].item_list); }
    break;

  case 863:
#line 4628 "sql_yacc.yy"
    { yyvsp[-1].item_list->push_front(yyvsp[-3].item); yyval.item= new Item_func_min(*yyvsp[-1].item_list); }
    break;

  case 864:
#line 4630 "sql_yacc.yy"
    { yyval.item= new Item_func_log(yyvsp[-1].item); }
    break;

  case 865:
#line 4632 "sql_yacc.yy"
    { yyval.item= new Item_func_log(yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 866:
#line 4634 "sql_yacc.yy"
    {
	    yyval.item= new Item_master_pos_wait(yyvsp[-3].item, yyvsp[-1].item);
	    Lex->safe_to_cache_query=0;
		  }
    break;

  case 867:
#line 4639 "sql_yacc.yy"
    {
	    yyval.item= new Item_master_pos_wait(yyvsp[-5].item, yyvsp[-3].item, yyvsp[-1].item);
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 868:
#line 4644 "sql_yacc.yy"
    { yyval.item= new Item_func_microsecond(yyvsp[-1].item); }
    break;

  case 869:
#line 4646 "sql_yacc.yy"
    { yyval.item= new Item_func_minute(yyvsp[-1].item); }
    break;

  case 870:
#line 4648 "sql_yacc.yy"
    { yyval.item = new Item_func_mod( yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 871:
#line 4650 "sql_yacc.yy"
    { yyval.item= new Item_func_month(yyvsp[-1].item); }
    break;

  case 872:
#line 4652 "sql_yacc.yy"
    { yyval.item= new Item_func_now_local(); Lex->safe_to_cache_query=0;}
    break;

  case 873:
#line 4654 "sql_yacc.yy"
    { yyval.item= new Item_func_now_local(yyvsp[-1].item); Lex->safe_to_cache_query=0;}
    break;

  case 874:
#line 4656 "sql_yacc.yy"
    {
	    yyval.item= YYTHD->variables.old_passwords ?
              (Item *) new Item_func_old_password(yyvsp[-1].item) :
	      (Item *) new Item_func_password(yyvsp[-1].item);
	  }
    break;

  case 875:
#line 4662 "sql_yacc.yy"
    { yyval.item=  new Item_func_old_password(yyvsp[-1].item); }
    break;

  case 876:
#line 4664 "sql_yacc.yy"
    { yyval.item = new Item_func_locate(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 877:
#line 4666 "sql_yacc.yy"
    { yyval.item = new Item_func_quarter(yyvsp[-1].item); }
    break;

  case 878:
#line 4668 "sql_yacc.yy"
    { yyval.item= new Item_func_rand(yyvsp[-1].item); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 879:
#line 4670 "sql_yacc.yy"
    { yyval.item= new Item_func_rand(); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 880:
#line 4672 "sql_yacc.yy"
    { yyval.item= new Item_func_replace(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 881:
#line 4674 "sql_yacc.yy"
    { yyval.item= new Item_func_right(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 882:
#line 4676 "sql_yacc.yy"
    { yyval.item= new Item_func_round(yyvsp[-1].item, new Item_int((char*)"0",0,1),0); }
    break;

  case 883:
#line 4677 "sql_yacc.yy"
    { yyval.item= new Item_func_round(yyvsp[-3].item,yyvsp[-1].item,0); }
    break;

  case 884:
#line 4679 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_row_count();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 885:
#line 4684 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-3].item, yyvsp[-1].item, INTERVAL_DAY, 1);}
    break;

  case 886:
#line 4686 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-5].item, yyvsp[-2].item, yyvsp[-1].interval, 1); }
    break;

  case 887:
#line 4688 "sql_yacc.yy"
    { yyval.item= new Item_func_second(yyvsp[-1].item); }
    break;

  case 888:
#line 4690 "sql_yacc.yy"
    { yyval.item= new Item_func_substr(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 889:
#line 4692 "sql_yacc.yy"
    { yyval.item= new Item_func_substr(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 890:
#line 4694 "sql_yacc.yy"
    { yyval.item= new Item_func_substr(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 891:
#line 4696 "sql_yacc.yy"
    { yyval.item= new Item_func_substr(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 892:
#line 4698 "sql_yacc.yy"
    { yyval.item= new Item_func_substr_index(yyvsp[-5].item,yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 893:
#line 4700 "sql_yacc.yy"
    { yyval.item= new Item_func_sysdate_local(); Lex->safe_to_cache_query=0;}
    break;

  case 894:
#line 4702 "sql_yacc.yy"
    { yyval.item= new Item_func_sysdate_local(yyvsp[-1].item); Lex->safe_to_cache_query=0;}
    break;

  case 895:
#line 4704 "sql_yacc.yy"
    { yyval.item= new Item_time_typecast(yyvsp[-1].item); }
    break;

  case 896:
#line 4706 "sql_yacc.yy"
    { yyval.item= new Item_datetime_typecast(yyvsp[-1].item); }
    break;

  case 897:
#line 4708 "sql_yacc.yy"
    { yyval.item= new Item_func_add_time(yyvsp[-3].item, yyvsp[-1].item, 1, 0); }
    break;

  case 898:
#line 4710 "sql_yacc.yy"
    { yyval.item= new Item_date_add_interval(yyvsp[-1].item,yyvsp[-3].item,yyvsp[-5].interval_time_st,0); }
    break;

  case 899:
#line 4712 "sql_yacc.yy"
    { yyval.item= new Item_func_timestamp_diff(yyvsp[-3].item,yyvsp[-1].item,yyvsp[-5].interval_time_st); }
    break;

  case 900:
#line 4714 "sql_yacc.yy"
    { yyval.item= new Item_func_trim(yyvsp[-1].item); }
    break;

  case 901:
#line 4716 "sql_yacc.yy"
    { yyval.item= new Item_func_ltrim(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 902:
#line 4718 "sql_yacc.yy"
    { yyval.item= new Item_func_rtrim(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 903:
#line 4720 "sql_yacc.yy"
    { yyval.item= new Item_func_trim(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 904:
#line 4722 "sql_yacc.yy"
    { yyval.item= new Item_func_ltrim(yyvsp[-1].item); }
    break;

  case 905:
#line 4724 "sql_yacc.yy"
    { yyval.item= new Item_func_rtrim(yyvsp[-1].item); }
    break;

  case 906:
#line 4726 "sql_yacc.yy"
    { yyval.item= new Item_func_trim(yyvsp[-1].item); }
    break;

  case 907:
#line 4728 "sql_yacc.yy"
    { yyval.item= new Item_func_trim(yyvsp[-1].item,yyvsp[-3].item); }
    break;

  case 908:
#line 4730 "sql_yacc.yy"
    { yyval.item= new Item_func_round(yyvsp[-3].item,yyvsp[-1].item,1); }
    break;

  case 909:
#line 4732 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_name *name= new sp_name(yyvsp[-5].lex_str, yyvsp[-3].lex_str);

	    name->init_qname(YYTHD);
	    sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
	    if (yyvsp[-1].item_list)
	      yyval.item= new Item_func_sp(Lex->current_context(), name, *yyvsp[-1].item_list);
	    else
	      yyval.item= new Item_func_sp(Lex->current_context(), name);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 910:
#line 4745 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            if (using_udf_functions &&
                (udf= find_udf(yyvsp[-1].lex_str.str, yyvsp[-1].lex_str.length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              LEX *lex= Lex;
              if (lex->current_select->inc_in_sum_expr())
              {
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
              }
            }
            yyval.udf= udf;
#endif
          }
    break;

  case 911:
#line 4763 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= yyvsp[-2].udf;
            SELECT_LEX *sel= Select;

            if (udf)
            {
              if (udf->type == UDFTYPE_AGGREGATE)
                Select->in_sum_expr--;

              switch (udf->returns) {
              case STRING_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_func_udf_str(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_func_udf_str(udf);
                }
                else
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_sum_udf_str(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_sum_udf_str(udf);
                }
                break;
              case REAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_func_udf_float(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_func_udf_float(udf);
                }
                else
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_sum_udf_float(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_sum_udf_float(udf);
                }
                break;
              case INT_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_func_udf_int(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_func_udf_int(udf);
                }
                else
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_sum_udf_int(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_sum_udf_int(udf);
                }
                break;
              case DECIMAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_func_udf_decimal(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_func_udf_decimal(udf);
                }
                else
                {
                  if (yyvsp[-1].item_list != NULL)
                    yyval.item = new Item_sum_udf_decimal(udf, *yyvsp[-1].item_list);
                  else
                    yyval.item = new Item_sum_udf_decimal(udf);
                }
                break;
              default:
                YYABORT;
              }
            }
            else
#endif /* HAVE_DLOPEN */
            {
	      LEX *lex= Lex;
              sp_name *name= sp_name_current_db_new(YYTHD, yyvsp[-4].lex_str);

              sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
              if (yyvsp[-1].item_list)
                yyval.item= new Item_func_sp(Lex->current_context(), name, *yyvsp[-1].item_list);
              else
                yyval.item= new Item_func_sp(Lex->current_context(), name);
	      lex->safe_to_cache_query=0;
	    }
          }
    break;

  case 912:
#line 4857 "sql_yacc.yy"
    {
            yyval.item= new Item_func_unique_users(yyvsp[-7].item,atoi(yyvsp[-5].lex_str.str),atoi(yyvsp[-3].lex_str.str), * yyvsp[-1].item_list);
	  }
    break;

  case 913:
#line 4861 "sql_yacc.yy"
    {
	    yyval.item= new Item_func_unix_timestamp();
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 914:
#line 4866 "sql_yacc.yy"
    { yyval.item= new Item_func_unix_timestamp(yyvsp[-1].item); }
    break;

  case 915:
#line 4868 "sql_yacc.yy"
    { yyval.item= new Item_func_user(FALSE); Lex->safe_to_cache_query=0; }
    break;

  case 916:
#line 4870 "sql_yacc.yy"
    { yyval.item= new Item_func_curdate_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 917:
#line 4872 "sql_yacc.yy"
    { yyval.item= new Item_func_curtime_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 918:
#line 4874 "sql_yacc.yy"
    { yyval.item= new Item_func_now_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 919:
#line 4876 "sql_yacc.yy"
    {
            yyval.item= new Item_func_week(yyvsp[-1].item,new Item_int((char*) "0",
				   YYTHD->variables.default_week_format,1));
          }
    break;

  case 920:
#line 4881 "sql_yacc.yy"
    { yyval.item= new Item_func_week(yyvsp[-3].item,yyvsp[-1].item); }
    break;

  case 921:
#line 4883 "sql_yacc.yy"
    { yyval.item= new Item_func_year(yyvsp[-1].item); }
    break;

  case 922:
#line 4885 "sql_yacc.yy"
    { yyval.item= new Item_func_yearweek(yyvsp[-1].item,new Item_int((char*) "0",0,1)); }
    break;

  case 923:
#line 4887 "sql_yacc.yy"
    { yyval.item= new Item_func_yearweek(yyvsp[-3].item, yyvsp[-1].item); }
    break;

  case 924:
#line 4889 "sql_yacc.yy"
    {
	    yyval.item=new Item_func_benchmark(yyvsp[-3].ulong_num,yyvsp[-1].item);
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 925:
#line 4894 "sql_yacc.yy"
    { yyval.item=new Item_extract( yyvsp[-3].interval, yyvsp[-1].item); }
    break;

  case 926:
#line 4898 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_rel(yyvsp[-3].item, yyvsp[-1].item, Item_func::SP_CONTAINS_FUNC)); }
    break;

  case 927:
#line 4900 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 928:
#line 4902 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 929:
#line 4904 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_wkb(yyvsp[-1].item)); }
    break;

  case 930:
#line 4906 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_wkb(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 931:
#line 4908 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_collection(* yyvsp[-1].item_list,
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point)); }
    break;

  case 932:
#line 4912 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_collection(* yyvsp[-1].item_list,
                  Geometry::wkb_linestring, Geometry::wkb_point)); }
    break;

  case 933:
#line 4915 "sql_yacc.yy"
    { yyval.item= GEOM_NEW( Item_func_spatial_collection(* yyvsp[-1].item_list,
                   Geometry::wkb_multilinestring, Geometry::wkb_linestring)); }
    break;

  case 934:
#line 4918 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 935:
#line 4920 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 936:
#line 4922 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 937:
#line 4924 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 938:
#line 4926 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 939:
#line 4928 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 940:
#line 4930 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_collection(* yyvsp[-1].item_list,
                  Geometry::wkb_multipoint, Geometry::wkb_point)); }
    break;

  case 941:
#line 4933 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_collection(* yyvsp[-1].item_list,
                  Geometry::wkb_multipolygon, Geometry::wkb_polygon)); }
    break;

  case 942:
#line 4936 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_point(yyvsp[-3].item,yyvsp[-1].item)); }
    break;

  case 943:
#line 4938 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 944:
#line 4940 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 945:
#line 4942 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 946:
#line 4944 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 947:
#line 4946 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_spatial_collection(* yyvsp[-1].item_list,
	          Geometry::wkb_polygon, Geometry::wkb_linestring)); }
    break;

  case 948:
#line 4949 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 949:
#line 4951 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 950:
#line 4953 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-1].item)); }
    break;

  case 951:
#line 4955 "sql_yacc.yy"
    { yyval.item= GEOM_NEW(Item_func_geometry_from_text(yyvsp[-3].item, yyvsp[-1].item)); }
    break;

  case 952:
#line 4959 "sql_yacc.yy"
    { yyval.num= FT_NL;  }
    break;

  case 953:
#line 4960 "sql_yacc.yy"
    { yyval.num= FT_NL | FT_EXPAND; }
    break;

  case 954:
#line 4961 "sql_yacc.yy"
    { yyval.num= FT_BOOL; }
    break;

  case 955:
#line 4965 "sql_yacc.yy"
    { yyval.item_list= NULL; }
    break;

  case 956:
#line 4966 "sql_yacc.yy"
    { yyval.item_list= yyvsp[0].item_list;}
    break;

  case 957:
#line 4970 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 958:
#line 4972 "sql_yacc.yy"
    { yyval.item_list= Select->expr_list.pop(); }
    break;

  case 959:
#line 4977 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back(yyvsp[0].item);
	  }
    break;

  case 960:
#line 4981 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back(yyvsp[0].item);
	  }
    break;

  case 961:
#line 4988 "sql_yacc.yy"
    {
	  if (yyvsp[0].lex_str.str)
          {
	    yyvsp[-2].item->set_name(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, system_charset_info);
            yyvsp[-2].item->is_autogenerated_name= FALSE;
          }
	  else
	    yyvsp[-2].item->set_name(yyvsp[-3].simple_string, (uint) (yyvsp[-1].simple_string - yyvsp[-3].simple_string), YYTHD->charset());
	  yyval.item= yyvsp[-2].item;
	}
    break;

  case 962:
#line 5002 "sql_yacc.yy"
    { yyval.item=new Item_sum_avg(yyvsp[-1].item); }
    break;

  case 963:
#line 5004 "sql_yacc.yy"
    { yyval.item=new Item_sum_avg_distinct(yyvsp[-1].item); }
    break;

  case 964:
#line 5006 "sql_yacc.yy"
    { yyval.item=new Item_sum_and(yyvsp[-1].item); }
    break;

  case 965:
#line 5008 "sql_yacc.yy"
    { yyval.item=new Item_sum_or(yyvsp[-1].item); }
    break;

  case 966:
#line 5010 "sql_yacc.yy"
    { yyval.item=new Item_sum_xor(yyvsp[-1].item); }
    break;

  case 967:
#line 5012 "sql_yacc.yy"
    { yyval.item=new Item_sum_count(new Item_int((int32) 0L,1)); }
    break;

  case 968:
#line 5014 "sql_yacc.yy"
    { yyval.item=new Item_sum_count(yyvsp[-1].item); }
    break;

  case 969:
#line 5016 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 970:
#line 5018 "sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 971:
#line 5020 "sql_yacc.yy"
    { yyval.item=new Item_sum_count_distinct(* yyvsp[-2].item_list); }
    break;

  case 972:
#line 5022 "sql_yacc.yy"
    { yyval.item= new Item_sum_unique_users(yyvsp[-7].item,atoi(yyvsp[-5].lex_str.str),atoi(yyvsp[-3].lex_str.str),yyvsp[-1].item); }
    break;

  case 973:
#line 5024 "sql_yacc.yy"
    { yyval.item=new Item_sum_min(yyvsp[-1].item); }
    break;

  case 974:
#line 5031 "sql_yacc.yy"
    { yyval.item=new Item_sum_min(yyvsp[-1].item); }
    break;

  case 975:
#line 5033 "sql_yacc.yy"
    { yyval.item=new Item_sum_max(yyvsp[-1].item); }
    break;

  case 976:
#line 5035 "sql_yacc.yy"
    { yyval.item=new Item_sum_max(yyvsp[-1].item); }
    break;

  case 977:
#line 5037 "sql_yacc.yy"
    { yyval.item=new Item_sum_std(yyvsp[-1].item, 0); }
    break;

  case 978:
#line 5039 "sql_yacc.yy"
    { yyval.item=new Item_sum_variance(yyvsp[-1].item, 0); }
    break;

  case 979:
#line 5041 "sql_yacc.yy"
    { yyval.item=new Item_sum_std(yyvsp[-1].item, 1); }
    break;

  case 980:
#line 5043 "sql_yacc.yy"
    { yyval.item=new Item_sum_variance(yyvsp[-1].item, 1); }
    break;

  case 981:
#line 5045 "sql_yacc.yy"
    { yyval.item=new Item_sum_sum(yyvsp[-1].item); }
    break;

  case 982:
#line 5047 "sql_yacc.yy"
    { yyval.item=new Item_sum_sum_distinct(yyvsp[-1].item); }
    break;

  case 983:
#line 5049 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 984:
#line 5053 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
	    sel->in_sum_expr--;
	    yyval.item=new Item_func_group_concat(Lex->current_context(), yyvsp[-5].num, yyvsp[-3].item_list,
                                          sel->gorder_list, yyvsp[-1].string);
	    yyvsp[-3].item_list->empty();
	  }
    break;

  case 985:
#line 5062 "sql_yacc.yy"
    { yyval.num = 0; }
    break;

  case 986:
#line 5063 "sql_yacc.yy"
    { yyval.num = 1; }
    break;

  case 987:
#line 5066 "sql_yacc.yy"
    { yyval.string = new (YYTHD->mem_root) String(",",1,default_charset_info); }
    break;

  case 988:
#line 5067 "sql_yacc.yy"
    { yyval.string = yyvsp[0].string; }
    break;

  case 989:
#line 5072 "sql_yacc.yy"
    {
            Select->gorder_list = NULL;
	  }
    break;

  case 990:
#line 5076 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list=
	      (SQL_LIST*) sql_memdup((char*) &select->order_list,
				     sizeof(st_sql_list));
	    select->order_list.empty();
	  }
    break;

  case 991:
#line 5087 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->current_select->inc_in_sum_expr())
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 992:
#line 5096 "sql_yacc.yy"
    {
	  Select->in_sum_expr--;
	  yyval.item= yyvsp[0].item;
	}
    break;

  case 993:
#line 5102 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 994:
#line 5103 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 995:
#line 5104 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 996:
#line 5105 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 997:
#line 5106 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 998:
#line 5107 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 999:
#line 5108 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1000:
#line 5109 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1001:
#line 5110 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_TIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1002:
#line 5111 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1003:
#line 5112 "sql_yacc.yy"
    { yyval.cast_type=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1004:
#line 5116 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1005:
#line 5118 "sql_yacc.yy"
    { yyval.item_list= Select->expr_list.pop(); }
    break;

  case 1006:
#line 5121 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 1007:
#line 5122 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 1008:
#line 5125 "sql_yacc.yy"
    { yyval.item_list= yyvsp[0].item_list; }
    break;

  case 1009:
#line 5126 "sql_yacc.yy"
    { yyval.item_list= yyvsp[-1].item_list; }
    break;

  case 1010:
#line 5129 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1011:
#line 5131 "sql_yacc.yy"
    { yyval.item_list= Select->expr_list.pop(); }
    break;

  case 1012:
#line 5134 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 1013:
#line 5135 "sql_yacc.yy"
    { Select->expr_list.head()->push_back(yyvsp[0].item); }
    break;

  case 1014:
#line 5138 "sql_yacc.yy"
    { yyval.item= NULL; }
    break;

  case 1015:
#line 5139 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 1016:
#line 5142 "sql_yacc.yy"
    { yyval.item= NULL; }
    break;

  case 1017:
#line 5143 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 1018:
#line 5146 "sql_yacc.yy"
    { Select->when_list.push_front(new List<Item>); }
    break;

  case 1019:
#line 5148 "sql_yacc.yy"
    { yyval.item_list= Select->when_list.pop(); }
    break;

  case 1020:
#line 5152 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back(yyvsp[-2].item);
	    sel->when_list.head()->push_back(yyvsp[0].item);
	}
    break;

  case 1021:
#line 5158 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back(yyvsp[-2].item);
	    sel->when_list.head()->push_back(yyvsp[0].item);
	  }
    break;

  case 1022:
#line 5166 "sql_yacc.yy"
    { yyval.table_list=yyvsp[0].table_list; }
    break;

  case 1023:
#line 5167 "sql_yacc.yy"
    { yyval.table_list=yyvsp[0].table_list; }
    break;

  case 1024:
#line 5168 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!(yyval.table_list= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1025:
#line 5176 "sql_yacc.yy"
    { YYERROR_UNLESS(yyval.table_list=yyvsp[0].table_list); }
    break;

  case 1026:
#line 5181 "sql_yacc.yy"
    { yyval.table_list=yyvsp[0].table_list; }
    break;

  case 1027:
#line 5183 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-2].table_list && (yyval.table_list=yyvsp[0].table_list));
          }
    break;

  case 1028:
#line 5203 "sql_yacc.yy"
    { YYERROR_UNLESS(yyvsp[-2].table_list && (yyval.table_list=yyvsp[0].table_list)); }
    break;

  case 1029:
#line 5205 "sql_yacc.yy"
    { YYERROR_UNLESS(yyvsp[-2].table_list && (yyval.table_list=yyvsp[0].table_list)); yyvsp[0].table_list->straight=1; }
    break;

  case 1030:
#line 5208 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-3].table_list && (yyval.table_list=yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, yyvsp[-3].table_list, yyvsp[-1].table_list))
              YYABORT;
          }
    break;

  case 1031:
#line 5215 "sql_yacc.yy"
    {
            add_join_on(yyvsp[-3].table_list,yyvsp[0].item);
            Lex->pop_context();
          }
    break;

  case 1032:
#line 5221 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-3].table_list && (yyval.table_list=yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, yyvsp[-3].table_list, yyvsp[-1].table_list))
              YYABORT;
          }
    break;

  case 1033:
#line 5228 "sql_yacc.yy"
    {
            yyvsp[-3].table_list->straight=1;
            add_join_on(yyvsp[-3].table_list,yyvsp[0].item);
            Lex->pop_context();
          }
    break;

  case 1034:
#line 5235 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS(yyvsp[-3].table_list && yyvsp[-1].table_list);
	  }
    break;

  case 1035:
#line 5240 "sql_yacc.yy"
    { add_join_natural(yyvsp[-7].table_list,yyvsp[-5].table_list,yyvsp[-1].string_list); yyval.table_list=yyvsp[-5].table_list; }
    break;

  case 1036:
#line 5242 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-3].table_list && (yyval.table_list=yyvsp[0].table_list));
            add_join_natural(yyvsp[-3].table_list,yyvsp[0].table_list,NULL);
          }
    break;

  case 1037:
#line 5250 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, yyvsp[-5].table_list, yyvsp[-1].table_list))
              YYABORT;
          }
    break;

  case 1038:
#line 5256 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-7].table_list && yyvsp[-3].table_list);
            add_join_on(yyvsp[-3].table_list,yyvsp[0].item);
            Lex->pop_context();
            yyvsp[-3].table_list->outer_join|=JOIN_TYPE_LEFT;
            yyval.table_list=yyvsp[-3].table_list;
          }
    break;

  case 1039:
#line 5264 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS(yyvsp[-4].table_list && yyvsp[0].table_list);
	  }
    break;

  case 1040:
#line 5269 "sql_yacc.yy"
    { add_join_natural(yyvsp[-9].table_list,yyvsp[-5].table_list,yyvsp[-1].string_list); yyvsp[-5].table_list->outer_join|=JOIN_TYPE_LEFT; yyval.table_list=yyvsp[-5].table_list; }
    break;

  case 1041:
#line 5271 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-5].table_list && yyvsp[0].table_list);
 	    add_join_natural(yyvsp[-5].table_list,yyvsp[0].table_list,NULL);
	    yyvsp[0].table_list->outer_join|=JOIN_TYPE_LEFT;
	    yyval.table_list=yyvsp[0].table_list;
	  }
    break;

  case 1042:
#line 5281 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, yyvsp[-5].table_list, yyvsp[-1].table_list))
              YYABORT;
          }
    break;

  case 1043:
#line 5287 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            YYERROR_UNLESS(yyvsp[-7].table_list && yyvsp[-3].table_list);
            if (!(yyval.table_list= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_on(yyval.table_list, yyvsp[0].item);
            Lex->pop_context();
          }
    break;

  case 1044:
#line 5296 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS(yyvsp[-4].table_list && yyvsp[0].table_list);
	  }
    break;

  case 1045:
#line 5301 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!(yyval.table_list= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_natural(yyval.table_list,yyvsp[-5].table_list,yyvsp[-1].string_list);
          }
    break;

  case 1046:
#line 5308 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-5].table_list && yyvsp[0].table_list);
	    add_join_natural(yyvsp[0].table_list,yyvsp[-5].table_list,NULL);
	    LEX *lex= Lex;
            if (!(yyval.table_list= lex->current_select->convert_right_join()))
              YYABORT;
	  }
    break;

  case 1047:
#line 5317 "sql_yacc.yy"
    {}
    break;

  case 1048:
#line 5318 "sql_yacc.yy"
    {}
    break;

  case 1049:
#line 5319 "sql_yacc.yy"
    {}
    break;

  case 1050:
#line 5324 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->use_index_ptr=sel->ignore_index_ptr=0;
	  sel->table_join_options= 0;
	}
    break;

  case 1051:
#line 5330 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (!(yyval.table_list= sel->add_table_to_list(lex->thd, yyvsp[-2].table, yyvsp[-1].lex_str_ptr,
					   sel->get_table_join_options(),
					   lex->lock_option,
					   sel->get_use_index(),
					   sel->get_ignore_index())))
	    YYABORT;
          sel->add_joined_table(yyval.table_list);
	}
    break;

  case 1052:
#line 5343 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, yyvsp[-5].table_list, yyvsp[-1].table_list))
              YYABORT;

          }
    break;

  case 1053:
#line 5350 "sql_yacc.yy"
    {
            YYERROR_UNLESS(yyvsp[-8].table_list && yyvsp[-4].table_list);
            add_join_on(yyvsp[-4].table_list,yyvsp[-1].item);
            Lex->pop_context();
            yyvsp[-4].table_list->outer_join|=JOIN_TYPE_LEFT;
            yyval.table_list=yyvsp[-4].table_list;
          }
    break;

  case 1054:
#line 5358 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (yyvsp[-2].num)
            {
	      if (sel->set_braces(1))
	      {
	        yyerror(ER(ER_SYNTAX_ERROR));
	        YYABORT;
	      }
              /* select in braces, can't contain global parameters */
	      if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if (yyvsp[-1].select_lex->init_nested_join(lex->thd))
              YYABORT;
            yyval.table_list= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1055:
#line 5380 "sql_yacc.yy"
    {
          /* Use $2 instead of Lex->current_select as derived table will
             alter value of Lex->current_select. */

          if (!(yyvsp[-3].table_list || yyvsp[0].lex_str_ptr) && yyvsp[-4].select_lex->embedding &&
              !yyvsp[-4].select_lex->embedding->nested_join->join_list.elements)
          {
            /* we have a derived table ($3 == NULL) but no alias,
               Since we are nested in further parentheses so we
               can pass NULL to the outer level parentheses
               Permits parsing of "((((select ...))) as xyz)" */
            yyval.table_list= 0;
          }
          else
          if (!yyvsp[-3].table_list)
          {
            /* Handle case of derived table, alias may be NULL if there
               are no outer parentheses, add_table_to_list() will throw
               error in this case */
	    LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    lex->current_select= sel= unit->outer_select();
	    if (!(yyval.table_list= sel->
                  add_table_to_list(lex->thd, new Table_ident(unit), yyvsp[0].lex_str_ptr, 0,
				    TL_READ,(List<String> *)0,
	                            (List<String> *)0)))

	      YYABORT;
            sel->add_joined_table(yyval.table_list);
            lex->pop_context();
          }
	  else
          if (yyvsp[-2].num || yyvsp[0].lex_str_ptr)
	  {
            /* simple nested joins cannot have aliases or unions */
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          else
            yyval.table_list= yyvsp[-3].table_list;
	}
    break;

  case 1056:
#line 5427 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (yyvsp[0].select_lex->init_nested_join(lex->thd))
              YYABORT;
          }
    break;

  case 1057:
#line 5433 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!(yyval.table_list= yyvsp[-2].select_lex->end_nested_join(lex->thd)) && yyvsp[0].table_list)
              YYABORT;
            if (!yyvsp[0].table_list && yyval.table_list)
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
            }
          }
    break;

  case 1058:
#line 5449 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->derived_tables|= DERIVED_SUBQUERY;
	  if (((int)lex->sql_command >= (int)SQLCOM_HA_OPEN &&
	       lex->sql_command <= (int)SQLCOM_HA_READ) ||
	       lex->sql_command == (int)SQLCOM_KILL)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
              mysql_new_select(lex, 1))
	    YYABORT;
	  mysql_init_select(lex);
	  lex->current_select->linkage= DERIVED_TABLE_TYPE;
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 1059:
#line 5467 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 1061:
#line 5474 "sql_yacc.yy"
    { yyval.select_lex= Select; }
    break;

  case 1062:
#line 5479 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
	    {
              /* we are not in parentheses */
              yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
            embedding= Select->embedding;
            yyval.num= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1063:
#line 5497 "sql_yacc.yy"
    {}
    break;

  case 1064:
#line 5498 "sql_yacc.yy"
    {}
    break;

  case 1065:
#line 5501 "sql_yacc.yy"
    {}
    break;

  case 1066:
#line 5503 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *yyvsp[0].string_list;
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 1067:
#line 5509 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *yyvsp[0].string_list;
	    sel->use_index_ptr= &sel->use_index;
	    sel->table_join_options|= TL_OPTION_FORCE_INDEX;
	  }
    break;

  case 1068:
#line 5516 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->ignore_index= *yyvsp[0].string_list;
	    sel->ignore_index_ptr= &sel->ignore_index;
	  }
    break;

  case 1069:
#line 5523 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 1070:
#line 5525 "sql_yacc.yy"
    { yyval.string_list= &Select->interval_list; }
    break;

  case 1071:
#line 5529 "sql_yacc.yy"
    {}
    break;

  case 1072:
#line 5530 "sql_yacc.yy"
    {}
    break;

  case 1073:
#line 5535 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) yyvsp[0].lex_str.str, yyvsp[0].lex_str.length,
				    system_charset_info)); }
    break;

  case 1074:
#line 5539 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) yyvsp[0].lex_str.str, yyvsp[0].lex_str.length,
				    system_charset_info)); }
    break;

  case 1075:
#line 5543 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String("PRIMARY", 7,
				    system_charset_info)); }
    break;

  case 1076:
#line 5549 "sql_yacc.yy"
    {
            if (!(yyval.string_list= new List<String>))
	      YYABORT;
            yyval.string_list->push_back(new (YYTHD->mem_root)
                              String((const char *) yyvsp[0].lex_str.str, yyvsp[0].lex_str.length,
                                      system_charset_info));
	  }
    break;

  case 1077:
#line 5557 "sql_yacc.yy"
    {
            yyvsp[-2].string_list->push_back(new (YYTHD->mem_root)
                              String((const char *) yyvsp[0].lex_str.str, yyvsp[0].lex_str.length,
                                      system_charset_info));
            yyval.string_list= yyvsp[-2].string_list;
	  }
    break;

  case 1078:
#line 5565 "sql_yacc.yy"
    {}
    break;

  case 1079:
#line 5566 "sql_yacc.yy"
    { yyval.interval=INTERVAL_DAY_HOUR; }
    break;

  case 1080:
#line 5567 "sql_yacc.yy"
    { yyval.interval=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1081:
#line 5568 "sql_yacc.yy"
    { yyval.interval=INTERVAL_DAY_MINUTE; }
    break;

  case 1082:
#line 5569 "sql_yacc.yy"
    { yyval.interval=INTERVAL_DAY_SECOND; }
    break;

  case 1083:
#line 5570 "sql_yacc.yy"
    { yyval.interval=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1084:
#line 5571 "sql_yacc.yy"
    { yyval.interval=INTERVAL_HOUR_MINUTE; }
    break;

  case 1085:
#line 5572 "sql_yacc.yy"
    { yyval.interval=INTERVAL_HOUR_SECOND; }
    break;

  case 1086:
#line 5573 "sql_yacc.yy"
    { yyval.interval=INTERVAL_MICROSECOND; }
    break;

  case 1087:
#line 5574 "sql_yacc.yy"
    { yyval.interval=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1088:
#line 5575 "sql_yacc.yy"
    { yyval.interval=INTERVAL_MINUTE_SECOND; }
    break;

  case 1089:
#line 5576 "sql_yacc.yy"
    { yyval.interval=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1090:
#line 5577 "sql_yacc.yy"
    { yyval.interval=INTERVAL_YEAR_MONTH; }
    break;

  case 1091:
#line 5580 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_DAY; }
    break;

  case 1092:
#line 5581 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_WEEK; }
    break;

  case 1093:
#line 5582 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_HOUR; }
    break;

  case 1094:
#line 5583 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_MICROSECOND; }
    break;

  case 1095:
#line 5584 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_MINUTE; }
    break;

  case 1096:
#line 5585 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_MONTH; }
    break;

  case 1097:
#line 5586 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_QUARTER; }
    break;

  case 1098:
#line 5587 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_SECOND; }
    break;

  case 1099:
#line 5588 "sql_yacc.yy"
    { yyval.interval_time_st=INTERVAL_YEAR; }
    break;

  case 1100:
#line 5592 "sql_yacc.yy"
    {yyval.date_time_type=MYSQL_TIMESTAMP_DATE;}
    break;

  case 1101:
#line 5593 "sql_yacc.yy"
    {yyval.date_time_type=MYSQL_TIMESTAMP_TIME;}
    break;

  case 1102:
#line 5594 "sql_yacc.yy"
    {yyval.date_time_type=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1103:
#line 5595 "sql_yacc.yy"
    {yyval.date_time_type=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1107:
#line 5604 "sql_yacc.yy"
    { yyval.lex_str_ptr=0; }
    break;

  case 1108:
#line 5606 "sql_yacc.yy"
    { yyval.lex_str_ptr= (LEX_STRING*) sql_memdup(&yyvsp[0].lex_str,sizeof(LEX_STRING)); }
    break;

  case 1111:
#line 5614 "sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1112:
#line 5616 "sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1113:
#line 5620 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
	    select->where= yyvsp[0].item;
            select->parsing_place= NO_MATTER;
	    if (yyvsp[0].item)
	      yyvsp[0].item->top_level_item();
	  }
    break;

  case 1115:
#line 5632 "sql_yacc.yy"
    {
	    Select->parsing_place= IN_HAVING;
          }
    break;

  case 1116:
#line 5636 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->having= yyvsp[0].item;
	    sel->parsing_place= NO_MATTER;
	    if (yyvsp[0].item)
	      yyvsp[0].item->top_level_item();
	  }
    break;

  case 1117:
#line 5647 "sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            yyval.item= yyvsp[0].item;
          }
    break;

  case 1118:
#line 5652 "sql_yacc.yy"
    {
            Lex->escape_used= FALSE;
            yyval.item= ((YYTHD->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
		 new Item_string("", 0, &my_charset_latin1) :
                 new Item_string("\\", 1, &my_charset_latin1));
          }
    break;

  case 1121:
#line 5671 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, yyvsp[-1].item,(bool) yyvsp[0].num)) YYABORT; }
    break;

  case 1122:
#line 5673 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, yyvsp[-1].item,(bool) yyvsp[0].num)) YYABORT; }
    break;

  case 1123:
#line 5676 "sql_yacc.yy"
    {}
    break;

  case 1124:
#line 5678 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= CUBE_TYPE;
	    my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
	    YYABORT;	/* To be deleted in 5.1 */
	  }
    break;

  case 1125:
#line 5691 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= ROLLUP_TYPE;
	  }
    break;

  case 1128:
#line 5713 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->current_select->linkage != GLOBAL_OPTIONS_TYPE &&
	      lex->current_select->olap !=
	      UNSPECIFIED_OLAP_TYPE)
	  {
	    my_error(ER_WRONG_USAGE, MYF(0),
                     "CUBE/ROLLUP", "ORDER BY");
	    YYABORT;
	  }
	}
    break;

  case 1130:
#line 5727 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, yyvsp[-1].item,(bool) yyvsp[0].num)) YYABORT; }
    break;

  case 1131:
#line 5729 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, yyvsp[-1].item,(bool) yyvsp[0].num)) YYABORT; }
    break;

  case 1132:
#line 5732 "sql_yacc.yy"
    { yyval.num =  1; }
    break;

  case 1133:
#line 5733 "sql_yacc.yy"
    { yyval.num =1; }
    break;

  case 1134:
#line 5734 "sql_yacc.yy"
    { yyval.num =0; }
    break;

  case 1135:
#line 5739 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
          sel->offset_limit= 0;
          sel->select_limit= 0;
	}
    break;

  case 1136:
#line 5745 "sql_yacc.yy"
    {}
    break;

  case 1137:
#line 5749 "sql_yacc.yy"
    {}
    break;

  case 1138:
#line 5750 "sql_yacc.yy"
    {}
    break;

  case 1139:
#line 5754 "sql_yacc.yy"
    {}
    break;

  case 1140:
#line 5759 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= yyvsp[0].item;
            sel->offset_limit= 0;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1141:
#line 5766 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= yyvsp[0].item;
	    sel->offset_limit= yyvsp[-2].item;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1142:
#line 5773 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= yyvsp[-2].item;
	    sel->offset_limit= yyvsp[0].item;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1144:
#line 5782 "sql_yacc.yy"
    { yyval.item= new Item_uint(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length); }
    break;

  case 1145:
#line 5783 "sql_yacc.yy"
    { yyval.item= new Item_uint(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length); }
    break;

  case 1146:
#line 5784 "sql_yacc.yy"
    { yyval.item= new Item_uint(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length); }
    break;

  case 1147:
#line 5789 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->current_select->select_limit= 0;
	}
    break;

  case 1148:
#line 5794 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->select_limit= yyvsp[0].item;
	  sel->explicit_limit= 1;
	}
    break;

  case 1149:
#line 5801 "sql_yacc.yy"
    { int error; yyval.ulong_num= (ulong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1150:
#line 5802 "sql_yacc.yy"
    { yyval.ulong_num= (ulong) strtol(yyvsp[0].lex_str.str, (char**) 0, 16); }
    break;

  case 1151:
#line 5803 "sql_yacc.yy"
    { int error; yyval.ulong_num= (ulong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1152:
#line 5804 "sql_yacc.yy"
    { int error; yyval.ulong_num= (ulong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1153:
#line 5805 "sql_yacc.yy"
    { int error; yyval.ulong_num= (ulong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1154:
#line 5806 "sql_yacc.yy"
    { int error; yyval.ulong_num= (ulong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1155:
#line 5810 "sql_yacc.yy"
    { int error; yyval.ulonglong_number= (ulonglong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1156:
#line 5811 "sql_yacc.yy"
    { int error; yyval.ulonglong_number= (ulonglong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1157:
#line 5812 "sql_yacc.yy"
    { int error; yyval.ulonglong_number= (ulonglong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1158:
#line 5813 "sql_yacc.yy"
    { int error; yyval.ulonglong_number= (ulonglong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1159:
#line 5814 "sql_yacc.yy"
    { int error; yyval.ulonglong_number= (ulonglong) my_strtoll10(yyvsp[0].lex_str.str, (char**) 0, &error); }
    break;

  case 1161:
#line 5820 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (&lex->select_lex != lex->current_select)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
	      YYABORT;
	    }
	    lex->proc_list.elements=0;
	    lex->proc_list.first=0;
	    lex->proc_list.next= (byte**) &lex->proc_list.first;
	    if (add_proc_to_list(lex->thd, new Item_field(&lex->
                                                          current_select->
                                                          context,
                                                          NULL,NULL,yyvsp[0].lex_str.str)))
	      YYABORT;
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 1163:
#line 5841 "sql_yacc.yy"
    {}
    break;

  case 1164:
#line 5842 "sql_yacc.yy"
    {}
    break;

  case 1167:
#line 5850 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (add_proc_to_list(lex->thd, yyvsp[0].item))
	      YYABORT;
	    if (!yyvsp[0].item->name)
	      yyvsp[0].item->set_name(yyvsp[-1].simple_string,(uint) ((char*) lex->tok_end - yyvsp[-1].simple_string),
                           YYTHD->charset());
	  }
    break;

  case 1168:
#line 5862 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (!lex->describe && (!(lex->result= new select_dumpvar())))
	        YYABORT;
	   }
    break;

  case 1169:
#line 5868 "sql_yacc.yy"
    {}
    break;

  case 1171:
#line 5873 "sql_yacc.yy"
    {}
    break;

  case 1172:
#line 5878 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (lex->result) 
	       ((select_dumpvar *)lex->result)->var_list.push_back( new my_var(yyvsp[0].lex_str,0,0,(enum_field_types)0));
	     else
	       YYABORT;
	   }
    break;

  case 1173:
#line 5886 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     sp_pvar_t *t;

	     if (!lex->spcont || !(t=lex->spcont->find_pvar(&yyvsp[0].lex_str)))
	     {
	       my_error(ER_SP_UNDECLARED_VAR, MYF(0), yyvsp[0].lex_str.str);
	       YYABORT;
	     }
	     if (! lex->result)
	       YYABORT;
	     else
	     {
               my_var *var;
	       ((select_dumpvar *)lex->result)->
                 var_list.push_back(var= new my_var(yyvsp[0].lex_str,1,t->offset,t->type));
#ifndef DBUG_OFF
	       if (var)
		 var->sp= lex->sphead;
#endif
	     }
	   }
    break;

  case 1174:
#line 5912 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          if (!(lex->exchange= new sql_exchange(yyvsp[0].lex_str.str, 0)) ||
              !(lex->result= new select_export(lex->exchange)))
            YYABORT;
	}
    break;

  case 1176:
#line 5921 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (!lex->describe)
	  {
	    lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	    if (!(lex->exchange= new sql_exchange(yyvsp[0].lex_str.str,1)))
	      YYABORT;
	    if (!(lex->result= new select_dump(lex->exchange)))
	      YYABORT;
	  }
	}
    break;

  case 1177:
#line 5933 "sql_yacc.yy"
    {
	  Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	}
    break;

  case 1178:
#line 5943 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DO;
	  mysql_init_select(lex);
	}
    break;

  case 1179:
#line 5949 "sql_yacc.yy"
    {
	  Lex->insert_list= yyvsp[0].item_list;
	}
    break;

  case 1180:
#line 5960 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DROP_TABLE;
	  lex->drop_temporary= yyvsp[-4].num;
	  lex->drop_if_exists= yyvsp[-2].num;
	}
    break;

  case 1181:
#line 5966 "sql_yacc.yy"
    {}
    break;

  case 1182:
#line 5967 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->sql_command= SQLCOM_DROP_INDEX;
	     lex->alter_info.drop_list.empty();
	     lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
                                                                yyvsp[-3].lex_str.str));
	     if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[-1].table, NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	  }
    break;

  case 1183:
#line 5978 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_DROP_DB;
	    lex->drop_if_exists=yyvsp[-1].num;
	    lex->name=yyvsp[0].lex_str.str;
	 }
    break;

  case 1184:
#line 5985 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_FUNCTION;
	    lex->drop_if_exists= yyvsp[-1].num;
	    lex->spname= yyvsp[0].spname;
	  }
    break;

  case 1185:
#line 5997 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_PROCEDURE;
	    lex->drop_if_exists= yyvsp[-1].num;
	    lex->spname= yyvsp[0].spname;
	  }
    break;

  case 1186:
#line 6009 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1187:
#line 6013 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_DROP_VIEW;
	    lex->drop_if_exists= yyvsp[-2].num;
	  }
    break;

  case 1188:
#line 6019 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->spname= yyvsp[0].spname;
          }
    break;

  case 1191:
#line 6032 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, yyvsp[0].table, NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1192:
#line 6039 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 1193:
#line 6040 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 1194:
#line 6044 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 1195:
#line 6045 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 1196:
#line 6053 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_INSERT;
	  lex->duplicates= DUP_ERROR; 
	  mysql_init_select(lex);
	  /* for subselects */
          lex->lock_option= (using_update_log) ? TL_READ_NO_INSERT : TL_READ;
	}
    break;

  case 1197:
#line 6062 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables(yyvsp[-2].lock_type);
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1198:
#line 6067 "sql_yacc.yy"
    {}
    break;

  case 1199:
#line 6072 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_REPLACE;
	  lex->duplicates= DUP_REPLACE;
	  mysql_init_select(lex);
	}
    break;

  case 1200:
#line 6079 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables(yyvsp[-1].lock_type);
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1201:
#line 6084 "sql_yacc.yy"
    {}
    break;

  case 1202:
#line 6088 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1203:
#line 6089 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1204:
#line 6090 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_DELAYED; }
    break;

  case 1205:
#line 6091 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE; }
    break;

  case 1206:
#line 6095 "sql_yacc.yy"
    { yyval.lock_type= yyvsp[0].lock_type; }
    break;

  case 1207:
#line 6096 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_DELAYED; }
    break;

  case 1208:
#line 6099 "sql_yacc.yy"
    {}
    break;

  case 1209:
#line 6100 "sql_yacc.yy"
    {}
    break;

  case 1210:
#line 6104 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->field_list.empty();
	  lex->many_values.empty();
	  lex->insert_list=0;
	}
    break;

  case 1211:
#line 6112 "sql_yacc.yy"
    {}
    break;

  case 1212:
#line 6113 "sql_yacc.yy"
    {}
    break;

  case 1213:
#line 6114 "sql_yacc.yy"
    {}
    break;

  case 1214:
#line 6116 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!(lex->insert_list = new List_item) ||
		lex->many_values.push_back(lex->insert_list))
	      YYABORT;
	   }
    break;

  case 1216:
#line 6125 "sql_yacc.yy"
    { Lex->field_list.push_back(yyvsp[0].item); }
    break;

  case 1217:
#line 6126 "sql_yacc.yy"
    { Lex->field_list.push_back(yyvsp[0].item); }
    break;

  case 1218:
#line 6129 "sql_yacc.yy"
    {}
    break;

  case 1219:
#line 6130 "sql_yacc.yy"
    {}
    break;

  case 1220:
#line 6131 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1221:
#line 6131 "sql_yacc.yy"
    {}
    break;

  case 1222:
#line 6132 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1223:
#line 6132 "sql_yacc.yy"
    {}
    break;

  case 1228:
#line 6146 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->field_list.push_back(yyvsp[-2].item) ||
	      lex->insert_list->push_back(yyvsp[0].item))
	    YYABORT;
	 }
    break;

  case 1229:
#line 6153 "sql_yacc.yy"
    {}
    break;

  case 1230:
#line 6154 "sql_yacc.yy"
    {}
    break;

  case 1231:
#line 6158 "sql_yacc.yy"
    {}
    break;

  case 1232:
#line 6159 "sql_yacc.yy"
    {}
    break;

  case 1233:
#line 6164 "sql_yacc.yy"
    {
	    if (!(Lex->insert_list = new List_item))
	      YYABORT;
	 }
    break;

  case 1234:
#line 6169 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->many_values.push_back(lex->insert_list))
	    YYABORT;
	 }
    break;

  case 1235:
#line 6176 "sql_yacc.yy"
    {}
    break;

  case 1237:
#line 6181 "sql_yacc.yy"
    {
	  if (Lex->insert_list->push_back(yyvsp[0].item))
	    YYABORT;
	}
    break;

  case 1238:
#line 6186 "sql_yacc.yy"
    {
	    if (Lex->insert_list->push_back(yyvsp[0].item))
	      YYABORT;
	  }
    break;

  case 1239:
#line 6193 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item;}
    break;

  case 1240:
#line 6194 "sql_yacc.yy"
    {yyval.item= new Item_default_value(Lex->current_context()); }
    break;

  case 1242:
#line 6199 "sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1244:
#line 6207 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  mysql_init_select(lex);
          lex->sql_command= SQLCOM_UPDATE;
	  lex->lock_option= TL_UNLOCK; 	/* Will be set later */
	  lex->duplicates= DUP_ERROR; 
        }
    break;

  case 1245:
#line 6216 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          if (lex->select_lex.table_list.elements > 1)
            lex->sql_command= SQLCOM_UPDATE_MULTI;
	  else if (lex->select_lex.get_table_list()->derived)
	  {
	    /* it is single table update and it is update of derived table */
	    my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                     lex->select_lex.get_table_list()->alias, "UPDATE");
	    YYABORT;
	  }
          /*
            In case of multi-update setting write lock for all tables may
            be too pessimistic. We will decrease lock level if possible in
            mysql_multi_update().
          */
          Select->set_lock_for_tables(yyvsp[-4].lock_type);
	}
    break;

  case 1246:
#line 6234 "sql_yacc.yy"
    {}
    break;

  case 1249:
#line 6243 "sql_yacc.yy"
    {
	  if (add_item_to_list(YYTHD, yyvsp[-2].item) || add_value_to_list(YYTHD, yyvsp[0].item))
	    YYABORT;
	}
    break;

  case 1252:
#line 6254 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->update_list.push_back(yyvsp[-2].item) || 
	      lex->value_list.push_back(yyvsp[0].item))
	      YYABORT;
	  }
    break;

  case 1253:
#line 6262 "sql_yacc.yy"
    { yyval.lock_type= YYTHD->update_lock_default; }
    break;

  case 1254:
#line 6263 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1255:
#line 6269 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_DELETE;
	  mysql_init_select(lex);
	  lex->lock_option= lex->thd->update_lock_default;
	  lex->ignore= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1256:
#line 6277 "sql_yacc.yy"
    {}
    break;

  case 1257:
#line 6282 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, yyvsp[0].table, NULL, TL_OPTION_UPDATING,
					 Lex->lock_option))
	    YYABORT;
	}
    break;

  case 1258:
#line 6288 "sql_yacc.yy"
    {}
    break;

  case 1259:
#line 6290 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1260:
#line 6292 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1261:
#line 6297 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1262:
#line 6299 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1263:
#line 6306 "sql_yacc.yy"
    {}
    break;

  case 1264:
#line 6307 "sql_yacc.yy"
    {}
    break;

  case 1265:
#line 6311 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, new Table_ident(yyvsp[-2].lex_str), yyvsp[0].lex_str_ptr,
					 TL_OPTION_UPDATING, Lex->lock_option))
	    YYABORT;
        }
    break;

  case 1266:
#line 6317 "sql_yacc.yy"
    {
	    if (!Select->add_table_to_list(YYTHD,
					   new Table_ident(YYTHD, yyvsp[-4].lex_str, yyvsp[-2].lex_str, 0),
					   yyvsp[0].lex_str_ptr, TL_OPTION_UPDATING,
					   Lex->lock_option))
	      YYABORT;
	  }
    break;

  case 1267:
#line 6327 "sql_yacc.yy"
    {}
    break;

  case 1268:
#line 6328 "sql_yacc.yy"
    {}
    break;

  case 1269:
#line 6332 "sql_yacc.yy"
    {}
    break;

  case 1270:
#line 6333 "sql_yacc.yy"
    {}
    break;

  case 1271:
#line 6336 "sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1272:
#line 6337 "sql_yacc.yy"
    { Lex->lock_option= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1273:
#line 6338 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1274:
#line 6342 "sql_yacc.yy"
    {
	  LEX* lex= Lex;
	  lex->sql_command= SQLCOM_TRUNCATE;
	  lex->select_lex.options= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1277:
#line 6357 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->wild=0;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	}
    break;

  case 1278:
#line 6366 "sql_yacc.yy"
    {}
    break;

  case 1279:
#line 6371 "sql_yacc.yy"
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           lex->orig_sql_command= SQLCOM_SHOW_DATABASES;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
             YYABORT;
         }
    break;

  case 1280:
#line 6379 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= yyvsp[-1].simple_string;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               YYABORT;
           }
    break;

  case 1281:
#line 6388 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= yyvsp[-1].simple_string;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               YYABORT;
           }
    break;

  case 1282:
#line 6397 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= yyvsp[-1].simple_string;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               YYABORT;
           }
    break;

  case 1283:
#line 6406 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_OPEN_TABLES;
	    lex->select_lex.db= yyvsp[-1].simple_string;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              YYABORT;
	  }
    break;

  case 1284:
#line 6415 "sql_yacc.yy"
    { Lex->create_info.db_type= yyvsp[0].db_type; }
    break;

  case 1286:
#line 6418 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SELECT;
	    lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
	    if (yyvsp[-1].simple_string)
	      yyvsp[-2].table->change_db(yyvsp[-1].simple_string);
	    if (prepare_schema_table(YYTHD, lex, yyvsp[-2].table, SCH_COLUMNS))
	      YYABORT;
	  }
    break;

  case 1287:
#line 6431 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_NEW_MASTER;
	    Lex->mi.log_file_name = yyvsp[-8].lex_str.str;
	    Lex->mi.pos = yyvsp[-4].ulonglong_number;
	    Lex->mi.server_id = yyvsp[0].ulong_num;
          }
    break;

  case 1288:
#line 6438 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1289:
#line 6442 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1290:
#line 6446 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1292:
#line 6451 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_KEYS;
	    if (yyvsp[-1].simple_string)
	      yyvsp[-2].table->change_db(yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, yyvsp[-2].table, SCH_STATISTICS))
              YYABORT;
	  }
    break;

  case 1293:
#line 6461 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_COLUMN_TYPES;
	  }
    break;

  case 1294:
#line 6466 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	    WARN_DEPRECATED("SHOW TABLE TYPES", "SHOW [STORAGE] ENGINES");
	  }
    break;

  case 1295:
#line 6472 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	  }
    break;

  case 1296:
#line 6477 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
	  }
    break;

  case 1297:
#line 6482 "sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1298:
#line 6484 "sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1299:
#line 6486 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1300:
#line 6488 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1301:
#line 6490 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= yyvsp[-2].var_type;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              YYABORT;
	  }
    break;

  case 1302:
#line 6499 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS; WARN_DEPRECATED("SHOW INNODB STATUS", "SHOW ENGINE INNODB STATUS"); }
    break;

  case 1303:
#line 6501 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_MUTEX_STATUS; }
    break;

  case 1304:
#line 6503 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1305:
#line 6505 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= yyvsp[-2].var_type;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              YYABORT;
	  }
    break;

  case 1306:
#line 6514 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              YYABORT;
          }
    break;

  case 1307:
#line 6522 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              YYABORT;
          }
    break;

  case 1308:
#line 6530 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW BDB LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1309:
#line 6532 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_LOGS; WARN_DEPRECATED("SHOW LOGS", "SHOW ENGINE BDB LOGS"); }
    break;

  case 1310:
#line 6534 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    THD *thd= lex->thd;
            Security_context *sctx= thd->security_ctx;
	    LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              YYABORT;
            curr_user->user.str= sctx->priv_user;
            curr_user->user.length= strlen(sctx->priv_user);
            if (*sctx->priv_host != 0)
            {
              curr_user->host.str= sctx->priv_host;
              curr_user->host.length= strlen(sctx->priv_host);
            }
            else
            {
              curr_user->host.str= (char *) "%";
              curr_user->host.length= 1;
            }
            curr_user->password=null_lex_str;
	    lex->grant_user= curr_user;
	  }
    break;

  case 1311:
#line 6558 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    lex->grant_user=yyvsp[0].lex_user;
	    lex->grant_user->password=null_lex_str;
	  }
    break;

  case 1312:
#line 6565 "sql_yacc.yy"
    {
	    Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
	    Lex->create_info.options=yyvsp[-1].num;
	    Lex->name=yyvsp[0].lex_str.str;
	  }
    break;

  case 1313:
#line 6571 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, yyvsp[0].table, NULL,0))
	      YYABORT;
            lex->only_view= 0;
	  }
    break;

  case 1314:
#line 6579 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, yyvsp[0].table, NULL, 0))
	      YYABORT;
            lex->only_view= 1;
	  }
    break;

  case 1315:
#line 6587 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1316:
#line 6591 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1317:
#line 6595 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
	    lex->spname= yyvsp[0].spname;
	  }
    break;

  case 1318:
#line 6602 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
	    lex->spname= yyvsp[0].spname;
	  }
    break;

  case 1319:
#line 6609 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_PROC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1320:
#line 6619 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_FUNC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1321:
#line 6629 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
	    Lex->spname= yyvsp[0].spname;
#endif
          }
    break;

  case 1322:
#line 6639 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
	    Lex->spname= yyvsp[0].spname;
#endif
          }
    break;

  case 1323:
#line 6652 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_NDBCLUSTER:
	      Lex->sql_command = SQLCOM_SHOW_NDBCLUSTER_STATUS;
	      break;
	    case DB_TYPE_INNODB:
	      Lex->sql_command = SQLCOM_SHOW_INNODB_STATUS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "STATUS");
	      YYABORT;
	    }
	  }
    break;

  case 1324:
#line 6666 "sql_yacc.yy"
    {
	    switch (Lex->create_info.db_type) {
	    case DB_TYPE_BERKELEY_DB:
	      Lex->sql_command = SQLCOM_SHOW_LOGS;
	      break;
	    default:
	      my_error(ER_NOT_SUPPORTED_YET, MYF(0), "LOGS");
	      YYABORT;
	    }
	  }
    break;

  case 1329:
#line 6686 "sql_yacc.yy"
    { yyval.simple_string= 0; }
    break;

  case 1330:
#line 6687 "sql_yacc.yy"
    { yyval.simple_string= yyvsp[0].lex_str.str; }
    break;

  case 1331:
#line 6690 "sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1332:
#line 6691 "sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1335:
#line 6698 "sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1336:
#line 6699 "sql_yacc.yy"
    { Lex->mi.log_file_name = yyvsp[0].lex_str.str; }
    break;

  case 1337:
#line 6702 "sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1338:
#line 6703 "sql_yacc.yy"
    { Lex->mi.pos = yyvsp[0].ulonglong_number; }
    break;

  case 1340:
#line 6708 "sql_yacc.yy"
    { Lex->wild=  new (YYTHD->mem_root) String(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length,
                                                   system_charset_info); }
    break;

  case 1341:
#line 6711 "sql_yacc.yy"
    {
          Select->where= yyvsp[0].item;
          if (yyvsp[0].item)
            yyvsp[0].item->top_level_item();
        }
    break;

  case 1342:
#line 6722 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
          lex->sql_command= SQLCOM_SELECT;
          lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
          lex->select_lex.db= 0;
          lex->verbose= 0;
          if (prepare_schema_table(YYTHD, lex, yyvsp[0].table, SCH_COLUMNS))
	    YYABORT;
	}
    break;

  case 1343:
#line 6734 "sql_yacc.yy"
    {}
    break;

  case 1344:
#line 6736 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1345:
#line 6738 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.options|= SELECT_DESCRIBE;
	  }
    break;

  case 1348:
#line 6749 "sql_yacc.yy"
    {}
    break;

  case 1349:
#line 6750 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1350:
#line 6754 "sql_yacc.yy"
    {}
    break;

  case 1351:
#line 6755 "sql_yacc.yy"
    { Lex->wild= yyvsp[0].string; }
    break;

  case 1352:
#line 6757 "sql_yacc.yy"
    { Lex->wild= new (YYTHD->mem_root) String((const char*) yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,system_charset_info); }
    break;

  case 1353:
#line 6764 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead && lex->sphead->m_type != TYPE_ENUM_PROCEDURE)
	  {
            /*
              Note that both FLUSH TABLES and FLUSH PRIVILEGES will break
              execution in prelocked mode. So it is better to disable
              FLUSH in stored functions and triggers completely.
            */
            my_error(ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG, MYF(0), "FLUSH");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_FLUSH; lex->type=0;
          lex->no_write_to_binlog= yyvsp[0].num;
	}
    break;

  case 1354:
#line 6780 "sql_yacc.yy"
    {}
    break;

  case 1357:
#line 6788 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES; }
    break;

  case 1358:
#line 6788 "sql_yacc.yy"
    {}
    break;

  case 1359:
#line 6789 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK; }
    break;

  case 1360:
#line 6790 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1361:
#line 6791 "sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1362:
#line 6792 "sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1363:
#line 6793 "sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1364:
#line 6794 "sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1365:
#line 6795 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1366:
#line 6796 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1367:
#line 6797 "sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1368:
#line 6798 "sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1369:
#line 6801 "sql_yacc.yy"
    {;}
    break;

  case 1370:
#line 6802 "sql_yacc.yy"
    {;}
    break;

  case 1371:
#line 6806 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RESET; lex->type=0;
	}
    break;

  case 1372:
#line 6810 "sql_yacc.yy"
    {}
    break;

  case 1375:
#line 6818 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1376:
#line 6819 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1377:
#line 6820 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1378:
#line 6824 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->type=0;
	}
    break;

  case 1379:
#line 6828 "sql_yacc.yy"
    {}
    break;

  case 1381:
#line 6837 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_PURGE;
	   Lex->to_log = yyvsp[0].lex_str.str;
        }
    break;

  case 1382:
#line 6842 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front(yyvsp[0].item);
	  lex->sql_command= SQLCOM_PURGE_BEFORE;
	}
    break;

  case 1383:
#line 6854 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front(yyvsp[0].item);
          lex->sql_command= SQLCOM_KILL;
	}
    break;

  case 1384:
#line 6862 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1385:
#line 6863 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1386:
#line 6864 "sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1387:
#line 6869 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_CHANGE_DB;
	  lex->select_lex.db= yyvsp[0].lex_str.str;
	}
    break;

  case 1388:
#line 6878 "sql_yacc.yy"
    {
          LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD DATA");
	    YYABORT;
	  }
          lex->fname_start= lex->ptr;
        }
    break;

  case 1389:
#line 6888 "sql_yacc.yy"
    {}
    break;

  case 1390:
#line 6891 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD TABLE");
	    YYABORT;
	  }
          lex->sql_command = SQLCOM_LOAD_MASTER_TABLE;
          if (!Select->add_table_to_list(YYTHD, yyvsp[-2].table, NULL, TL_OPTION_UPDATING))
            YYABORT;
        }
    break;

  case 1391:
#line 6905 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_LOAD;
	  lex->lock_option= yyvsp[-3].lock_type;
	  lex->local_file=  yyvsp[-2].num;
	  lex->duplicates= DUP_ERROR;
	  lex->ignore= 0;
	  if (!(lex->exchange= new sql_exchange(yyvsp[0].lex_str.str, 0)))
	    YYABORT;
        }
    break;

  case 1392:
#line 6916 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fname_end= lex->ptr;
	}
    break;

  case 1393:
#line 6921 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          if (!Select->add_table_to_list(YYTHD, yyvsp[0].table, NULL, TL_OPTION_UPDATING,
                                         lex->lock_option))
            YYABORT;
          lex->field_list.empty();
          lex->update_list.empty();
          lex->value_list.empty();
        }
    break;

  case 1394:
#line 6932 "sql_yacc.yy"
    {}
    break;

  case 1395:
#line 6935 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_LOAD_MASTER_DATA;
        }
    break;

  case 1396:
#line 6940 "sql_yacc.yy"
    { yyval.num=0;}
    break;

  case 1397:
#line 6941 "sql_yacc.yy"
    { yyval.num=1;}
    break;

  case 1398:
#line 6944 "sql_yacc.yy"
    { yyval.lock_type= YYTHD->update_lock_default; }
    break;

  case 1399:
#line 6945 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_CONCURRENT_INSERT ; }
    break;

  case 1400:
#line 6946 "sql_yacc.yy"
    { yyval.lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1401:
#line 6950 "sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1402:
#line 6951 "sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1403:
#line 6952 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1408:
#line 6964 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= yyvsp[0].string;
          }
    break;

  case 1409:
#line 6969 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= yyvsp[0].string;
            lex->exchange->opt_enclosed= 1;
	  }
    break;

  case 1410:
#line 6976 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= yyvsp[0].string;
          }
    break;

  case 1411:
#line 6981 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= yyvsp[0].string;
          }
    break;

  case 1416:
#line 6996 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= yyvsp[0].string;
          }
    break;

  case 1417:
#line 7001 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= yyvsp[0].string;
          }
    break;

  case 1419:
#line 7009 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol(yyvsp[-1].lex_str.str);
          }
    break;

  case 1420:
#line 7015 "sql_yacc.yy"
    { }
    break;

  case 1421:
#line 7016 "sql_yacc.yy"
    { }
    break;

  case 1422:
#line 7017 "sql_yacc.yy"
    { }
    break;

  case 1423:
#line 7021 "sql_yacc.yy"
    { Lex->field_list.push_back(yyvsp[0].item); }
    break;

  case 1424:
#line 7023 "sql_yacc.yy"
    { Lex->field_list.push_back(yyvsp[0].item); }
    break;

  case 1425:
#line 7027 "sql_yacc.yy"
    {yyval.item= yyvsp[0].item;}
    break;

  case 1426:
#line 7029 "sql_yacc.yy"
    { yyval.item= new Item_user_var_as_out_param(yyvsp[0].lex_str); }
    break;

  case 1427:
#line 7033 "sql_yacc.yy"
    { }
    break;

  case 1428:
#line 7034 "sql_yacc.yy"
    { }
    break;

  case 1429:
#line 7041 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  yyval.item = new Item_string(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,thd->variables.collation_connection);
	}
    break;

  case 1430:
#line 7046 "sql_yacc.yy"
    { yyval.item=  new Item_string(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,national_charset_info); }
    break;

  case 1431:
#line 7048 "sql_yacc.yy"
    { yyval.item = new Item_string(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,Lex->charset); }
    break;

  case 1432:
#line 7050 "sql_yacc.yy"
    { ((Item_string*) yyvsp[-1].item)->append(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length); }
    break;

  case 1433:
#line 7055 "sql_yacc.yy"
    { yyval.string=  new (YYTHD->mem_root) String(yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,YYTHD->variables.collation_connection); }
    break;

  case 1434:
#line 7057 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    yyval.string= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	  }
    break;

  case 1435:
#line 7068 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    yyval.string= tmp ? tmp->quick_fix_field(), tmp->val_str((String*) 0) :
		      (String*) 0;
          }
    break;

  case 1436:
#line 7081 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
	  LEX *lex= thd->lex;
          Item_param *item= new Item_param((uint) (lex->tok_start -
                                                   (uchar *) thd->query));
          if (!(yyval.item= item) || lex->param_list.push_back(item))
          {
            my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
            YYABORT;
          }
        }
    break;

  case 1437:
#line 7095 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item; }
    break;

  case 1438:
#line 7096 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item_num; }
    break;

  case 1439:
#line 7098 "sql_yacc.yy"
    {
	    yyvsp[0].item_num->max_length++;
	    yyval.item= yyvsp[0].item_num->neg();
	  }
    break;

  case 1440:
#line 7106 "sql_yacc.yy"
    { yyval.item =	yyvsp[0].item; }
    break;

  case 1441:
#line 7107 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item_num; }
    break;

  case 1442:
#line 7108 "sql_yacc.yy"
    { yyval.item =	new Item_null();
			  Lex->next_state=MY_LEX_OPERATOR_OR_IDENT;}
    break;

  case 1443:
#line 7110 "sql_yacc.yy"
    { yyval.item= new Item_int((char*) "FALSE",0,1); }
    break;

  case 1444:
#line 7111 "sql_yacc.yy"
    { yyval.item= new Item_int((char*) "TRUE",1,1); }
    break;

  case 1445:
#line 7112 "sql_yacc.yy"
    { yyval.item =	new Item_hex_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);}
    break;

  case 1446:
#line 7113 "sql_yacc.yy"
    { yyval.item= new Item_bin_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length); }
    break;

  case 1447:
#line 7115 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    yyval.item= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
	  }
    break;

  case 1448:
#line 7129 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    yyval.item= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
          }
    break;

  case 1449:
#line 7142 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item; }
    break;

  case 1450:
#line 7143 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item; }
    break;

  case 1451:
#line 7144 "sql_yacc.yy"
    { yyval.item = yyvsp[0].item; }
    break;

  case 1452:
#line 7147 "sql_yacc.yy"
    { int error; yyval.item_num = new Item_int(yyvsp[0].lex_str.str, (longlong) my_strtoll10(yyvsp[0].lex_str.str, NULL, &error), yyvsp[0].lex_str.length); }
    break;

  case 1453:
#line 7148 "sql_yacc.yy"
    { int error; yyval.item_num = new Item_int(yyvsp[0].lex_str.str, (longlong) my_strtoll10(yyvsp[0].lex_str.str, NULL, &error), yyvsp[0].lex_str.length); }
    break;

  case 1454:
#line 7149 "sql_yacc.yy"
    { yyval.item_num =	new Item_uint(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length); }
    break;

  case 1455:
#line 7151 "sql_yacc.yy"
    {
           yyval.item_num= new Item_decimal(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, YYTHD->charset());
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1456:
#line 7159 "sql_yacc.yy"
    {
	   yyval.item_num =	new Item_float(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1457:
#line 7173 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 1458:
#line 7174 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 1459:
#line 7178 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  yyval.item = new Item_field(Lex->current_context(), NullS, yyvsp[-2].lex_str.str, "*");
	  sel->with_wild++;
	}
    break;

  case 1460:
#line 7184 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  yyval.item = new Item_field(Lex->current_context(), (YYTHD->client_capabilities &
                             CLIENT_NO_SCHEMA ? NullS : yyvsp[-4].lex_str.str),
                             yyvsp[-2].lex_str.str,"*");
	  sel->with_wild++;
	}
    break;

  case 1461:
#line 7194 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 1462:
#line 7198 "sql_yacc.yy"
    {
	  sp_pvar_t *spv;
	  LEX *lex = Lex;
          sp_pcontext *spc = lex->spcont;
	  if (spc && (spv = spc->find_pvar(&yyvsp[0].lex_str)))
	  {
            /* We're compiling a stored procedure and found a variable */
            Item_splocal *splocal;
            splocal= new Item_splocal(yyvsp[0].lex_str, spv->offset, spv->type,
                                      lex->tok_start_prev - 
                                      lex->sphead->m_tmp_query);
#ifndef DBUG_OFF
            if (splocal)
              splocal->m_sp= lex->sphead;
#endif
	    yyval.item = (Item*) splocal;
            lex->variables_used= 1;
	    lex->safe_to_cache_query=0;
	  }
	  else
	  {
	    SELECT_LEX *sel=Select;
	    yyval.item= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
                 (Item*) new Item_field(Lex->current_context(), NullS, NullS, yyvsp[0].lex_str.str) :
	         (Item*) new Item_ref(Lex->current_context(), NullS, NullS, yyvsp[0].lex_str.str);
	  }
        }
    break;

  case 1463:
#line 7226 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 1464:
#line 7231 "sql_yacc.yy"
    {
	  SELECT_LEX *sel=Select;
	  yyval.item= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
              (Item*) new Item_field(Lex->current_context(), NullS, NullS, yyvsp[0].lex_str.str) :
	      (Item*) new Item_ref(Lex->current_context(), NullS, NullS, yyvsp[0].lex_str.str);
	}
    break;

  case 1465:
#line 7238 "sql_yacc.yy"
    { yyval.item= yyvsp[0].item; }
    break;

  case 1466:
#line 7243 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;

          /*
            FIXME This will work ok in simple_ident_nospvar case because
            we can't meet simple_ident_nospvar in trigger now. But it
            should be changed in future.
          */
          if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
              (!my_strcasecmp(system_charset_info, yyvsp[-2].lex_str.str, "NEW") ||
               !my_strcasecmp(system_charset_info, yyvsp[-2].lex_str.str, "OLD")))
          {
            Item_trigger_field *trg_fld;
            bool new_row= (yyvsp[-2].lex_str.str[0]=='N' || yyvsp[-2].lex_str.str[0]=='n');

            if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                !new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
              YYABORT;
            }

            if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
              YYABORT;
            }

            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  new_row ?
                                                  Item_trigger_field::NEW_ROW:
                                                  Item_trigger_field::OLD_ROW,
                                                  yyvsp[0].lex_str.str)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field objects
              in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
              (byte**)&trg_fld->next_trg_field);

            yyval.item= (Item *)trg_fld;
          }
          else
          {
	    SELECT_LEX *sel= lex->current_select;
	    if (sel->no_table_names_allowed)
	    {
	      my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), yyvsp[-2].lex_str.str, thd->where);
	    }
	    yyval.item= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
	        (Item*) new Item_field(Lex->current_context(), NullS, yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str) :
	        (Item*) new Item_ref(Lex->current_context(), NullS, yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str);
          }
        }
    break;

  case 1467:
#line 7304 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), yyvsp[-2].lex_str.str, thd->where);
	  }
	  yyval.item= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(), NullS, yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str) :
              (Item*) new Item_ref(Lex->current_context(), NullS, yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str);
	}
    break;

  case 1468:
#line 7319 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), yyvsp[-2].lex_str.str, thd->where);
	  }
	  yyval.item= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(),
                                     (YYTHD->client_capabilities &
				      CLIENT_NO_SCHEMA ? NullS : yyvsp[-4].lex_str.str),
				     yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str) :
	      (Item*) new Item_ref(Lex->current_context(),
                                   (YYTHD->client_capabilities &
				    CLIENT_NO_SCHEMA ? NullS : yyvsp[-4].lex_str.str),
                                   yyvsp[-2].lex_str.str, yyvsp[0].lex_str.str);
	}
    break;

  case 1469:
#line 7342 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str;}
    break;

  case 1470:
#line 7344 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, yyvsp[-4].lex_str.str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), yyvsp[-4].lex_str.str);
              YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, yyvsp[-2].lex_str.str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), yyvsp[-2].lex_str.str);
              YYABORT;
            }
            yyval.lex_str=yyvsp[0].lex_str;
          }
    break;

  case 1471:
#line 7360 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, yyvsp[-2].lex_str.str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), yyvsp[-2].lex_str.str);
              YYABORT;
            }
            yyval.lex_str=yyvsp[0].lex_str;
          }
    break;

  case 1472:
#line 7369 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str;}
    break;

  case 1473:
#line 7372 "sql_yacc.yy"
    { yyval.table=new Table_ident(yyvsp[0].lex_str); }
    break;

  case 1474:
#line 7373 "sql_yacc.yy"
    { yyval.table=new Table_ident(YYTHD, yyvsp[-2].lex_str,yyvsp[0].lex_str,0);}
    break;

  case 1475:
#line 7374 "sql_yacc.yy"
    { yyval.table=new Table_ident(yyvsp[0].lex_str);}
    break;

  case 1476:
#line 7378 "sql_yacc.yy"
    { LEX_STRING db={(char*) any_db,3}; yyval.table=new Table_ident(YYTHD, db,yyvsp[0].lex_str,0); }
    break;

  case 1477:
#line 7382 "sql_yacc.yy"
    { yyval.lex_str= yyvsp[0].lex_str; }
    break;

  case 1478:
#line 7384 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, yyvsp[0].lex_str.str,
                                                   yyvsp[0].lex_str.str+yyvsp[0].lex_str.length,
                                                   yyvsp[0].lex_str.length, &dummy_error);
              if (wlen < yyvsp[0].lex_str.length)
              {
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, yyvsp[0].lex_str.str + wlen);
                YYABORT;
              }
	      yyval.lex_str= yyvsp[0].lex_str;
            }
	    else
	      thd->convert_string(&yyval.lex_str, system_charset_info,
				  yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, thd->charset());
	  }
    break;

  case 1479:
#line 7409 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_system_charset)
	    yyval.lex_str= yyvsp[0].lex_str;
	  else
	    thd->convert_string(&yyval.lex_str, system_charset_info,
				yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, thd->charset());
	}
    break;

  case 1480:
#line 7421 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_collation_connection)
	    yyval.lex_str= yyvsp[0].lex_str;
	  else
	    thd->convert_string(&yyval.lex_str, thd->variables.collation_connection,
				yyvsp[0].lex_str.str, yyvsp[0].lex_str.length, thd->charset());
	}
    break;

  case 1481:
#line 7433 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 1482:
#line 7435 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  yyval.lex_str.str=    thd->strmake(yyvsp[0].symbol.str, yyvsp[0].symbol.length);
	  yyval.lex_str.length= yyvsp[0].symbol.length;
	}
    break;

  case 1483:
#line 7443 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str; }
    break;

  case 1484:
#line 7445 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  yyval.lex_str.str=    thd->strmake(yyvsp[0].symbol.str, yyvsp[0].symbol.length);
	  yyval.lex_str.length= yyvsp[0].symbol.length;
	}
    break;

  case 1485:
#line 7453 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str;}
    break;

  case 1486:
#line 7454 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str;}
    break;

  case 1487:
#line 7455 "sql_yacc.yy"
    { yyval.lex_str=yyvsp[0].lex_str;}
    break;

  case 1488:
#line 7459 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (!(yyval.lex_user=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	    YYABORT;
	  yyval.lex_user->user = yyvsp[0].lex_str;
	  yyval.lex_user->host.str= (char *) "%";
	  yyval.lex_user->host.length= 1;
	}
    break;

  case 1489:
#line 7468 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (!(yyval.lex_user=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	      YYABORT;
	    yyval.lex_user->user = yyvsp[-2].lex_str; yyval.lex_user->host=yyvsp[0].lex_str;
	  }
    break;

  case 1490:
#line 7475 "sql_yacc.yy"
    {
          THD *thd= YYTHD;
          Security_context *sctx= thd->security_ctx;
          if (!(yyval.lex_user=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
            YYABORT;
          yyval.lex_user->user.str= sctx->priv_user;
          yyval.lex_user->user.length= strlen(sctx->priv_user);
          if (*sctx->priv_host != 0)
          {
            yyval.lex_user->host.str= sctx->priv_host;
            yyval.lex_user->host.length= strlen(sctx->priv_host);
          }
          else
          {
            yyval.lex_user->host.str= (char *) "%";
            yyval.lex_user->host.length= 1;
          }
	}
    break;

  case 1491:
#line 7496 "sql_yacc.yy"
    {}
    break;

  case 1492:
#line 7497 "sql_yacc.yy"
    {}
    break;

  case 1493:
#line 7498 "sql_yacc.yy"
    {}
    break;

  case 1494:
#line 7499 "sql_yacc.yy"
    {}
    break;

  case 1495:
#line 7500 "sql_yacc.yy"
    {}
    break;

  case 1496:
#line 7501 "sql_yacc.yy"
    {}
    break;

  case 1497:
#line 7502 "sql_yacc.yy"
    {}
    break;

  case 1498:
#line 7503 "sql_yacc.yy"
    {}
    break;

  case 1499:
#line 7504 "sql_yacc.yy"
    {}
    break;

  case 1500:
#line 7505 "sql_yacc.yy"
    {}
    break;

  case 1501:
#line 7506 "sql_yacc.yy"
    {}
    break;

  case 1502:
#line 7507 "sql_yacc.yy"
    {}
    break;

  case 1503:
#line 7508 "sql_yacc.yy"
    {}
    break;

  case 1504:
#line 7509 "sql_yacc.yy"
    {}
    break;

  case 1505:
#line 7510 "sql_yacc.yy"
    {}
    break;

  case 1506:
#line 7511 "sql_yacc.yy"
    {}
    break;

  case 1507:
#line 7512 "sql_yacc.yy"
    {}
    break;

  case 1508:
#line 7513 "sql_yacc.yy"
    {}
    break;

  case 1509:
#line 7514 "sql_yacc.yy"
    {}
    break;

  case 1510:
#line 7515 "sql_yacc.yy"
    {}
    break;

  case 1511:
#line 7516 "sql_yacc.yy"
    {}
    break;

  case 1512:
#line 7517 "sql_yacc.yy"
    {}
    break;

  case 1513:
#line 7518 "sql_yacc.yy"
    {}
    break;

  case 1514:
#line 7519 "sql_yacc.yy"
    {}
    break;

  case 1515:
#line 7520 "sql_yacc.yy"
    {}
    break;

  case 1516:
#line 7521 "sql_yacc.yy"
    {}
    break;

  case 1517:
#line 7522 "sql_yacc.yy"
    {}
    break;

  case 1518:
#line 7523 "sql_yacc.yy"
    {}
    break;

  case 1519:
#line 7524 "sql_yacc.yy"
    {}
    break;

  case 1520:
#line 7525 "sql_yacc.yy"
    {}
    break;

  case 1521:
#line 7526 "sql_yacc.yy"
    {}
    break;

  case 1522:
#line 7527 "sql_yacc.yy"
    {}
    break;

  case 1523:
#line 7528 "sql_yacc.yy"
    {}
    break;

  case 1524:
#line 7529 "sql_yacc.yy"
    {}
    break;

  case 1525:
#line 7530 "sql_yacc.yy"
    {}
    break;

  case 1526:
#line 7531 "sql_yacc.yy"
    {}
    break;

  case 1527:
#line 7541 "sql_yacc.yy"
    {}
    break;

  case 1528:
#line 7542 "sql_yacc.yy"
    {}
    break;

  case 1529:
#line 7543 "sql_yacc.yy"
    {}
    break;

  case 1530:
#line 7544 "sql_yacc.yy"
    {}
    break;

  case 1531:
#line 7545 "sql_yacc.yy"
    {}
    break;

  case 1532:
#line 7546 "sql_yacc.yy"
    {}
    break;

  case 1533:
#line 7547 "sql_yacc.yy"
    {}
    break;

  case 1534:
#line 7548 "sql_yacc.yy"
    {}
    break;

  case 1535:
#line 7549 "sql_yacc.yy"
    {}
    break;

  case 1536:
#line 7550 "sql_yacc.yy"
    {}
    break;

  case 1537:
#line 7551 "sql_yacc.yy"
    {}
    break;

  case 1538:
#line 7552 "sql_yacc.yy"
    {}
    break;

  case 1539:
#line 7553 "sql_yacc.yy"
    {}
    break;

  case 1540:
#line 7554 "sql_yacc.yy"
    {}
    break;

  case 1541:
#line 7555 "sql_yacc.yy"
    {}
    break;

  case 1542:
#line 7556 "sql_yacc.yy"
    {}
    break;

  case 1543:
#line 7557 "sql_yacc.yy"
    {}
    break;

  case 1544:
#line 7558 "sql_yacc.yy"
    {}
    break;

  case 1545:
#line 7559 "sql_yacc.yy"
    {}
    break;

  case 1546:
#line 7560 "sql_yacc.yy"
    {}
    break;

  case 1547:
#line 7561 "sql_yacc.yy"
    {}
    break;

  case 1548:
#line 7562 "sql_yacc.yy"
    {}
    break;

  case 1549:
#line 7563 "sql_yacc.yy"
    {}
    break;

  case 1550:
#line 7564 "sql_yacc.yy"
    {}
    break;

  case 1551:
#line 7565 "sql_yacc.yy"
    {}
    break;

  case 1552:
#line 7566 "sql_yacc.yy"
    {}
    break;

  case 1553:
#line 7567 "sql_yacc.yy"
    {}
    break;

  case 1554:
#line 7568 "sql_yacc.yy"
    {}
    break;

  case 1555:
#line 7569 "sql_yacc.yy"
    {}
    break;

  case 1556:
#line 7570 "sql_yacc.yy"
    {}
    break;

  case 1557:
#line 7571 "sql_yacc.yy"
    {}
    break;

  case 1558:
#line 7572 "sql_yacc.yy"
    {}
    break;

  case 1559:
#line 7573 "sql_yacc.yy"
    {}
    break;

  case 1560:
#line 7574 "sql_yacc.yy"
    {}
    break;

  case 1561:
#line 7575 "sql_yacc.yy"
    {}
    break;

  case 1562:
#line 7576 "sql_yacc.yy"
    {}
    break;

  case 1563:
#line 7577 "sql_yacc.yy"
    {}
    break;

  case 1564:
#line 7578 "sql_yacc.yy"
    {}
    break;

  case 1565:
#line 7579 "sql_yacc.yy"
    {}
    break;

  case 1566:
#line 7580 "sql_yacc.yy"
    {}
    break;

  case 1567:
#line 7581 "sql_yacc.yy"
    {}
    break;

  case 1568:
#line 7582 "sql_yacc.yy"
    {}
    break;

  case 1569:
#line 7583 "sql_yacc.yy"
    {}
    break;

  case 1570:
#line 7584 "sql_yacc.yy"
    {}
    break;

  case 1571:
#line 7585 "sql_yacc.yy"
    {}
    break;

  case 1572:
#line 7586 "sql_yacc.yy"
    {}
    break;

  case 1573:
#line 7587 "sql_yacc.yy"
    {}
    break;

  case 1574:
#line 7588 "sql_yacc.yy"
    {}
    break;

  case 1575:
#line 7589 "sql_yacc.yy"
    {}
    break;

  case 1576:
#line 7590 "sql_yacc.yy"
    {}
    break;

  case 1577:
#line 7591 "sql_yacc.yy"
    {}
    break;

  case 1578:
#line 7592 "sql_yacc.yy"
    {}
    break;

  case 1579:
#line 7593 "sql_yacc.yy"
    {}
    break;

  case 1580:
#line 7594 "sql_yacc.yy"
    {}
    break;

  case 1581:
#line 7595 "sql_yacc.yy"
    {}
    break;

  case 1582:
#line 7596 "sql_yacc.yy"
    {}
    break;

  case 1583:
#line 7597 "sql_yacc.yy"
    {}
    break;

  case 1584:
#line 7598 "sql_yacc.yy"
    {}
    break;

  case 1585:
#line 7599 "sql_yacc.yy"
    {}
    break;

  case 1586:
#line 7600 "sql_yacc.yy"
    {}
    break;

  case 1587:
#line 7601 "sql_yacc.yy"
    {}
    break;

  case 1588:
#line 7602 "sql_yacc.yy"
    {}
    break;

  case 1589:
#line 7603 "sql_yacc.yy"
    {}
    break;

  case 1590:
#line 7604 "sql_yacc.yy"
    {}
    break;

  case 1591:
#line 7605 "sql_yacc.yy"
    {}
    break;

  case 1592:
#line 7606 "sql_yacc.yy"
    {}
    break;

  case 1593:
#line 7607 "sql_yacc.yy"
    {}
    break;

  case 1594:
#line 7608 "sql_yacc.yy"
    {}
    break;

  case 1595:
#line 7609 "sql_yacc.yy"
    {}
    break;

  case 1596:
#line 7610 "sql_yacc.yy"
    {}
    break;

  case 1597:
#line 7611 "sql_yacc.yy"
    {}
    break;

  case 1598:
#line 7612 "sql_yacc.yy"
    {}
    break;

  case 1599:
#line 7613 "sql_yacc.yy"
    {}
    break;

  case 1600:
#line 7614 "sql_yacc.yy"
    {}
    break;

  case 1601:
#line 7615 "sql_yacc.yy"
    {}
    break;

  case 1602:
#line 7616 "sql_yacc.yy"
    {}
    break;

  case 1603:
#line 7617 "sql_yacc.yy"
    {}
    break;

  case 1604:
#line 7618 "sql_yacc.yy"
    {}
    break;

  case 1605:
#line 7619 "sql_yacc.yy"
    {}
    break;

  case 1606:
#line 7620 "sql_yacc.yy"
    {}
    break;

  case 1607:
#line 7621 "sql_yacc.yy"
    {}
    break;

  case 1608:
#line 7622 "sql_yacc.yy"
    {}
    break;

  case 1609:
#line 7623 "sql_yacc.yy"
    {}
    break;

  case 1610:
#line 7624 "sql_yacc.yy"
    {}
    break;

  case 1611:
#line 7625 "sql_yacc.yy"
    {}
    break;

  case 1612:
#line 7626 "sql_yacc.yy"
    {}
    break;

  case 1613:
#line 7627 "sql_yacc.yy"
    {}
    break;

  case 1614:
#line 7628 "sql_yacc.yy"
    {}
    break;

  case 1615:
#line 7629 "sql_yacc.yy"
    {}
    break;

  case 1616:
#line 7630 "sql_yacc.yy"
    {}
    break;

  case 1617:
#line 7631 "sql_yacc.yy"
    {}
    break;

  case 1618:
#line 7632 "sql_yacc.yy"
    {}
    break;

  case 1619:
#line 7633 "sql_yacc.yy"
    {}
    break;

  case 1620:
#line 7634 "sql_yacc.yy"
    {}
    break;

  case 1621:
#line 7635 "sql_yacc.yy"
    {}
    break;

  case 1622:
#line 7636 "sql_yacc.yy"
    {}
    break;

  case 1623:
#line 7637 "sql_yacc.yy"
    {}
    break;

  case 1624:
#line 7638 "sql_yacc.yy"
    {}
    break;

  case 1625:
#line 7639 "sql_yacc.yy"
    {}
    break;

  case 1626:
#line 7640 "sql_yacc.yy"
    {}
    break;

  case 1627:
#line 7641 "sql_yacc.yy"
    {}
    break;

  case 1628:
#line 7642 "sql_yacc.yy"
    {}
    break;

  case 1629:
#line 7643 "sql_yacc.yy"
    {}
    break;

  case 1630:
#line 7644 "sql_yacc.yy"
    {}
    break;

  case 1631:
#line 7645 "sql_yacc.yy"
    {}
    break;

  case 1632:
#line 7646 "sql_yacc.yy"
    {}
    break;

  case 1633:
#line 7647 "sql_yacc.yy"
    {}
    break;

  case 1634:
#line 7648 "sql_yacc.yy"
    {}
    break;

  case 1635:
#line 7649 "sql_yacc.yy"
    {}
    break;

  case 1636:
#line 7650 "sql_yacc.yy"
    {}
    break;

  case 1637:
#line 7651 "sql_yacc.yy"
    {}
    break;

  case 1638:
#line 7652 "sql_yacc.yy"
    {}
    break;

  case 1639:
#line 7653 "sql_yacc.yy"
    {}
    break;

  case 1640:
#line 7654 "sql_yacc.yy"
    {}
    break;

  case 1641:
#line 7655 "sql_yacc.yy"
    {}
    break;

  case 1642:
#line 7656 "sql_yacc.yy"
    {}
    break;

  case 1643:
#line 7657 "sql_yacc.yy"
    {}
    break;

  case 1644:
#line 7658 "sql_yacc.yy"
    {}
    break;

  case 1645:
#line 7659 "sql_yacc.yy"
    {}
    break;

  case 1646:
#line 7660 "sql_yacc.yy"
    {}
    break;

  case 1647:
#line 7661 "sql_yacc.yy"
    {}
    break;

  case 1648:
#line 7662 "sql_yacc.yy"
    {}
    break;

  case 1649:
#line 7663 "sql_yacc.yy"
    {}
    break;

  case 1650:
#line 7664 "sql_yacc.yy"
    {}
    break;

  case 1651:
#line 7665 "sql_yacc.yy"
    {}
    break;

  case 1652:
#line 7666 "sql_yacc.yy"
    {}
    break;

  case 1653:
#line 7667 "sql_yacc.yy"
    {}
    break;

  case 1654:
#line 7668 "sql_yacc.yy"
    {}
    break;

  case 1655:
#line 7669 "sql_yacc.yy"
    {}
    break;

  case 1656:
#line 7670 "sql_yacc.yy"
    {}
    break;

  case 1657:
#line 7671 "sql_yacc.yy"
    {}
    break;

  case 1658:
#line 7672 "sql_yacc.yy"
    {}
    break;

  case 1659:
#line 7673 "sql_yacc.yy"
    {}
    break;

  case 1660:
#line 7674 "sql_yacc.yy"
    {}
    break;

  case 1661:
#line 7675 "sql_yacc.yy"
    {}
    break;

  case 1662:
#line 7676 "sql_yacc.yy"
    {}
    break;

  case 1663:
#line 7677 "sql_yacc.yy"
    {}
    break;

  case 1664:
#line 7678 "sql_yacc.yy"
    {}
    break;

  case 1665:
#line 7679 "sql_yacc.yy"
    {}
    break;

  case 1666:
#line 7680 "sql_yacc.yy"
    {}
    break;

  case 1667:
#line 7681 "sql_yacc.yy"
    {}
    break;

  case 1668:
#line 7682 "sql_yacc.yy"
    {}
    break;

  case 1669:
#line 7683 "sql_yacc.yy"
    {}
    break;

  case 1670:
#line 7684 "sql_yacc.yy"
    {}
    break;

  case 1671:
#line 7685 "sql_yacc.yy"
    {}
    break;

  case 1672:
#line 7686 "sql_yacc.yy"
    {}
    break;

  case 1673:
#line 7687 "sql_yacc.yy"
    {}
    break;

  case 1674:
#line 7688 "sql_yacc.yy"
    {}
    break;

  case 1675:
#line 7689 "sql_yacc.yy"
    {}
    break;

  case 1676:
#line 7690 "sql_yacc.yy"
    {}
    break;

  case 1677:
#line 7691 "sql_yacc.yy"
    {}
    break;

  case 1678:
#line 7692 "sql_yacc.yy"
    {}
    break;

  case 1679:
#line 7693 "sql_yacc.yy"
    {}
    break;

  case 1680:
#line 7694 "sql_yacc.yy"
    {}
    break;

  case 1681:
#line 7695 "sql_yacc.yy"
    {}
    break;

  case 1682:
#line 7696 "sql_yacc.yy"
    {}
    break;

  case 1683:
#line 7697 "sql_yacc.yy"
    {}
    break;

  case 1684:
#line 7698 "sql_yacc.yy"
    {}
    break;

  case 1685:
#line 7699 "sql_yacc.yy"
    {}
    break;

  case 1686:
#line 7700 "sql_yacc.yy"
    {}
    break;

  case 1687:
#line 7701 "sql_yacc.yy"
    {}
    break;

  case 1688:
#line 7702 "sql_yacc.yy"
    {}
    break;

  case 1689:
#line 7703 "sql_yacc.yy"
    {}
    break;

  case 1690:
#line 7704 "sql_yacc.yy"
    {}
    break;

  case 1691:
#line 7705 "sql_yacc.yy"
    {}
    break;

  case 1692:
#line 7706 "sql_yacc.yy"
    {}
    break;

  case 1693:
#line 7707 "sql_yacc.yy"
    {}
    break;

  case 1694:
#line 7708 "sql_yacc.yy"
    {}
    break;

  case 1695:
#line 7709 "sql_yacc.yy"
    {}
    break;

  case 1696:
#line 7710 "sql_yacc.yy"
    {}
    break;

  case 1697:
#line 7711 "sql_yacc.yy"
    {}
    break;

  case 1698:
#line 7712 "sql_yacc.yy"
    {}
    break;

  case 1699:
#line 7713 "sql_yacc.yy"
    {}
    break;

  case 1700:
#line 7714 "sql_yacc.yy"
    {}
    break;

  case 1701:
#line 7715 "sql_yacc.yy"
    {}
    break;

  case 1702:
#line 7716 "sql_yacc.yy"
    {}
    break;

  case 1703:
#line 7717 "sql_yacc.yy"
    {}
    break;

  case 1704:
#line 7718 "sql_yacc.yy"
    {}
    break;

  case 1705:
#line 7719 "sql_yacc.yy"
    {}
    break;

  case 1706:
#line 7720 "sql_yacc.yy"
    {}
    break;

  case 1707:
#line 7721 "sql_yacc.yy"
    {}
    break;

  case 1708:
#line 7722 "sql_yacc.yy"
    {}
    break;

  case 1709:
#line 7723 "sql_yacc.yy"
    {}
    break;

  case 1710:
#line 7724 "sql_yacc.yy"
    {}
    break;

  case 1711:
#line 7725 "sql_yacc.yy"
    {}
    break;

  case 1712:
#line 7726 "sql_yacc.yy"
    {}
    break;

  case 1713:
#line 7727 "sql_yacc.yy"
    {}
    break;

  case 1714:
#line 7728 "sql_yacc.yy"
    {}
    break;

  case 1715:
#line 7729 "sql_yacc.yy"
    {}
    break;

  case 1716:
#line 7730 "sql_yacc.yy"
    {}
    break;

  case 1717:
#line 7731 "sql_yacc.yy"
    {}
    break;

  case 1718:
#line 7732 "sql_yacc.yy"
    {}
    break;

  case 1719:
#line 7733 "sql_yacc.yy"
    {}
    break;

  case 1720:
#line 7734 "sql_yacc.yy"
    {}
    break;

  case 1721:
#line 7735 "sql_yacc.yy"
    {}
    break;

  case 1722:
#line 7736 "sql_yacc.yy"
    {}
    break;

  case 1723:
#line 7737 "sql_yacc.yy"
    {}
    break;

  case 1724:
#line 7738 "sql_yacc.yy"
    {}
    break;

  case 1725:
#line 7739 "sql_yacc.yy"
    {}
    break;

  case 1726:
#line 7740 "sql_yacc.yy"
    {}
    break;

  case 1727:
#line 7741 "sql_yacc.yy"
    {}
    break;

  case 1728:
#line 7742 "sql_yacc.yy"
    {}
    break;

  case 1729:
#line 7743 "sql_yacc.yy"
    {}
    break;

  case 1730:
#line 7744 "sql_yacc.yy"
    {}
    break;

  case 1731:
#line 7745 "sql_yacc.yy"
    {}
    break;

  case 1732:
#line 7746 "sql_yacc.yy"
    {}
    break;

  case 1733:
#line 7747 "sql_yacc.yy"
    {}
    break;

  case 1734:
#line 7748 "sql_yacc.yy"
    {}
    break;

  case 1735:
#line 7749 "sql_yacc.yy"
    {}
    break;

  case 1736:
#line 7750 "sql_yacc.yy"
    {}
    break;

  case 1737:
#line 7751 "sql_yacc.yy"
    {}
    break;

  case 1738:
#line 7752 "sql_yacc.yy"
    {}
    break;

  case 1739:
#line 7759 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SET_OPTION;
	  mysql_init_select(lex);
	  lex->option_type=OPT_SESSION;
	  lex->var_list.empty();
          lex->one_shot_set= 0;
	}
    break;

  case 1740:
#line 7768 "sql_yacc.yy"
    {}
    break;

  case 1741:
#line 7772 "sql_yacc.yy"
    {}
    break;

  case 1742:
#line 7773 "sql_yacc.yy"
    {}
    break;

  case 1745:
#line 7780 "sql_yacc.yy"
    {
          if (Lex->sphead)
          {
            /*
              If we are in SP we want have own LEX for each assignment.
              This is mostly because it is hard for several sp_instr_set
              and sp_instr_set_trigger instructions share one LEX.
              (Well, it is theoretically possible but adds some extra
               overhead on preparation for execution stage and IMO less
               robust).

              QQ: May be we should simply prohibit group assignments in SP?
            */
            LEX *lex;
            Lex->sphead->reset_lex(YYTHD);
            lex= Lex;

            /* Set new LEX as if we at start of set rule. */
	    lex->sql_command= SQLCOM_SET_OPTION;
	    mysql_init_select(lex);
	    lex->option_type=OPT_SESSION;
	    lex->var_list.empty();
            lex->one_shot_set= 0;
	    lex->sphead->m_tmp_query= lex->tok_start;
          }
        }
    break;

  case 1746:
#line 7807 "sql_yacc.yy"
    {
          LEX *lex= Lex;

          if (lex->sphead)
          {
            sp_head *sp= lex->sphead;

	    if (!lex->var_list.is_empty())
	    {
              /*
                We have assignment to user or system variable or
                option setting, so we should construct sp_instr_stmt
                for it.
              */
              LEX_STRING qbuff;
	      sp_instr_stmt *i;

              if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                         lex)))
                YYABORT;

              if (lex->ptr - lex->tok_end > 1)
                qbuff.length= lex->ptr - sp->m_tmp_query;
              else
                qbuff.length= lex->tok_end - sp->m_tmp_query;

              if (!(qbuff.str= alloc_root(YYTHD->mem_root, qbuff.length + 5)))
                YYABORT;

              strmake(strmake(qbuff.str, "SET ", 4), (char *)sp->m_tmp_query,
                      qbuff.length);
              qbuff.length+= 4;
              i->m_query= qbuff;
              sp->add_instr(i);
            }
            lex->sphead->restore_lex(YYTHD);
          }
        }
    break;

  case 1747:
#line 7847 "sql_yacc.yy"
    {}
    break;

  case 1748:
#line 7848 "sql_yacc.yy"
    { yyval.var_type=OPT_GLOBAL; }
    break;

  case 1749:
#line 7849 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1750:
#line 7850 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1751:
#line 7854 "sql_yacc.yy"
    { yyval.num= OPT_DEFAULT; }
    break;

  case 1752:
#line 7855 "sql_yacc.yy"
    { Lex->one_shot_set= 1; yyval.num= OPT_SESSION; }
    break;

  case 1753:
#line 7859 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1754:
#line 7860 "sql_yacc.yy"
    { yyval.var_type=OPT_GLOBAL; }
    break;

  case 1755:
#line 7861 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1756:
#line 7862 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1757:
#line 7866 "sql_yacc.yy"
    { yyval.var_type=OPT_DEFAULT; }
    break;

  case 1758:
#line 7867 "sql_yacc.yy"
    { yyval.var_type=OPT_GLOBAL; }
    break;

  case 1759:
#line 7868 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1760:
#line 7869 "sql_yacc.yy"
    { yyval.var_type=OPT_SESSION; }
    break;

  case 1763:
#line 7878 "sql_yacc.yy"
    {
          LEX *lex=Lex;

          if (yyvsp[-2].variable.var == &trg_new_row_fake_var)
          {
            /* We are in trigger and assigning value to field of new row */
            Item *it;
            Item_trigger_field *trg_fld;
            sp_instr_set_trigger_field *sp_fld;
	    LINT_INIT(sp_fld);
            if (yyvsp[-3].var_type)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (yyvsp[0].item)
              it= yyvsp[0].item;
            else
            {
              /* QQ: Shouldn't this be field's default value ? */
              it= new Item_null();
            }

            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  Item_trigger_field::NEW_ROW,
                                                  yyvsp[-2].variable.base_name.str)) ||
                !(sp_fld= new sp_instr_set_trigger_field(lex->sphead->
                          	                         instructions(),
                                	                 lex->spcont,
							 trg_fld,
                                        	         it, lex)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field
              objects in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
                                    (byte **)&trg_fld->next_trg_field);

            lex->sphead->add_instr(sp_fld);
          }
          else if (yyvsp[-2].variable.var)
          { /* System variable */
            if (yyvsp[-3].var_type)
              lex->option_type= yyvsp[-3].var_type;
            lex->var_list.push_back(new set_var(lex->option_type, yyvsp[-2].variable.var,
                                    &yyvsp[-2].variable.base_name, yyvsp[0].item));
          }
          else
          {
            /* An SP local variable */
            sp_pcontext *ctx= lex->spcont;
            sp_pvar_t *spv;
            sp_instr_set *sp_set;
            Item *it;
            if (yyvsp[-3].var_type)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }

            spv= ctx->find_pvar(&yyvsp[-2].variable.base_name);

            if (yyvsp[0].item)
              it= yyvsp[0].item;
            else if (spv->dflt)
              it= spv->dflt;
            else
              it= new Item_null();
            sp_set= new sp_instr_set(lex->sphead->instructions(), ctx,
                                     spv->offset, it, spv->type, lex, TRUE);
            lex->sphead->add_instr(sp_set);
          }
        }
    break;

  case 1764:
#line 7954 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if (yyvsp[-4].var_type)
            lex->option_type= yyvsp[-4].var_type;
	  lex->var_list.push_back(new set_var(lex->option_type,
                                              find_sys_var("tx_isolation"),
                                              &null_lex_str,
                                              new Item_int((int32) yyvsp[0].tx_isolation)));
	}
    break;

  case 1765:
#line 7967 "sql_yacc.yy"
    {
          Lex->var_list.push_back(new set_var_user(new Item_func_set_user_var(yyvsp[-2].lex_str,yyvsp[0].item)));
	}
    break;

  case 1766:
#line 7971 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->var_list.push_back(new set_var(yyvsp[-3].var_type, yyvsp[-2].variable.var, &yyvsp[-2].variable.base_name, yyvsp[0].item));
	  }
    break;

  case 1767:
#line 7976 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= Lex;
	  yyvsp[0].charset= yyvsp[0].charset ? yyvsp[0].charset: global_system_variables.character_set_client;
	  lex->var_list.push_back(new set_var_collation_client(yyvsp[0].charset,thd->variables.collation_database,yyvsp[0].charset));
	}
    break;

  case 1768:
#line 7983 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING names;

	    names.str= (char *)"names";
	    names.length= 5;
	    if (spc && spc->find_pvar(&names))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              yyerror(ER(ER_SYNTAX_ERROR));

	    YYABORT;
	  }
    break;

  case 1769:
#line 7998 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  yyvsp[-1].charset= yyvsp[-1].charset ? yyvsp[-1].charset : global_system_variables.character_set_client;
	  yyvsp[0].charset= yyvsp[0].charset ? yyvsp[0].charset : yyvsp[-1].charset;
	  if (!my_charset_same(yyvsp[-1].charset,yyvsp[0].charset))
	  {
	    my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                     yyvsp[0].charset->name, yyvsp[-1].charset->csname);
	    YYABORT;
	  }
	  lex->var_list.push_back(new set_var_collation_client(yyvsp[0].charset,yyvsp[0].charset,yyvsp[0].charset));
	}
    break;

  case 1770:
#line 8011 "sql_yacc.yy"
    {
	    THD *thd=YYTHD;
	    LEX_USER *user;
	    LEX *lex= Lex;	    
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING pw;

	    pw.str= (char *)"password";
	    pw.length= 8;
	    if (spc && spc->find_pvar(&pw))
	    {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
	      YYABORT;
	    }
	    if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
	      YYABORT;
	    user->host=null_lex_str;
	    user->user.str=thd->security_ctx->priv_user;
	    thd->lex->var_list.push_back(new set_var_password(user, yyvsp[0].simple_string));
	  }
    break;

  case 1771:
#line 8032 "sql_yacc.yy"
    {
	    Lex->var_list.push_back(new set_var_password(yyvsp[-2].lex_user,yyvsp[0].simple_string));
	  }
    break;

  case 1772:
#line 8039 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          sp_pcontext *spc= lex->spcont;
	  sp_pvar_t *spv;

	  /* We have to lookup here since local vars can shadow sysvars */
	  if (!spc || !(spv = spc->find_pvar(&yyvsp[0].lex_str)))
	  {
            /* Not an SP local variable */
	    sys_var *tmp=find_sys_var(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    if (!tmp)
	      YYABORT;
	    yyval.variable.var= tmp;
	    yyval.variable.base_name= null_lex_str;
            /*
              If this is time_zone variable we should open time zone
              describing tables 
            */
            if (tmp == &sys_time_zone &&
                lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
            else if (spc && tmp == &sys_autocommit)
            {
              /*
                We don't allow setting AUTOCOMMIT from a stored function
		or trigger.
              */
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            }
	  }
	  else
	  {
            /* An SP local variable */
	    yyval.variable.var= NULL;
	    yyval.variable.base_name= yyvsp[0].lex_str;
	  }
	}
    break;

  case 1773:
#line 8077 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&yyvsp[-2].lex_str))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, yyvsp[-2].lex_str.str, "NEW") || 
                 !my_strcasecmp(system_charset_info, yyvsp[-2].lex_str.str, "OLD")))
            {
              if (yyvsp[-2].lex_str.str[0]=='O' || yyvsp[-2].lex_str.str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                YYABORT;
              }
              /* This special combination will denote field of NEW row */
              yyval.variable.var= &trg_new_row_fake_var;
              yyval.variable.base_name= yyvsp[0].lex_str;
            }
            else
            {
              sys_var *tmp=find_sys_var(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
              if (!tmp)
                YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), yyvsp[0].lex_str.str);
              yyval.variable.var= tmp;
              yyval.variable.base_name= yyvsp[-2].lex_str;
            }
	  }
    break;

  case 1774:
#line 8120 "sql_yacc.yy"
    {
	    sys_var *tmp=find_sys_var(yyvsp[0].lex_str.str, yyvsp[0].lex_str.length);
	    if (!tmp)
	      YYABORT;
	    if (!tmp->is_struct())
	      my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), yyvsp[0].lex_str.str);
	    yyval.variable.var= tmp;
	    yyval.variable.base_name.str=    (char*) "default";
	    yyval.variable.base_name.length= 7;
	  }
    break;

  case 1775:
#line 8133 "sql_yacc.yy"
    { yyval.tx_isolation= ISO_READ_UNCOMMITTED; }
    break;

  case 1776:
#line 8134 "sql_yacc.yy"
    { yyval.tx_isolation= ISO_READ_COMMITTED; }
    break;

  case 1777:
#line 8135 "sql_yacc.yy"
    { yyval.tx_isolation= ISO_REPEATABLE_READ; }
    break;

  case 1778:
#line 8136 "sql_yacc.yy"
    { yyval.tx_isolation= ISO_SERIALIZABLE; }
    break;

  case 1779:
#line 8140 "sql_yacc.yy"
    { yyval.simple_string=yyvsp[0].lex_str.str;}
    break;

  case 1780:
#line 8142 "sql_yacc.yy"
    {
	    yyval.simple_string= yyvsp[-1].lex_str.length ? YYTHD->variables.old_passwords ?
	        Item_func_old_password::alloc(YYTHD, yyvsp[-1].lex_str.str) :
	        Item_func_password::alloc(YYTHD, yyvsp[-1].lex_str.str) :
	      yyvsp[-1].lex_str.str;
	  }
    break;

  case 1781:
#line 8149 "sql_yacc.yy"
    {
	    yyval.simple_string= yyvsp[-1].lex_str.length ? Item_func_old_password::alloc(YYTHD, yyvsp[-1].lex_str.str) :
	      yyvsp[-1].lex_str.str;
	  }
    break;

  case 1782:
#line 8157 "sql_yacc.yy"
    { yyval.item=yyvsp[0].item; }
    break;

  case 1783:
#line 8158 "sql_yacc.yy"
    { yyval.item=0; }
    break;

  case 1784:
#line 8159 "sql_yacc.yy"
    { yyval.item=new Item_string("ON",  2, system_charset_info); }
    break;

  case 1785:
#line 8160 "sql_yacc.yy"
    { yyval.item=new Item_string("ALL", 3, system_charset_info); }
    break;

  case 1786:
#line 8161 "sql_yacc.yy"
    { yyval.item=new Item_string("binary", 6, system_charset_info); }
    break;

  case 1787:
#line 8169 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_LOCK_TABLES;
	}
    break;

  case 1788:
#line 8180 "sql_yacc.yy"
    {}
    break;

  case 1793:
#line 8193 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, yyvsp[-2].table, yyvsp[-1].lex_str_ptr, 0, (thr_lock_type) yyvsp[0].num))
	   YYABORT;
	}
    break;

  case 1794:
#line 8200 "sql_yacc.yy"
    { yyval.num=TL_READ_NO_INSERT; }
    break;

  case 1795:
#line 8201 "sql_yacc.yy"
    { yyval.num=YYTHD->update_lock_default; }
    break;

  case 1796:
#line 8202 "sql_yacc.yy"
    { yyval.num=TL_WRITE_LOW_PRIORITY; }
    break;

  case 1797:
#line 8203 "sql_yacc.yy"
    { yyval.num= TL_READ; }
    break;

  case 1798:
#line 8208 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_UNLOCK_TABLES;
	}
    break;

  case 1799:
#line 8219 "sql_yacc.yy"
    {}
    break;

  case 1800:
#line 8229 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_OPEN;
	  if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[-2].table, yyvsp[0].lex_str_ptr, 0))
	    YYABORT;
	}
    break;

  case 1801:
#line 8241 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_CLOSE;
	  if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[-1].table, 0, 0))
	    YYABORT;
	}
    break;

  case 1802:
#line 8253 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_READ;
	  lex->ha_rkey_mode= HA_READ_KEY_EXACT;	/* Avoid purify warnings */
	  lex->current_select->select_limit= new Item_int((int32) 1);
	  lex->current_select->offset_limit= 0;
	  if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[-1].table, 0, 0))
	    YYABORT;
        }
    break;

  case 1803:
#line 8267 "sql_yacc.yy"
    {}
    break;

  case 1804:
#line 8271 "sql_yacc.yy"
    { Lex->ident= null_lex_str; }
    break;

  case 1805:
#line 8272 "sql_yacc.yy"
    { Lex->ident= yyvsp[-1].lex_str; }
    break;

  case 1806:
#line 8276 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1807:
#line 8277 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1808:
#line 8281 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 1809:
#line 8282 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 1810:
#line 8283 "sql_yacc.yy"
    { Lex->ha_read_mode = RPREV;  }
    break;

  case 1811:
#line 8284 "sql_yacc.yy"
    { Lex->ha_read_mode = RLAST;  }
    break;

  case 1812:
#line 8286 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->ha_read_mode = RKEY;
	  lex->ha_rkey_mode=yyvsp[0].ha_rkey_mode;
	  if (!(lex->insert_list = new List_item))
	    YYABORT;
	}
    break;

  case 1813:
#line 8292 "sql_yacc.yy"
    { }
    break;

  case 1814:
#line 8296 "sql_yacc.yy"
    { yyval.ha_rkey_mode=HA_READ_KEY_EXACT;   }
    break;

  case 1815:
#line 8297 "sql_yacc.yy"
    { yyval.ha_rkey_mode=HA_READ_KEY_OR_NEXT; }
    break;

  case 1816:
#line 8298 "sql_yacc.yy"
    { yyval.ha_rkey_mode=HA_READ_KEY_OR_PREV; }
    break;

  case 1817:
#line 8299 "sql_yacc.yy"
    { yyval.ha_rkey_mode=HA_READ_AFTER_KEY;   }
    break;

  case 1818:
#line 8300 "sql_yacc.yy"
    { yyval.ha_rkey_mode=HA_READ_BEFORE_KEY;  }
    break;

  case 1819:
#line 8307 "sql_yacc.yy"
    {}
    break;

  case 1820:
#line 8312 "sql_yacc.yy"
    {
          LEX *lex= Lex;
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= 0;
        }
    break;

  case 1821:
#line 8319 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_FUNCTION;
          
        }
    break;

  case 1822:
#line 8332 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1823:
#line 8344 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_REVOKE_ALL;
	}
    break;

  case 1824:
#line 8351 "sql_yacc.yy"
    {}
    break;

  case 1825:
#line 8357 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_GRANT;
          lex->type= 0;
        }
    break;

  case 1826:
#line 8365 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_FUNCTION;
        }
    break;

  case 1827:
#line 8378 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 1830:
#line 8395 "sql_yacc.yy"
    { }
    break;

  case 1831:
#line 8397 "sql_yacc.yy"
    { 
          Lex->all_privileges= 1; 
          Lex->grant= GLOBAL_ACLS;
        }
    break;

  case 1836:
#line 8413 "sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 1837:
#line 8413 "sql_yacc.yy"
    {}
    break;

  case 1838:
#line 8414 "sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 1839:
#line 8414 "sql_yacc.yy"
    {}
    break;

  case 1840:
#line 8415 "sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 1841:
#line 8415 "sql_yacc.yy"
    {}
    break;

  case 1842:
#line 8416 "sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 1843:
#line 8416 "sql_yacc.yy"
    {}
    break;

  case 1844:
#line 8417 "sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 1845:
#line 8418 "sql_yacc.yy"
    {}
    break;

  case 1846:
#line 8419 "sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 1847:
#line 8420 "sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 1848:
#line 8421 "sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 1849:
#line 8422 "sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 1850:
#line 8423 "sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 1851:
#line 8424 "sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 1852:
#line 8425 "sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 1853:
#line 8426 "sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 1854:
#line 8427 "sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 1855:
#line 8428 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1856:
#line 8429 "sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 1857:
#line 8430 "sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 1858:
#line 8431 "sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 1859:
#line 8432 "sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 1860:
#line 8433 "sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 1861:
#line 8434 "sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 1862:
#line 8435 "sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 1863:
#line 8436 "sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 1864:
#line 8437 "sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 1865:
#line 8438 "sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 1866:
#line 8439 "sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 1867:
#line 8444 "sql_yacc.yy"
    {}
    break;

  case 1868:
#line 8445 "sql_yacc.yy"
    {}
    break;

  case 1871:
#line 8455 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_subject)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
	    YYABORT;
	  }
	  lex->x509_subject=yyvsp[0].lex_str.str;
	}
    break;

  case 1872:
#line 8465 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_issuer)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
	    YYABORT;
	  }
	  lex->x509_issuer=yyvsp[0].lex_str.str;
	}
    break;

  case 1873:
#line 8475 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->ssl_cipher)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
	    YYABORT;
	  }
	  lex->ssl_cipher=yyvsp[0].lex_str.str;
	}
    break;

  case 1874:
#line 8488 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db= lex->thd->db;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1875:
#line 8501 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = yyvsp[-2].lex_str.str;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1876:
#line 8514 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = NULL;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 1877:
#line 8527 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!lex->current_select->add_table_to_list(lex->thd, yyvsp[0].table,NULL,0))
	      YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant =  TABLE_ACLS & ~GRANT_ACL;
	  }
    break;

  case 1878:
#line 8538 "sql_yacc.yy"
    { if (Lex->users_list.push_back(yyvsp[0].lex_user)) YYABORT;}
    break;

  case 1879:
#line 8540 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back(yyvsp[0].lex_user))
	      YYABORT;
	  }
    break;

  case 1880:
#line 8548 "sql_yacc.yy"
    { if (Lex->users_list.push_back(yyvsp[0].lex_user)) YYABORT;}
    break;

  case 1881:
#line 8550 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back(yyvsp[0].lex_user))
	      YYABORT;
	  }
    break;

  case 1882:
#line 8559 "sql_yacc.yy"
    {
	   yyval.lex_user=yyvsp[-3].lex_user; yyvsp[-3].lex_user->password=yyvsp[0].lex_str;
	   if (yyvsp[0].lex_str.length)
	   {
             if (YYTHD->variables.old_passwords)
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
               if (buff)
                 make_scrambled_password_323(buff, yyvsp[0].lex_str.str);
               yyvsp[-3].lex_user->password.str= buff;
               yyvsp[-3].lex_user->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
             }
             else
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
               if (buff)
                 make_scrambled_password(buff, yyvsp[0].lex_str.str);
               yyvsp[-3].lex_user->password.str= buff;
               yyvsp[-3].lex_user->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
             }
	  }
	}
    break;

  case 1883:
#line 8584 "sql_yacc.yy"
    { yyval.lex_user= yyvsp[-4].lex_user; yyvsp[-4].lex_user->password= yyvsp[0].lex_str; }
    break;

  case 1884:
#line 8586 "sql_yacc.yy"
    { yyval.lex_user= yyvsp[0].lex_user; yyvsp[0].lex_user->password= null_lex_str; }
    break;

  case 1885:
#line 8592 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->grant |= lex->which_columns;
	}
    break;

  case 1889:
#line 8604 "sql_yacc.yy"
    {
	  String *new_str = new (YYTHD->mem_root) String((const char*) yyvsp[0].lex_str.str,yyvsp[0].lex_str.length,system_charset_info);
	  List_iterator <LEX_COLUMN> iter(Lex->columns);
	  class LEX_COLUMN *point;
	  LEX *lex=Lex;
	  while ((point=iter++))
	  {
	    if (!my_strcasecmp(system_charset_info,
                               point->column.ptr(), new_str->ptr()))
		break;
	  }
	  lex->grant_tot_col|= lex->which_columns;
	  if (point)
	    point->rights |= lex->which_columns;
	  else
	    lex->columns.push_back(new LEX_COLUMN (*new_str,lex->which_columns));
	}
    break;

  case 1891:
#line 8626 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 1892:
#line 8630 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 1893:
#line 8634 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 1894:
#line 8638 "sql_yacc.yy"
    {
	    Lex->ssl_type=SSL_TYPE_NONE;
	  }
    break;

  case 1895:
#line 8644 "sql_yacc.yy"
    {}
    break;

  case 1897:
#line 8648 "sql_yacc.yy"
    {}
    break;

  case 1898:
#line 8649 "sql_yacc.yy"
    {}
    break;

  case 1899:
#line 8653 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 1900:
#line 8655 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.questions=yyvsp[0].ulong_num;
	  lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
	}
    break;

  case 1901:
#line 8661 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.updates=yyvsp[0].ulong_num;
	  lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
	}
    break;

  case 1902:
#line 8667 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.conn_per_hour= yyvsp[0].ulong_num;
	  lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
	}
    break;

  case 1903:
#line 8673 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->mqh.user_conn= yyvsp[0].ulong_num;
          lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
	}
    break;

  case 1904:
#line 8682 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->sql_command = SQLCOM_BEGIN;
          lex->start_transaction_opt= 0;
        }
    break;

  case 1905:
#line 8687 "sql_yacc.yy"
    {}
    break;

  case 1906:
#line 8691 "sql_yacc.yy"
    {}
    break;

  case 1907:
#line 8692 "sql_yacc.yy"
    {}
    break;

  case 1908:
#line 8696 "sql_yacc.yy"
    { yyval.num= (YYTHD->variables.completion_type == 1); }
    break;

  case 1909:
#line 8697 "sql_yacc.yy"
    { yyval.num=0; }
    break;

  case 1910:
#line 8698 "sql_yacc.yy"
    { yyval.num=1; }
    break;

  case 1911:
#line 8702 "sql_yacc.yy"
    { yyval.num= (YYTHD->variables.completion_type == 2); }
    break;

  case 1912:
#line 8703 "sql_yacc.yy"
    { yyval.num=1; }
    break;

  case 1913:
#line 8704 "sql_yacc.yy"
    { yyval.num=0; }
    break;

  case 1914:
#line 8708 "sql_yacc.yy"
    {}
    break;

  case 1915:
#line 8709 "sql_yacc.yy"
    {}
    break;

  case 1916:
#line 8714 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_COMMIT;
	  lex->tx_chain= yyvsp[-1].num; 
	  lex->tx_release= yyvsp[0].num;
	}
    break;

  case 1917:
#line 8724 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK;
	  lex->tx_chain= yyvsp[-1].num; 
	  lex->tx_release= yyvsp[0].num;
	}
    break;

  case 1918:
#line 8732 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
	  lex->ident= yyvsp[0].lex_str;
	}
    break;

  case 1919:
#line 8741 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SAVEPOINT;
	  lex->ident= yyvsp[0].lex_str;
	}
    break;

  case 1920:
#line 8750 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
	  lex->ident= yyvsp[0].lex_str;
	}
    break;

  case 1921:
#line 8763 "sql_yacc.yy"
    {}
    break;

  case 1923:
#line 8769 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->exchange)
	  {
	    /* Only the last SELECT can have  INTO...... */
	    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (mysql_new_select(lex, 0))
	    YYABORT;
          mysql_init_select(lex);
	  lex->current_select->linkage=UNION_TYPE;
          if (yyvsp[0].num) /* UNION DISTINCT - remember position */
            lex->current_select->master_unit()->union_distinct=
                                                      lex->current_select;
	}
    break;

  case 1924:
#line 8791 "sql_yacc.yy"
    {
          /*
	    Remove from the name resolution context stack the context of the
            last select in the union.
	  */
          Lex->pop_context();
        }
    break;

  case 1925:
#line 8801 "sql_yacc.yy"
    { yyval.num= 0; }
    break;

  case 1926:
#line 8802 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 1927:
#line 8803 "sql_yacc.yy"
    { yyval.num= 1; }
    break;

  case 1928:
#line 8807 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
	    SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    SELECT_LEX *fake= unit->fake_select_lex;
	    if (fake)
	    {
	      unit->global_parameters= fake;
	      fake->no_table_names_allowed= 1;
	      lex->current_select= fake;
	    }
	    thd->where= "global ORDER clause";
	  }
    break;

  case 1929:
#line 8823 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    thd->lex->current_select->no_table_names_allowed= 0;
	    thd->where= "";
          }
    break;

  case 1932:
#line 8836 "sql_yacc.yy"
    { yyval.num=1; }
    break;

  case 1933:
#line 8837 "sql_yacc.yy"
    { yyval.num=1; }
    break;

  case 1934:
#line 8838 "sql_yacc.yy"
    { yyval.num=0; }
    break;

  case 1935:
#line 8844 "sql_yacc.yy"
    {
	  yyval.item= yyvsp[-1].item;
	}
    break;

  case 1936:
#line 8850 "sql_yacc.yy"
    {
	  yyval.item= new Item_singlerow_subselect(Lex->current_select->
					   master_unit()->first_select());
	}
    break;

  case 1937:
#line 8858 "sql_yacc.yy"
    {
	  yyval.item= yyvsp[-1].item;
	}
    break;

  case 1938:
#line 8864 "sql_yacc.yy"
    {
	  yyval.item= new Item_exists_subselect(Lex->current_select->master_unit()->
					first_select());
	}
    break;

  case 1939:
#line 8872 "sql_yacc.yy"
    {
    yyval.select_lex= yyvsp[-1].select_lex;
  }
    break;

  case 1940:
#line 8878 "sql_yacc.yy"
    {
    yyval.select_lex= Lex->current_select->master_unit()->first_select();
  }
    break;

  case 1941:
#line 8884 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (((int)lex->sql_command >= (int)SQLCOM_HA_OPEN &&
	       lex->sql_command <= (int)SQLCOM_HA_READ) ||
	       lex->sql_command == (int)SQLCOM_KILL)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (mysql_new_select(Lex, 1))
	    YYABORT;
	}
    break;

  case 1942:
#line 8899 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->pop_context();
	  lex->current_select = lex->current_select->return_after_parsing();
          lex->nest_level--;
	}
    break;

  case 1943:
#line 8908 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  
	  if (! (thd->lex->definer= create_definer(thd, &yyvsp[0].lex_user->user, &yyvsp[0].lex_user->host)))
	    YYABORT;
	}
    break;

  case 1944:
#line 8918 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
          
	  if (!(yyval.lex_user=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	    YYABORT;

	  if (get_default_definer(thd, yyval.lex_user))
	    YYABORT;
	}
    break;

  case 1945:
#line 8928 "sql_yacc.yy"
    {
	  if (!(yyval.lex_user=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
	    YYABORT;

	  yyval.lex_user->user= yyvsp[-2].lex_str;
	  yyval.lex_user->host= yyvsp[0].lex_str;
	}
    break;

  case 1948:
#line 8950 "sql_yacc.yy"
    {}
    break;

  case 1949:
#line 8952 "sql_yacc.yy"
    {}
    break;

  case 1950:
#line 8954 "sql_yacc.yy"
    {}
    break;

  case 1951:
#line 8959 "sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 1952:
#line 8964 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1953:
#line 8966 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 1954:
#line 8968 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 1955:
#line 8973 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 1956:
#line 8975 "sql_yacc.yy"
    {}
    break;

  case 1957:
#line 8980 "sql_yacc.yy"
    {}
    break;

  case 1958:
#line 8982 "sql_yacc.yy"
    {}
    break;

  case 1959:
#line 8987 "sql_yacc.yy"
    {}
    break;

  case 1960:
#line 8989 "sql_yacc.yy"
    {}
    break;

  case 1961:
#line 8994 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 1962:
#line 8996 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 1963:
#line 8998 "sql_yacc.yy"
    { Lex->create_view_suid= FALSE; }
    break;

  case 1964:
#line 9003 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_CREATE_VIEW;
	  /* first table in list is target VIEW name */
	  if (!lex->select_lex.add_table_to_list(thd, yyvsp[0].table, NULL, 0))
	    YYABORT;
	}
    break;

  case 1965:
#line 9012 "sql_yacc.yy"
    {}
    break;

  case 1966:
#line 9017 "sql_yacc.yy"
    {}
    break;

  case 1968:
#line 9023 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&yyvsp[0].lex_str, sizeof(LEX_STRING)));
	  }
    break;

  case 1969:
#line 9028 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&yyvsp[0].lex_str, sizeof(LEX_STRING)));
	  }
    break;

  case 1970:
#line 9036 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= yyvsp[-1].simple_string - stmt_beg;
	}
    break;

  case 1971:
#line 9045 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= yyvsp[-3].simple_string - stmt_beg;
	}
    break;

  case 1972:
#line 9057 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 1973:
#line 9059 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1974:
#line 9061 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 1975:
#line 9063 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 1976:
#line 9075 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;
	 
	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
	    YYABORT;
	  }
	
	  if (!(sp= new sp_head()))
	    YYABORT;
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);
	
	  lex->trigger_definition_begin= yyvsp[-8].simple_string;
	  
	  sp->m_type= TYPE_ENUM_TRIGGER;
	  lex->sphead= sp;
	  lex->spname= yyvsp[-7].spname;
	  /*
	    We have to turn of CLIENT_MULTI_QUERIES while parsing a
	    stored procedure, otherwise yylex will chop it into pieces
	    at each ';'.
	  */
	  sp->m_old_cmq= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	  
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->ptr;
	}
    break;

  case 1977:
#line 9108 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;
	  
	  lex->sql_command= SQLCOM_CREATE_TRIGGER;
	  sp->init_strings(YYTHD, lex, yyvsp[-9].spname);
	  /* Restore flag if it was cleared above */
	  if (sp->m_old_cmq)
	    YYTHD->client_capabilities |= CLIENT_MULTI_QUERIES;
	  sp->restore_thd_mem_root(YYTHD);
	
	  if (sp->is_not_allowed_in_function("trigger"))
	      YYABORT;
	
	  /*
	    We have to do it after parsing trigger body, because some of
	    sp_proc_stmt alternatives are not saving/restoring LEX, so
	    lex->query_tables can be wiped out.
	    
	    QQ: What are other consequences of this?
	    
	    QQ: Could we loosen lock type in certain cases ?
	  */
	  if (!lex->select_lex.add_table_to_list(YYTHD, yyvsp[-5].table, 
	                                         (LEX_STRING*) 0,
	                                         TL_OPTION_UPDATING,
	                                         TL_WRITE))
	    YYABORT;
	}
    break;

  case 1978:
#line 9142 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_START;
      }
    break;

  case 1979:
#line 9146 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_END;
      }
    break;

  case 1980:
#line 9150 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_PREPARE;
      }
    break;

  case 1981:
#line 9154 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_COMMIT;
      }
    break;

  case 1982:
#line 9158 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_ROLLBACK;
      }
    break;

  case 1983:
#line 9162 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_RECOVER;
      }
    break;

  case 1984:
#line 9168 "sql_yacc.yy"
    {
       YYERROR_UNLESS(yyvsp[0].string->length() <= MAXGTRIDSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, yyvsp[0].string->ptr(), yyvsp[0].string->length(), 0, 0);
     }
    break;

  case 1985:
#line 9175 "sql_yacc.yy"
    {
       YYERROR_UNLESS(yyvsp[-2].string->length() <= MAXGTRIDSIZE && yyvsp[0].string->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, yyvsp[-2].string->ptr(), yyvsp[-2].string->length(), yyvsp[0].string->ptr(), yyvsp[0].string->length());
     }
    break;

  case 1986:
#line 9182 "sql_yacc.yy"
    {
       YYERROR_UNLESS(yyvsp[-4].string->length() <= MAXGTRIDSIZE && yyvsp[-2].string->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(yyvsp[0].ulong_num, yyvsp[-4].string->ptr(), yyvsp[-4].string->length(), yyvsp[-2].string->ptr(), yyvsp[-2].string->length());
     }
    break;

  case 1987:
#line 9190 "sql_yacc.yy"
    {}
    break;

  case 1988:
#line 9191 "sql_yacc.yy"
    {}
    break;

  case 1989:
#line 9195 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1990:
#line 9196 "sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 1991:
#line 9197 "sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 1992:
#line 9201 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1993:
#line 9202 "sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 1994:
#line 9206 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 1995:
#line 9207 "sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 1997:
#line 9212 "sql_yacc.yy"
    { }
    break;

  case 1998:
#line 9213 "sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;


    }

/* Line 1000 of yacc.c.  */
#line 26818 "sql_yacc.cc"

  yyvsp -= yylen;
  yyssp -= yylen;


  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (YYPACT_NINF < yyn && yyn < YYLAST)
	{
	  YYSIZE_T yysize = 0;
	  int yytype = YYTRANSLATE (yychar);
	  const char* yyprefix;
	  char *yymsg;
	  int yyx;

	  /* Start YYX at -YYN if negative to avoid negative indexes in
	     YYCHECK.  */
	  int yyxbegin = yyn < 0 ? -yyn : 0;

	  /* Stay within bounds of both yycheck and yytname.  */
	  int yychecklim = YYLAST - yyn;
	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
	  int yycount = 0;

	  yyprefix = ", expecting ";
	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	      {
		yysize += yystrlen (yyprefix) + yystrlen (yytname [yyx]);
		yycount += 1;
		if (yycount == 5)
		  {
		    yysize = 0;
		    break;
		  }
	      }
	  yysize += (sizeof ("syntax error, unexpected ")
		     + yystrlen (yytname[yytype]));
	  yymsg = (char *) YYSTACK_ALLOC (yysize);
	  if (yymsg != 0)
	    {
	      char *yyp = yystpcpy (yymsg, "syntax error, unexpected ");
	      yyp = yystpcpy (yyp, yytname[yytype]);

	      if (yycount < 5)
		{
		  yyprefix = ", expecting ";
		  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
		    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
		      {
			yyp = yystpcpy (yyp, yyprefix);
			yyp = yystpcpy (yyp, yytname[yyx]);
			yyprefix = " or ";
		      }
		}
	      yyerror (yymsg);
	      YYSTACK_FREE (yymsg);
	    }
	  else
	    yyerror ("syntax error; also virtual memory exhausted");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror ("syntax error");
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* If at end of input, pop the error token,
	     then the rest of the stack, then return failure.  */
	  if (yychar == YYEOF)
	     for (;;)
	       {
		 YYPOPSTACK;
		 if (yyssp == yyss)
		   YYABORT;
		 YYDSYMPRINTF ("Error: popping", yystos[*yyssp], yyvsp, yylsp);
		 yydestruct (yystos[*yyssp], yyvsp);
	       }
        }
      else
	{
	  YYDSYMPRINTF ("Error: discarding", yytoken, &yylval, &yylloc);
	  yydestruct (yytoken, &yylval);
	  yychar = YYEMPTY;

	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

#ifdef __GNUC__
  /* Pacify GCC when the user code never invokes YYERROR and the label
     yyerrorlab therefore never appears in user code.  */
  if (0)
     goto yyerrorlab;
#endif

  yyvsp -= yylen;
  yyssp -= yylen;
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      YYDSYMPRINTF ("Error: popping", yystos[*yyssp], yyvsp, yylsp);
      yydestruct (yystos[yystate], yyvsp);
      YYPOPSTACK;
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  YYDPRINTF ((stderr, "Shifting error token, "));

  *++yyvsp = yylval;


  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*----------------------------------------------.
| yyoverflowlab -- parser overflow comes here.  |
`----------------------------------------------*/
yyoverflowlab:
  yyerror ("parser stack overflow");
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
  return yyresult;
}



